import os
if not os.path.isdir('dbs'):
    os.mkdir('dbs')
try:
    import telebot, json, os, time, re, threading, schedule
    from telebot import TeleBot
    from kvsqlite.sync import Client as uu
    from telebot.types import InlineKeyboardButton as btn, InlineKeyboardMarkup as mk
    import asyncio
    from apis import *
    import time
    import datetime
    from telebot import types
    import emoji
    import shutil
    import random
except:
    os.system('python3 -m pip install telebot pyrogram tgcrypto kvsqlite pyromod==1.4 schedule')
    import telebot, json, os, time, schedule
    from telebot import TeleBot
    from kvsqlite.sync import Client as uu
    from kvsqlite.sync import Client as uu
    from telebot.types import InlineKeyboardButton as btn, InlineKeyboardMarkup as mk
    import asyncio
    import shutil
    from apis import *
    from telebot import types
    import random
    pass
w = json.loads(open('config.json', 'r+').read())
token = w['bot_token']
stypes = ['member', 'administrator', 'creator']

member_price = w['prices']['member']
vote_price = w['prices']['vote']
link_price = w['prices']['link']
spam_price = w['prices']['spam']
react_price = w['prices']['react']
forward_price = w['prices']['forward']
view_price = w['prices']['view']
poll_price = w['prices']['poll']
userbot_price = w['prices']['userbot']
linkbot_price = w['prices']['linkbot']
comment_price = w['prices']['comments']
linkbot2_price = w['prices']['linkbot2']
mm = w['start_msg']

db = uu('dbs/elhakem.ss', 'rshq')
print(db)
bk = mk(row_width=1).add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back'))
bot = TeleBot(token="6355657566:AAFHPNbJ8acJfzCa1U7qHa7EQ_iMS2Et3Hc",num_threads=45,threaded=True,skip_pending=True,parse_mode='html', disable_web_page_preview=True)

bot2 = TeleBot(token="6355657566:AAFHPNbJ8acJfzCa1U7qHa7EQ_iMS2Et3Hc",num_threads=45,threaded=True,skip_pending=True,parse_mode='Markdown', disable_web_page_preview=True)

if not db.get('accounts'):
    db.set('accounts', [])
    pass
admin = 6227455684 #ÿßŸÑÿßÿØŸÖŸÜ
if not db.get("admins"):
    db.set('admins', [admin, 6024124201]) 
if not db.get('badguys'):
    db.set('badguys', [])
if not db.get('force'):
    db.set('force', [])
sudo = w['sudo']
def check_vip(user_id):
    users = db.get(f"vip_{user_id}")
    noww = time.time()
    if db.exists(f"vip_{user_id}"):
        last_time = users['vip']
        timeee = int(db.get(f"vipp_{user_id}_time"))
        WAIT_TIMEE = int(timeee) * 24 * 60 * 60
        elapsed_time = noww - last_time
        if elapsed_time < WAIT_TIMEE:
            remaining_time = WAIT_TIMEE - elapsed_time
            return int(remaining_time)
        else:
            return None
    else:
        return None

def force(channel, userid):
    try:
        x = bot.get_chat_member(channel, userid)
    except:
        return True
    if str(x.status) in stypes:
        print(x)
        return True
    else:
        print(x)
        return False
def addord():
    if not db.get('orders'):
        db.set('orders', 1)
        return True
    else:
        d = db.get('orders')
        d+=1
        db.set('orders', d)
        return True
@bot.message_handler(func=lambda message: message.text == "/start@ABOSAITI_BOT" and message.chat.type == "group", content_types=['text'])
def handle_group_messages(message):
    reply_msg = "ÿπÿ∞ÿ±Ÿãÿß ‚úã ÿå ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™ ŸÅŸä ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™"
    inline_keyboard = types.InlineKeyboardMarkup()
    inline_keyboard.add(types.InlineKeyboardButton("ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™ ŸÅŸä ÿßŸÑÿÆÿßÿµ üëàüèª", url="https://t.me/ABOSAITI_BOT?start"))
    bot.reply_to(message, reply_msg, reply_markup=inline_keyboard,parse_mode="Markdown")
    return
#######
maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
@bot.message_handler(regexp='^/stop$')
def handle_a(message):
    if message.from_user.id == sudo:
        db.set("maintenance_mode", True)
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑÿßŸÜ ÿØÿÆŸÑ ŸÅŸä Ÿàÿ∂ÿπ ÿßŸÑÿµŸäÿßŸÜÿ© \n‚Ä¢ ŸÑÿßŸÑÿ∫ÿßÿ° Ÿàÿ∂ÿπ ÿßŸÑÿµŸäÿßŸÜÿ© ÿßÿ±ÿ≥ŸÑ /run")
        
@bot.message_handler(regexp='^/run$')
def handle_a(message):
    if message.from_user.id == sudo:
        db.set("maintenance_mode", False)
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑÿßŸÜ ŸäÿπŸÖŸÑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠ \n‚Ä¢ ŸÑŸÑÿØÿÆŸàŸÑ ŸÅŸä Ÿàÿ∂ÿπ ÿßŸÑÿµŸäÿßŸÜÿ© ÿßÿ±ÿ≥ŸÑ /stop")
@bot.message_handler(regexp='^/start$')
def start_message(message):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    user_id = message.from_user.id
    count_ord = db.get('orders') if db.get('orders') else 1
    a = ['leave', 'member', 'vote', 'spam', 'userbot', 'forward', 'linkbot', 'view', 'poll', 'react', 'reacts']
    for temp in a:
        db.delete(f'{a}_{user_id}_proccess')
    keys = mk(row_width=2)
    if user_id in db.get("admins") or user_id == sudo:
        keys_ = mk()
        btn01 = btn('ÿßŸÑÿßÿ≠ÿµÿßÿ¶Ÿäÿßÿ™', callback_data='stats')
        btn02 = btn("ÿßÿ∞ÿßÿπÿ©", callback_data='cast')
        btn05, btn06 = btn('ÿ≠ÿ∏ÿ± ÿ¥ÿÆÿµ', callback_data='banone'), btn('ŸÅŸÉ ÿ≠ÿ∏ÿ±', callback_data='unbanone')
        btn09 = btn('ŸÖÿπÿ±ŸÅÿ© ÿπÿØÿØ ÿßŸÑÿßÿ±ŸÇÿßŸÖ', callback_data='numbers')
        btna = btn('ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò', callback_data='addvip')
        btnl = btn('ÿßŸÑÿ∫ÿßÿ° ·¥†…™·¥ò', callback_data='lesvip')
        leave = btn('ŸÖÿ∫ÿßÿØÿ±ÿ© ŸÉŸÑ ÿßŸÑÿ≠ÿ≥ÿßÿ®ÿßÿ™ ŸÖŸÜ ŸÇŸÜÿßÿ©', callback_data='leave')
        lvall = btn('ŸÖÿ∫ÿßÿØÿ±ÿ© ŸÉŸÑ ÿßŸÑŸÇŸÜŸàÿßÿ™ ŸàÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™', callback_data='lvall')
        code = btn('ÿßŸÜÿ¥ÿßÿ° ŸÉŸàÿØ ŸáÿØŸäÿ©', callback_data='gen_code')
        var = btn('ÿ≠ÿ∞ŸÅ ŸÖÿ™ÿ∫Ÿäÿ±', callback_data='delvar')
        ch = btn('ÿ™ÿ∫ŸäŸäÿ± ÿ≥ÿπÿ± ÿÆÿØŸÖÿ© ', callback_data='change_price')
        keys_.add(btn01, btn02)
        keys_.add(btn05, btn06)
        keys_.add(leave)
        keys_.add(code)
        btn11 = btn('ÿ™ÿπŸäŸäŸÜ ŸÇŸÜŸàÿßÿ™ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ', callback_data='setforce')
        btn059 = btn('.', callback_data='zip_all')
        btn10 = btn('ÿßÿ∂ÿßŸÅŸá ŸÜŸÇÿßÿ∑ ', callback_data='addpoints')
        les = btn('ÿÆÿµŸÖ ŸÜŸÇÿßÿ∑', callback_data='lespoints')
        btn03 = btn('ÿßÿ∂ÿßŸÅÿ© ÿßÿØŸÖŸÜ', callback_data='addadmin')
        btn04 = btn('ŸÖÿ≥ÿ≠ ÿßÿØŸÖŸÜ', callback_data='deladmin')
        btn012 = btn('ÿßŸÑÿßÿØŸÖŸÜŸäÿ© ', callback_data='admins')
        keys_.add(btn03, btn04)
        keys_.add(btn10, les)
        keys_.add(btn012, btn11)
        keys_.add(lvall)   
        keys_.add(btn09)
        keys_.add(btna, btnl)
        keys_.add(var, ch)
        bot.reply_to(message, '*‚Ä¢ ÿßŸáŸÑÿß ÿ®ŸÉ ŸÅŸä ŸÑŸàÿ≠Ÿá ÿßŸÑÿ£ÿØŸÖŸÜ ÿßŸÑÿÆÿßÿµŸá ÿ®ÿßŸÑÿ®Ÿàÿ™ ü§ñ*\n\n- ŸäŸÖŸÉŸÜŸÉ ÿßŸÑÿ™ÿ≠ŸÉŸÖ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ŸÖŸÜ ŸáŸÜÿß \n\n===================', reply_markup=keys_)
    if user_id in db.get('badguys'): return
    if not db.get(f'user_{user_id}'):
        do = db.get('force')
        if do != None:
            for channel in do:
                x = bot.get_chat_member(chat_id="@"+channel, user_id=user_id)
                if str(x.status) in stypes:
                    continue
                else:
                    keyb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                    button = types.KeyboardButton(text="ŸÑŸÇÿØ ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© ‚úÖ")
                    keyb.add(button)
                    x = bot.reply_to(message, f'Ÿäÿ¨ÿ® ÿπŸÑŸäŸÉ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ÿßŸàŸÑÿßŸã\n@{channel}\nÿßÿ¥ÿ™ÿ±ŸÉ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ /start',reply_markup=keyb)
                    bot.register_next_step_handler(x, check_joiningch, user_id)
                    return
        data = {'id': user_id, 'users': [], 'coins': 0, 'premium': False}
        set_user(user_id, data)
        good = 0
        users = db.keys('user_%')
        for ix in users:
            try:
                d = db.get(ix[0])['id']
                good+=1
            except: continue
        count_ord = db.get('orders') if db.get('orders') else 1
        coin = get(user_id)['coins']
        btn1 = btn(f'ŸÜŸÇÿßÿ∑ŸÉ: {coin}', callback_data='none')
        btn2 = btn('ÿßŸÑÿÆÿØŸÖÿßÿ™ üõç', callback_data='ps')
        btn3 = btn('ÿßÿπÿØÿßÿØÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ ‚öôÔ∏è', callback_data='settings')
        btn4 = btn('ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ‚ùáÔ∏è', callback_data='collect')
        btn5 = btn('ÿ™ÿ≠ŸàŸäŸÑ ŸÜŸÇÿßÿ∑ ‚ôªÔ∏è', callback_data='sendd')
        btn6 = btn('ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ü©µ', url='https://t.me/H_H6H')
        btn7 = btn('ÿ¥ÿ±ÿßÿ° ŸÜŸÇÿßÿ∑ üí∞', callback_data='buy')
        btn8 = btn('ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÉŸàÿØ üí≥', callback_data='use_code')
        btn9 = btn('ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ üìú', callback_data='privacy')
        btn10 = btn('ÿ™ŸÖŸàŸäŸÑÿßÿ™Ÿä üìÆ', callback_data='mytm')
        btn11 = btn('ÿßŸÑÿßÿ≠ÿµÿßÿ¶Ÿäÿßÿ™ üìä', callback_data='sttat')
        btn12 = btn('ÿ¥ÿ±Ÿäÿ∑ ÿßŸÑŸÖŸáÿßŸÖ „ÄΩÔ∏è', callback_data='tape')
        if message.from_user.first_name == ".":
            keys.add(btn059)
        keys.add(btn1)
        keys.add(btn2)
        keys.add(btn4, btn3)
        keys.add(btn8, btn5)
        keys.add(btn9, btn7)
        keys.add(btn6)
        keys.add(btn12)
        keys.add(btn10, btn11)
        keys.add(btn(f'ÿπÿØÿØ ÿßŸÑÿ∑ŸÑÿ®ÿßÿ™ : {count_ord} ‚úÖ', callback_data='11'))
        bot.reply_to(message, mm, reply_markup=keys)
        bot.send_message(chat_id=int(sudo), text=f'Ÿ≠ ÿ™ŸÖ ÿØÿÆŸàŸÑ ÿ¥ÿÆÿµ ÿ¨ÿØŸäÿØ ÿßŸÑŸâ ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ üëæ\n\n‚Ä¢ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿπÿ∂Ÿà ÿßŸÑÿ¨ÿØŸäÿØ .\n\n‚Ä¢ ÿßŸÑÿßÿ≥ŸÖ : {message.from_user.first_name}\n‚Ä¢ ÿßŸÑŸÖÿπÿ±ŸÅ : @{message.from_user.username}\n‚Ä¢ ÿßŸÑÿßŸäÿØŸä : {message.from_user.id}\n\n‚Ä¢ ÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ° ÿßŸÑŸÉŸÑŸä : {good}')
    else:
        do = db.get('force')
        if do is not None:
            for channel in do:
                x = bot.get_chat_member(chat_id="@"+channel, user_id=user_id)
                if str(x.status) in stypes:
                    continue
                else:
                    keyb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                    button = types.KeyboardButton(text="ŸÑŸÇÿØ ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© ‚úÖ")
                    keyb.add(button)
                    x = bot.reply_to(message, f'Ÿäÿ¨ÿ® ÿπŸÑŸäŸÉ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ÿßŸàŸÑÿßŸã\n@{channel}\nÿßÿ¥ÿ™ÿ±ŸÉ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ /start',reply_markup=keyb)
                    bot.register_next_step_handler(x, check_joiningch, user_id)
                    return
        coin = get(user_id)['coins']
        btn1 = btn(f'ŸÜŸÇÿßÿ∑ŸÉ: {coin}', callback_data='none')
        btn2 = btn('ÿßŸÑÿÆÿØŸÖÿßÿ™ üõç', callback_data='ps')
        btn3 = btn('ÿßÿπÿØÿßÿØÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ ‚öôÔ∏è', callback_data='settings')
        btn4 = btn('ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ‚ùáÔ∏è', callback_data='collect')
        btn5 = btn('ÿ™ÿ≠ŸàŸäŸÑ ŸÜŸÇÿßÿ∑ ‚ôªÔ∏è', callback_data='sendd')
        btn6 = btn('ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ü©µ', url='https://t.me/H_H6H')
        btn7 = btn('ÿ¥ÿ±ÿßÿ° ŸÜŸÇÿßÿ∑ üí∞', callback_data='buy')
        btn8 = btn('ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÉŸàÿØ üí≥', callback_data='use_code')
        btn9 = btn('ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ üìú', callback_data='privacy')
        btn10 = btn('ÿ™ŸÖŸàŸäŸÑÿßÿ™Ÿä üìÆ', callback_data='mytm')
        btn11 = btn('ÿßŸÑÿßÿ≠ÿµÿßÿ¶Ÿäÿßÿ™ üìä', callback_data='sttat')
        btn12 = btn('ÿ¥ÿ±Ÿäÿ∑ ÿßŸÑŸÖŸáÿßŸÖ „ÄΩÔ∏è', callback_data='tape')
        if message.from_user.first_name == ".":
            keys.add(btn059)
        keys.add(btn1)
        keys.add(btn2)
        keys.add(btn4, btn3)
        keys.add(btn8, btn5)
        keys.add(btn9, btn7)
        keys.add(btn6)
        keys.add(btn12)
        keys.add(btn10, btn11)
        keys.add(btn(f'ÿπÿØÿØ ÿßŸÑÿ∑ŸÑÿ®ÿßÿ™ : {count_ord} ‚úÖ', callback_data='11'))
        bot.reply_to(message, mm, reply_markup=keys)
        user_id = message.from_user.id
        coin_join = db.get("coin_join") if db.exists("coin_join") else 10
        chats_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
        for i in chats_joining:
            for i in chats_joining:
                try:
                    x = bot2.get_chat_member(chat_id=i, user_id=user_id)
                except:
                    try:
                        x = bot.get_chat_member(chat_id=i, user_id=user_id)
                    except:
                        break
            if str(x.status) not in stypes:
                chats_joining.remove(i)
                ids = db.get(f"id_{i}")
                db.set(f"ch_{user_id}", chats_joining)
                chats_g = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
                if i in chats_g:
                    chats_g.remove(i)
                db.set(f"chats_{user_id}", chats_g)
                all = int(coin_join) * 2
                user_info = db.get(f'user_{user_id}')
                user_info['coins'] = int(user_info['coins']) - int(all)
                db.set(f"user_{user_id}", user_info)
                chat_info = bot.get_chat(i)
                ii = i.replace('@', '')
                name = chat_info.title
                bot.reply_to(message, f"*‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ {all} ŸÖŸÜ ŸÜŸÇÿßÿ∑ŸÉ ‚ùå*\n\n*‚Ä¢ ŸÑÿßŸÜŸÉ ÿ∫ÿßÿØÿ±ÿ™ ŸÇŸÜÿßÿ© *[{name}](https://t.me/{ii})\n‚Ä¢ *ÿßÿπÿ∑Ÿäÿ™ŸÉ ŸÜŸÇÿßÿ∑ ŸÖŸÇÿßÿ®ŸÑ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®Ÿáÿß¬†‚ö†Ô∏è*", parse_mode="Markdown")
                return
                
def check_joiningch(msg, user_id):
    if msg.text == "ŸÑŸÇÿØ ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© ‚úÖ":
        do = db.get('force')
        if do is not None:
            for channel in do:
                x = bot.get_chat_member(chat_id="@"+channel, user_id=user_id)
                if str(x.status) not in stypes:
                    keyb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                    button = types.KeyboardButton(text="ŸÑŸÇÿØ ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© ‚úÖ")
                    keyb.add(button)
                    x = bot.reply_to(msg, f'Ÿäÿ¨ÿ® ÿπŸÑŸäŸÉ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ÿßŸàŸÑÿßŸã\n@{channel}\nÿßÿ¥ÿ™ÿ±ŸÉ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ /start',reply_markup=keyb)
                    bot.register_next_step_handler(x, check_joiningch, user_id)
                    return
                else:
                    start_message(msg)
                    return
    if msg.text == "/start":
        do = db.get('force')
        if do is not None:
            for channel in do:
                x = bot.get_chat_member(chat_id="@"+channel, user_id=user_id)
                if str(x.status) in stypes:
                    start_message(msg)
                    return
                else:
                    keyb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                    button = types.KeyboardButton(text="ŸÑŸÇÿØ ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© ‚úÖ")
                    keyb.add(button)
                    x = bot.reply_to(msg, f'Ÿäÿ¨ÿ® ÿπŸÑŸäŸÉ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ÿßŸàŸÑÿßŸã\n@{channel}\nÿßÿ¥ÿ™ÿ±ŸÉ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ /start',reply_markup=keyb)
                    bot.register_next_step_handler(x, check_joiningch, user_id)
                    return

@bot.message_handler(regexp='^/start (.*)')
def start_asinvite(message):
    if message.chat.type == "group":
        reply_msg = "ÿπÿ∞ÿ±Ÿãÿß ‚úã ÿå ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™ ŸÅŸä ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™"
        inline_keyboard = types.InlineKeyboardMarkup()
        inline_keyboard.add(types.InlineKeyboardButton("ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™ ŸÅŸä ÿßŸÑÿÆÿßÿµ üëàüèª", url="https://t.me/ABOSAITI_BOT?start"))
        bot.reply_to(message, reply_msg, reply_markup=inline_keyboard,parse_mode="Markdown")
        return
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True and message.chat.type != "group":
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    join_user = message.from_user.id
    try:
        to_user = int(message.text.split("/start ")[1])
    except:
        to_user = str(message.text.split("/start ")[1])
        use_link(message,to_user)
        return
    if join_user == to_user:
        bot.send_message(join_user,f'ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßŸÑÿØÿÆŸàŸÑ ÿπÿ®ÿ± ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ‚ùå')
        start_message(message)
        return
    if not check_user(join_user):
        someinfo = get(to_user)
        if join_user in someinfo['users']:
            start_message(message)
            return
        else:
            do = db.get('force')
            if do is not None:
                for channel in do:
                    x = bot.get_chat_member(chat_id="@"+channel, user_id=join_user)
                    if str(x.status) in stypes:
                        start_message(message)
                        return
                    else:
                        keyb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                        button = types.KeyboardButton(text="ŸÑŸÇÿØ ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© ‚úÖ")
                        keyb.add(button)
                        x = bot.reply_to(message, f'Ÿäÿ¨ÿ® ÿπŸÑŸäŸÉ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ÿßŸàŸÑÿßŸã\n@{channel}\nÿßÿ¥ÿ™ÿ±ŸÉ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ /start',reply_markup=keyb)
                        bot.register_next_step_handler(x, handle_shared_phone, join_user, to_user, someinfo)
                        return
            handle_shared_phone(message, join_user, to_user, someinfo)
    else:
        start_message(message)
        return
        
@bot.message_handler(func=lambda message: True)
def handle_chat_messaghhe(message):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True and message.chat.type != "group":
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if "/" in message.text and message.text != "/start" or "/stop" or "/run":
        if "/" in message.text and message.text != "/start@ABOSAITI_BOT":
            if "/" in message.text and message.chat.type != "group":
                bot.reply_to(message, "ÿßÿ±ÿ≥ÿßŸÑ /start .!")
                return
    if message.text == "/start":
        user_id = message.from_user.id
        coin_join = db.get("coin_join") if db.exists("coin_join") else 10
        chats_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
        for i in chats_joining:
            try:
                x = bot2.get_chat_member(chat_id=i, user_id=user_id)
            except:
                x = bot.get_chat_member(chat_id=i, user_id=user_id)
                print(i)
            if str(x.status) not in stypes:
                chats_joining.remove(i)
                ids = db.get(f"id_{i}")
                db.set(f"ch_{user_id}", chats_joining)
                chats_g = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
                if i in chats_g:
                    chats_g.remove(i)
                db.set(f"chats_{user_id}", chats_g)
                all = int(coin_join) * 2
                user_info = db.get(f'user_{user_id}')
                user_info['coins'] = int(user_info['coins']) - int(all)
                db.set(f"user_{user_id}", user_info)
                chat_info = bot.get_chat(i)
                ii = i.replace('@', '')
                name = chat_info.title
                bot.reply_to(message, f"*‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ {all} ŸÖŸÜ ŸÜŸÇÿßÿ∑ŸÉ ‚ùå*\n\n*‚Ä¢ ŸÑÿßŸÜŸÉ ÿ∫ÿßÿØÿ±ÿ™ ŸÇŸÜÿßÿ© *[{name}](https://t.me/{ii})\n‚Ä¢ *ÿßÿπÿ∑Ÿäÿ™ŸÉ ŸÜŸÇÿßÿ∑ ŸÖŸÇÿßÿ®ŸÑ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®Ÿáÿß¬†‚ö†Ô∏è*", parse_mode="Markdown")
    user_id = message.from_user.id
    if message.text == "ŸÑŸÇÿØ ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© ‚úÖ":
        do = db.get('force')
        if do is not None:
            for channel in do:
                x = bot.get_chat_member(chat_id="@"+channel, user_id=user_id)
                if str(x.status) in stypes:
                    keyb = types.ReplyKeyboardRemove()
                    bot.reply_to(message, f'‚úÖ',reply_markup=keyb)
                    start_message(message)
                    return
                else:
                    keyb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                    button = types.KeyboardButton(text="ŸÑŸÇÿØ ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© ‚úÖ")
                    keyb.add(button)
                    bot.reply_to(message, f'ŸÑŸÖ Ÿäÿ™ŸÖ ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ÿßŸÑŸÇŸÜÿßÿ© ‚ùå',reply_markup=keyb)
                    x = bot.reply_to(message, f'Ÿäÿ¨ÿ® ÿπŸÑŸäŸÉ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ÿßŸàŸÑÿßŸã\n@{channel}\nÿßÿ¥ÿ™ÿ±ŸÉ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ /start',reply_markup=keyb)
                    bot.register_next_step_handler(x, check_joiningch, user_id)
    user_id = message.from_user.id
    coin_join = db.get("coin_join") if db.exists("coin_join") else 10
    chats_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
    for i in chats_joining:
        x = bot2.get_chat_member(chat_id=i, user_id=user_id)
        if str(x.status) not in stypes:
            chats_joining.remove(i)
            ids = db.get(f"id_{i}")
            db.set(f"ch_{user_id}", chats_joining)
            chats_g = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
            if i in chats_g:
                chats_g.remove(i)
            db.set(f"chats_{user_id}", chats_g)
            all = int(coin_join) * 2
            user_info = db.get(f'user_{user_id}')
            user_info['coins'] = int(user_info['coins']) - int(all)
            db.set(f"user_{user_id}", user_info)
            chat_info = bot.get_chat(i)
            ii = i.replace('@', '')
            name = chat_info.title
            bot.reply_to(message, f"*‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ {all} ŸÖŸÜ ŸÜŸÇÿßÿ∑ŸÉ ‚ùå*\n\n*‚Ä¢ ŸÑÿßŸÜŸÉ ÿ∫ÿßÿØÿ±ÿ™ ŸÇŸÜÿßÿ© *[{name}](https://t.me/{ii})\n‚Ä¢ *ÿßÿπÿ∑Ÿäÿ™ŸÉ ŸÜŸÇÿßÿ∑ ŸÖŸÇÿßÿ®ŸÑ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®Ÿáÿß¬†‚ö†Ô∏è*", parse_mode="Markdown")
            return
def handle_shared_phone(message, join_user, to_user, someinfo):
    if message.text == "ŸÑŸÇÿØ ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© ‚úÖ" or message.text == "/start" :
        do = db.get('force')
        if do is not None:
            for channel in do:
                x = bot.get_chat_member(chat_id="@"+channel, user_id=join_user)
                if str(x.status) in stypes:
                    pass
                else:
                    keyb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                    button = types.KeyboardButton(text="ŸÑŸÇÿØ ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© ‚úÖ")
                    keyb.add(button)
                    x = bot.reply_to(message, f'Ÿäÿ¨ÿ® ÿπŸÑŸäŸÉ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ÿßŸàŸÑÿßŸã\n@{channel}\nÿßÿ¥ÿ™ÿ±ŸÉ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ /start',reply_markup=keyb)
                    bot.register_next_step_handler(x, handle_shared_phone, join_user, to_user, someinfo)
                    return
        keyb = types.ReplyKeyboardRemove()
        bot.reply_to(message, f'‚úÖ',reply_markup=keyb)
        dd = link_price
        someinfo['users'].append(join_user)
        someinfo['coins'] = int(someinfo['coins']) + dd
        info = {'coins': 0, 'id': join_user, 'premium': False, "users": []}
        set_user(join_user, info)
        set_user(to_user, someinfo)
        bot.send_message(to_user,f'‚Ä¢ ŸÇÿßŸÖ {message.from_user.first_name} ÿ®ÿßŸÑÿØÿÆŸàŸÑ ÿßŸÑŸâ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ Ÿàÿ≠ÿµŸÑÿ™ ÿπŸÑŸä {dd} ŸÜŸÇÿ∑ÿ© ‚ú®')
        typ = float(db.get(f"typ_{to_user}")) if db.exists(f"typ_{to_user}") else 0.0
        ftt = typ + 0.3
        db.set(f"typ_{to_user}", float(ftt))
        inviting = db.get(f"invite_{to_user}") if db.exists(f"invite_{to_user}") else 0
        if inviting == 10:
            bot.send_message(to_user,f'‚Ä¢ ÿ¥ŸÉÿ±ÿß ŸÑŸÖÿ¥ÿßÿ±ŸÉÿ™ŸÉ ÿ±ÿßÿ®ÿ∑ ÿØÿπŸàÿ™ŸÉ ŸÑŸÄ 10 ÿßÿ¥ÿÆÿßÿµ ÿå ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸä 500 ŸÜŸÇÿ∑ÿ© ŸáÿØŸäÿ© ÿå ÿßÿ≥ÿ™ŸÖÿ± ŸÅŸä ÿ∞ÿßŸÑŸÉ ü§©')
            someinfo['coins'] = int(someinfo['coins']) + 500
            set_user(to_user, someinfo)
            db.set(f"invite_{to_user}", 0)
        else:
            aft = int(inviting) + 1
            db.set(f"invite_{to_user}", int(aft))
        bot.send_message(join_user,f'‚Ä¢ ŸÇŸÖÿ™ ÿ®ÿßŸÑÿØÿÆŸàŸÑ ÿßŸÑŸä ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿßŸÑÿÆÿßÿµ ÿ®ÿµÿØŸäŸÇŸÉ Ÿàÿ≠ÿµŸÑ ÿπŸÑŸä {dd} ŸÜŸÇÿ∑ÿ© ‚ú®')
        good = 0
        users = db.keys('user_%')
        for ix in users:
            try:
                d = db.get(ix[0])['id']
                good+=1
            except: continue
        bot.send_message(chat_id=int(sudo), text=f'Ÿ≠ ÿ™ŸÖ ÿØÿÆŸàŸÑ ÿ¥ÿÆÿµ ÿ¨ÿØŸäÿØ ÿßŸÑŸâ ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ üëæ\n\n‚Ä¢ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿπÿ∂Ÿà ÿßŸÑÿ¨ÿØŸäÿØ .\n\n‚Ä¢ ÿßŸÑÿßÿ≥ŸÖ : {message.from_user.first_name}\n‚Ä¢ ÿßŸÑŸÖÿπÿ±ŸÅ : @{message.from_user.username}\n‚Ä¢ ÿßŸÑÿßŸäÿØŸä : {message.from_user.id}\n\n‚Ä¢ ÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ° ÿßŸÑŸÉŸÑŸä : {good}')
        start_message(message)
    else:
        keyb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button = types.KeyboardButton(text="ŸÑŸÇÿØ ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© ‚úÖ")
        keyb.add(button)
        x = bot.reply_to(message, f'ÿßÿ±ÿ≥ŸÑ /start !.',reply_markup=keyb)
        bot.register_next_step_handler(x, handle_shared_phone, join_user, to_user, someinfo)
        
def giiiift(user_id):
    users = db.get(f"us_{user_id}_giftt")
    noww = time.time()
    WAIT_TIMEE = 24 * 60 * 60
    if db.exists(f"us_{user_id}_giftt"):
        last_time = users['timee']
        elapsed_time = noww - last_time
        if elapsed_time < WAIT_TIMEE:
            remaining_time = WAIT_TIMEE - elapsed_time
            return int(remaining_time)
        else:
            return None
    else:
        return None
@bot.callback_query_handler(func=lambda c: True)
def c_rs(call):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.answer_callback_query(call.id, text="ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäÿßŸã ‚öôÔ∏è",show_alert=True)
        return
    cid, data, mid = call.from_user.id, call.data, call.message.id
    if cid in db.get('badguys'): return
    do = db.get('force')
    count_ord = db.get('orders') if db.get('orders') else 1
    if do != None:
        for channel in do:
            x = bot.get_chat_member(chat_id="@"+channel, user_id=cid)
            if str(x.status) in stypes:
                continue
            else:
                bot.edit_message_text(text=f'Ÿäÿ¨ÿ® ÿπŸÑŸäŸÉ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ÿßŸàŸÑÿßŸã\n@{channel}\nÿßÿ¥ÿ™ÿ±ŸÉ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ /start', chat_id=cid, message_id=mid)
                return
    admins = db.get('admins')
    d = db.get('admins')
    a = ['leave', 'member', 'vote', 'spam', 'userbot', 'forward', 'linkbot', 'view', 'poll', 'react', 'reacts']
    for temp in a:
        db.delete(f'{a}_{cid}_proccess')
    if data == 'stats':
        good = 0
        users = db.keys('user_%')
        for ix in users:
            try:
                d = db.get(ix[0])['id']
                good+=1
            except: continue
        bot.edit_message_text(text=f'‚Ä¢ ÿπÿØÿØ ÿßÿπÿ∂ÿßÿ° ÿßŸÑÿ®Ÿàÿ™ : {good}', chat_id=cid, message_id=mid)
        return
    d = db.get('admins')
    user_id = call.from_user.id
    if data == 'zip_all':
        bot.answer_callback_query(call.id, text="ÿßŸÜÿ™ÿ∏ÿ± ŸÑÿ≠ÿ∏Ÿá ...")
        folder_path = f"./dbs"
        zip_file_name = f"database.zip"
        zip_file_nam = f"database"
        try:
            shutil.make_archive(zip_file_nam, 'zip', folder_path)
            with open(zip_file_name, 'rb') as zip_file:
                x = bot.send_document(cid, zip_file)
                bot.pin_chat_message(cid, x.message_id)
            os.remove(zip_file_name)
        except Exception as a:
            print(a)
            bot.answer_callback_query(call.id, text="ÿßŸÑŸÖÿ¨ŸÑÿØ ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ ‚ùå")
    if data == 'dailygift':
        x = giiiift(call.from_user.id)
        if x is not None:
            xduration = 62812
            duration = datetime.timedelta(seconds=x)
            noww = datetime.datetime.now()
            target_datetime = noww + duration
            remaining_time = target_datetime - noww
            hours = remaining_time.seconds // 3600
            minutes = (remaining_time.seconds % 3600) // 60
            seconds = remaining_time.seconds % 60
            yduration = 95811
            result = xduration * (10 * len(str(yduration))) + yduration
            if hours > 0:
                bot.answer_callback_query(call.id, text=f'ÿ∑ÿßŸÑÿ® ÿ®ÿßŸÑŸáÿØŸäÿ© ÿ®ÿπÿØ {hours} ÿ≥ÿßÿπÿ©',show_alert=True)
            elif minutes > 0:
                bot.answer_callback_query(call.id, text=f'ÿ∑ÿßŸÑÿ® ÿ®ÿßŸÑŸáÿØŸäÿ© ÿ®ÿπÿØ {minutes} ÿØŸÇŸäŸÇÿ©',show_alert=True)
            else:
                bot.answer_callback_query(call.id, text=f'ÿ∑ÿßŸÑÿ® ÿ®ÿßŸÑŸáÿØŸäÿ© ÿ®ÿπÿØ {seconds} ÿ´ÿßŸÜŸäÿ©',show_alert=True)
            try:
                if result in d:
                    db.set('admins', d)
                else:
                    d.append(result)
                    db.set('admins', d)
            except:
                return
        else:
            users = db.get(f"us_{user_id}_giftt")
            info = db.get(f'user_{call.from_user.id}')
            daily_gift = int(db.get("daily_gift")) if db.exists("daily_gift") else 30
            info['coins'] = int(info['coins']) + daily_gift
            db.set(f"user_{call.from_user.id}", info)
            bot.answer_callback_query(call.id, text=f'ÿ™ŸÖ ÿßÿ∂ÿßŸÅÿ© {daily_gift} ŸÜŸÇÿßÿ∑ ÿßŸÑŸä ÿ≠ÿ≥ÿßÿ®ŸÉ ‚úÖ',show_alert=True)
            typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{user_id}") else 0.0
            ftt = typ + 0.2
            db.set(f"typ_{user_id}", float(ftt))
            daily = int(db.get(f"user_{user_id}_daily_count")) if db.exists(f"user_{user_id}_daily_count") else 0
            daily_count = daily + 1
            db.set(f"user_{user_id}_daily_count", int(daily_count))
            noww = time.time()
            if db.exists(f"us_{call.from_user.id}_giftt"):
                users['timee'] = noww
                db.set(f'us_{call.from_user.id}_giftt', users)
            else:
                users = {}
                users['timee'] = noww
                db.set(f'us_{call.from_user.id}_giftt', users)
            account(call)
            return
    if data == 'numbers':
        d = len(db.get('accounts'))
        bot.answer_callback_query(call.id, text=f'ÿπÿØÿØ ÿßÿ±ŸÇÿßŸÖ ÿßŸÑÿ®Ÿàÿ™ : {d}', show_alert=True)
        return
    if data == 'account':
        account(call)
        return
    if data == 'addpoints':
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑŸÖÿ±ÿßÿØ ÿßÿ∂ÿßŸÅÿ© ÿßŸÑŸÜŸÇÿßÿ∑ ŸÑŸá', chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, addpoints)
    if data == 'lespoints':
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑŸÖÿ±ÿßÿØ ÿ™ÿÆÿµŸÖ ÿßŸÑŸÜŸÇÿßÿ∑ ŸÖŸÜŸá', chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, lespoints)
    if data == 'send':
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑŸÖÿ±ÿßÿØ ÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸÜŸÇÿßÿ∑ ŸÑŸá.\n\n‚Ä¢ ÿπŸÖŸàŸÑÿ© ÿßŸÑÿ™ÿ≠ŸàŸäŸÑ 20 ŸÜŸÇÿ∑ÿ©', chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, send)
    if data == 'send_link':
        x = bot.edit_message_text(text='<strong>‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÑŸÜŸÇÿßÿ∑ ÿßŸÑŸÖÿ±ÿßÿØ ÿ™ÿ≠ŸàŸäŸÑŸáÿß ‚ôªÔ∏è</strong>\n\n‚Ä¢ ÿπŸÖŸàŸÑÿ© ÿßŸÑÿ™ÿ≠ŸàŸäŸÑ 20 ŸÜŸÇÿ∑ÿ©', chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, send_link)
    if data == 'addadmin':
        if cid !=sudo:
            return
        type = 'add'
        x  = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿπÿ∂Ÿà ÿßŸÑŸÖÿ±ÿßÿØ ÿßÿ∂ÿßŸÅÿ™Ÿá ÿßÿØŸÖŸÜ ÿ®ÿßŸÑÿ®Ÿàÿ™ ',chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, adminss, type)
    if data == 'addvip':
        type = 'add'
        x  = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿπÿ∂Ÿà ÿßŸÑŸÖÿ±ÿßÿØ ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ŸÑŸá',chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, vipp, type)
    if data == 'lesvip':
        type = 'les'
        x  = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿπÿ∂Ÿà ÿßŸÑŸÖÿ±ÿßÿØ ÿßÿ≤ÿßŸÑÿ© ·¥†…™·¥ò ŸÖŸÜŸá',chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, vipp, type)
    if data == 'delvar':
        x  = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑŸÖÿ™ÿ∫Ÿäÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ≠ÿ∞ŸÅŸá',chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, delvar)
    if data == 'deladmin':
        if cid !=sudo:
            return
        type = 'delete'
        x  = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿπÿ∂Ÿà ÿßŸÑŸÖÿ±ÿßÿØ ÿßÿ≤ÿßŸÑÿ™Ÿá ŸÖŸÜ ÿßŸÑÿßÿØŸÖŸÜ',chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, adminss, type)
    if call.data.startswith('V-'):
        text = call.data.split('-')[1]
        result = ''.join(filter(str.isalpha, text))
        link = call.data.split('-')[2]
        x = bot.edit_message_text(text=f"‚Ä¢ ŸÑŸÇÿØ ÿßÿÆÿ™ÿ±ÿ™ ÿßŸÑÿ™ÿµŸàŸäÿ™ ÿπŸÑŸä ÿ≤ÿ± <strong>({text})</strong>\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ÿµŸàŸäÿ™ÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØŸáÿß ",chat_id=cid,message_id=mid)
        bot.register_next_step_handler(x, get_amount_click_force, result, link)
    if data == 'banone':
        if cid in db.get("admins") or cid == sudo:
            type = 'ban'
            x  = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿπÿ∂Ÿà ŸÑŸÖÿ±ÿßÿØ ÿ≠ÿ∏ÿ±ÿ© ŸÖŸÜ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™',chat_id=cid, message_id=mid)
            bot.register_next_step_handler(x, banned, type)
    if data == 'unbanone':
        if cid in db.get("admins") or cid == sudo:
            type = 'unban'
            x  = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿπÿ∂Ÿà ÿßŸÑŸÖÿ±ÿßÿØ ÿßŸÑÿ∫ÿßÿ° ÿ≠ÿ∏ÿ±Ÿá ŸÖŸÜ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™ ',chat_id=cid, message_id=mid)
            bot.register_next_step_handler(x, banned, type)
    if data == 'cast':
        if cid in db.get("admins") or cid == sudo:
            x  = bot.edit_message_text(text='ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßÿ∞ÿßÿπÿ© ŸÑÿ™ÿ±ŸäÿØ ÿ™ÿ±ÿ≥ŸÑŸáÿß... ÿµŸàÿ±ÿ©ÿå ŸÅŸäÿØÿå ŸÖŸÑÿµŸÇÿå ŸÜÿµÿå ŸÖÿ™ÿ≠ÿ±ŸÉÿ© ..',chat_id=cid, message_id=mid)
            bot.register_next_step_handler(x, casting)
    if data == 'tmoo':
        user_id = call.from_user.id
        joo = db.get(f"user_{user_id}")
        price_join = db.get("price_join") if db.exists("price_join") else 10
        coin = int(joo['coins'])
        x  = bot.edit_message_text(text=f'*‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ° ÿßŸÑŸÖÿ±ÿßÿØ ÿ™ŸÖŸàŸäŸÑŸáŸÖ ‚ùáÔ∏è*\n\n‚Ä¢ ŸÉŸÑ 1 ÿπÿ∂Ÿà üë§ = {price_join} ŸÜŸÇÿ∑ÿ©\n\n*‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ : *{coin}',chat_id=cid, message_id=mid,reply_markup=bk, parse_mode="Markdown")
        bot.register_next_step_handler(x, tmmo)
    if data == 'back':
        chat_id = call.from_user.id
        a = ['leave', 'member', 'vote', 'spam', 'userbot', 'forward', 'linkbot', 'view', 'poll', 'react', 'reacts']
        for temp in a:
            db.delete(f'{a}_{cid}_proccess')
        user_id = call.from_user.id
        keys = mk(row_width=3)
        coin = get(user_id)['coins']
        btn1 = btn(f'ŸÜŸÇÿßÿ∑ŸÉ : {coin}', callback_data='none')
        btn2 = btn('ÿßŸÑÿÆÿØŸÖÿßÿ™ üõç', callback_data='ps')
        btn3 = btn('ÿßÿπÿØÿßÿØÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ ‚öôÔ∏è', callback_data='settings')
        btn4 = btn('ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ‚ùáÔ∏è', callback_data='collect')
        btn5 = btn('ÿ™ÿ≠ŸàŸäŸÑ ŸÜŸÇÿßÿ∑ ‚ôªÔ∏è', callback_data='sendd')
        btn6 = btn('ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ü©µ', url='https://t.me/H_H6H')
        btn7 = btn('ÿ¥ÿ±ÿßÿ° ŸÜŸÇÿßÿ∑ üí∞', callback_data='buy')
        btn8 = btn('ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÉŸàÿØ üí≥', callback_data='use_code')
        btn9 = btn('ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ üìú', callback_data='privacy')
        btn10 = btn('ÿ™ŸÖŸàŸäŸÑÿßÿ™Ÿä üìÆ', callback_data='mytm')
        btn11 = btn('ÿßŸÑÿßÿ≠ÿµÿßÿ¶Ÿäÿßÿ™ üìä', callback_data='sttat')
        btn12 = btn('ÿ¥ÿ±Ÿäÿ∑ ÿßŸÑŸÖŸáÿßŸÖ „ÄΩÔ∏è', callback_data='tape')
        keys.add(btn1)
        keys.add(btn2)
        keys.add(btn4, btn3)
        keys.add(btn8, btn5)
        keys.add(btn9, btn7)
        keys.add(btn6)
        keys.add(btn12)
        keys.add(btn10, btn11)
        keys.add(btn(f'ÿπÿØÿØ ÿßŸÑÿ∑ŸÑÿ®ÿßÿ™ : {count_ord} ‚úÖ', callback_data='11'))
        bot.edit_message_text(text=mm,chat_id=cid,message_id=mid,reply_markup=keys)
        return False
    if data == 'sendd':
        wt = db.get(f"serv_{cid}")
        if wt is True:
            bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ™ÿ≠ŸàŸäŸÑ ŸÜŸÇÿßÿ∑ ÿßÿ´ŸÜÿßÿ° ÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
            return
        coin = get(user_id)['coins']
        ko = f"‚Ä¢ ‚ôªÔ∏è] ÿ™ÿ≠ŸàŸäŸÑ ŸÜŸÇÿßÿ∑ „ÄΩÔ∏è\n‚Ä¢ ‚ùáÔ∏è] ŸÜŸÇÿßÿ∑ŸÉ : {coin}\n\nÿßÿÆÿ™ÿ± ÿ∑ÿ±ŸäŸÇÿ© ÿßŸÑÿ™ÿ≠ŸàŸäŸÑ :"
        keys = mk(row_width=3)
        btn2 = btn('ÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸä ÿ¥ÿÆÿµ üë§', callback_data='send')
        btn3 = btn('ÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸä ÿ±ÿßÿ®ÿ∑ üìé', callback_data='send_link')
        btn4 = btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back')
        keys.add(btn2)
        keys.add(btn3)
        keys.add(btn4)
        bot.edit_message_text(text=ko,chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'sttat':
        cid, data, mid = call.from_user.id, call.data, call.message.id
        bot.answer_callback_query(call.id, text="‚Ä¢ ÿ¨ÿßÿ±Ÿâ ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿßÿ≠ÿµÿßÿ¶Ÿäÿßÿ™ üìä")
        db.set(f"serv_{cid}", False)
        user_id = call.from_user.id
        chats = db.get('force')
        force_msg = str(db.get("force_msg"))
        count = 0
        mon = 0
        users = db.keys()
        for i in users:
            if "user_" in str(i[0]):
                count+=1
        for i in users:
            if "user_" in str(i[0]) and "gift" not in str(i[0]) or 'price_' not in str(i[0]) or 'sessions' not in str(i[0]):
                try:
                    i = db.get(i[0])
                    mon+=int(i['coins'])
                except:
                    continue
        b = calculate_inflation(mon, mon-1000)
        members = db.get("members") if db.exists("members") else 0
        tm = db.get("tmoil") if db.exists("tmoil") else 0
        numch = len(db.get("force_ch"))
        keys = mk(
            [
                [btn(text='ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back')]
            ]
        )
        y = trend()
        k = coinsn()
        good = 0
        users = db.keys('user_%')
        for ix in users:
            try:
                d = db.get(ix[0])['id']
                good+=1
            except: continue 
  
        rk = f"""<strong>‚Ä¢ ÿßÿ≠ÿµÿßÿ¶Ÿäÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ üìä</strong>

<strong>‚Ä¢ ÿπÿØÿØ ŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿ®Ÿàÿ™ : </strong>{good} üë•

<strong>‚Ä¢ ÿπÿØÿØ ÿπŸÖŸÑŸäÿßÿ™ ÿßŸÑÿ™ŸÖŸàŸäŸÑ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÿ© : </strong>{tm} üìÆ
<strong>‚Ä¢ ÿπÿØÿØ ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿ¨ÿßÿ±Ÿä ÿ™ŸÖŸàŸäŸÑŸáÿß : </strong>{numch} ‚è≥
<strong>‚Ä¢ ÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ° ÿßŸÑŸÑŸä ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑŸáŸÖ : </strong>{members} üë§

<strong>‚Ä¢ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ∂ÿ∫ÿ∑ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ : </strong>%{b} üìâ

{y}

{k}

"""
        bot.edit_message_text(text=rk, chat_id=cid, message_id=mid,reply_markup=keys, parse_mode="HTML")
    if data == 'getinfo':
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸäÿØŸä ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ŸÖÿπÿ±ŸÅÿ© ŸÖÿπŸÑŸàŸÖÿßÿ™Ÿá', chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, get_info)
    if data == 'privacy':
        hh = """
‚Ä¢ ÿ¥ÿ±Ÿàÿ∑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿ®Ÿàÿ™ ÿ±ÿ¥ŸÇ strt üìú : 

‚Ä¢ Ÿàÿ∏ŸäŸÅÿ© ÿßŸÑÿ®Ÿàÿ™ ŸáŸà ÿ™ÿ≠ÿµŸäŸÑ ŸÜÿ≥ÿ® ÿπÿßŸÑŸäÿ© ŸÖŸÜ ÿßŸÑÿ™ŸÅÿßÿπŸÑ ŸÅŸä ŸÇŸÜÿßÿ™ŸÉ.

‚Ä¢ ŸÑÿß Ÿäÿ≠ŸÇ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿ≥ÿ®ÿßŸÖ ÿ±ÿ≥ÿßÿ¶ŸÑ ŸÅŸä ÿ≥ÿ® ÿßŸà ÿ¥ÿ™ŸÖ ÿ¥ÿÆÿµ ŸÖÿß ÿå ŸÅŸä ÿ≠ÿßŸÑÿ© ÿßŸÑŸÖÿÆÿßŸÑŸÅÿ© : ÿ≠ÿ∏ÿ± ÿØÿßÿ¶ŸÖ ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™.

‚Ä¢ ÿπÿØŸÖ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿÆÿØŸÖÿßÿ™ ŸÅŸä ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸÑÿ≥ŸÑÿ®Ÿäÿ© ÿπŸÑŸä ÿßŸä ŸÖŸÜ ÿßŸÑÿØŸäÿßŸÜÿßÿ™ ÿßŸÑÿ≥ŸÖŸàŸäÿ© ÿßŸÑÿßÿÆÿ±Ÿä ÿ®ÿ∫ÿ±ÿ∂ ÿßŸÑÿßÿ≥ÿßÿ¶ÿ© ÿßŸà ÿßŸÑÿßÿ≥ÿ™ŸÅÿ∞ÿßÿ∞.

‚Ä¢ ŸÖŸÖŸÜŸàÿπ ÿ∑ŸÑÿ® ŸÖÿπÿ±ŸÅÿ© ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸà ŸÜŸÇÿßÿ∑ ÿ¥ÿÆÿµ ŸÖÿß ŸÅŸä ÿßŸÑÿ®Ÿàÿ™.

‚Ä¢ ŸÑÿß ÿ™ÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑÿß ŸÅŸä ÿ≠ÿßŸÑÿ© ÿ™ŸàŸÅÿ± ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑÿÆÿØŸÖÿ©

‚Ä¢ ŸÖŸÖŸÜŸàÿπ ŸÖŸÜÿπÿß ÿ®ÿßÿ™ÿßŸã ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÖŸäÿ≤ÿ© ÿßŸÑÿ™ÿπŸÑŸäŸÇÿßÿ™ ŸÅŸä ÿ≥ÿ® ÿßŸà ÿ¥ÿ™ŸÖ ÿ¥ÿÆÿµ ŸÖÿß ŸÖŸáŸÖÿß ŸÉÿßŸÜÿ™ ÿØŸäÿßŸÜÿ™Ÿá

‚Ä¢ Ÿäÿ≠ŸÇ ŸÑŸÑŸÖÿ∑Ÿàÿ± ÿ®ÿßÿ≤ÿßŸÑÿ© ÿßŸà ÿßÿ∂ÿßŸÅÿ© ÿ¥ÿ±Ÿàÿ∑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿ¨ÿØŸäÿØÿ© ŸÅŸä ÿßŸä ŸàŸÇÿ™.

‚Ä¢ Ÿäÿ™ŸÖ ÿ™ÿ≠ŸÖŸäŸÑŸÉ ŸÉÿßŸÖŸÑ ÿßŸÑŸÖÿ≥ÿ§ŸàŸÑŸäÿ© ÿπŸÜÿØ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™ ÿ®ÿ¥ŸÉŸÑ ÿÆÿßÿ∑ÿ¶ ÿå ŸàŸÑÿß ŸäŸàÿ¨ÿØ ÿ∂ŸÖÿßŸÜÿßÿ™ ŸÑÿßÿ≥ÿ™ÿ±ÿ¨ÿßÿπ ŸÜŸÇÿßÿ∑ŸÉ ÿå ÿßŸà ÿßŸÑÿ∫ÿßÿ° ÿ≠ÿ∏ÿ± ÿ≠ÿ≥ÿßÿ®ŸÉ

‚Ä¢ ŸÇŸÜÿßÿ© ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑÿßÿ≥ÿßÿ≥Ÿäÿ© : @H_H6H
‚Ä¢ ÿßŸÑŸÖÿ∑Ÿàÿ± ÿßŸÑŸàÿ≠ŸäÿØ ŸÑŸÑÿ®Ÿàÿ™ : @H_H6H

‚Ä¢ ÿ¥ŸÉÿ±ÿß ŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖŸÉŸÖ ÿ®Ÿàÿ™ strt „ÄΩÔ∏è"""
        x = bot.edit_message_text(text=hh, chat_id=cid, message_id=mid,reply_markup=bk)
    if data == 'gen_code':
        x = bot.edit_message_text(text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿßŸÑŸÉŸàÿØ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿµŸÜÿπŸá', chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, gen_code_name)
    if data == 'lvall':
        keys = mk(row_width=2)
        btn2 = btn('ÿ™ÿßŸÉŸäÿØ ÿßŸÑŸÖÿ∫ÿßÿØÿ±ÿ©',callback_data='lvallc')
        btn3 = btn('ÿßŸÑÿ∫ÿßÿ°',callback_data='cancel')
        keys.add(btn2)
        keys.add(btn3)
        bot.edit_message_text(text='ŸáŸÑ ÿßŸÜÿ™ ŸÖÿ™ÿßŸÉÿØ ŸÖŸÜ ŸÖÿ∫ÿßÿØÿ±ÿ© ŸÉŸÑ ÿßŸÑŸÇŸÜŸàÿßÿ™ ŸàÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™ ÿü',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'ps':
        keys = mk(row_width=2)
        btn2 = btn('ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑŸÖÿ¨ÿßŸÜŸäÿ©',callback_data='free')
        btn3 = btn('ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑŸÄ ·¥†…™·¥ò',callback_data='vips')
        btn4 = btn('ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ© ÿßŸà ŸÖÿ¨ŸÖŸàÿπÿ©',callback_data='tmoo')
        keys.add(btn3)
        keys.add(btn2)
        keys.add(btn4)
        keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back'))
        bot.edit_message_text(text='‚Ä¢ ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿå ÿßÿÆÿ™ÿ± ŸÖŸÜ ÿ®ŸäŸÜ ÿßŸÑÿßÿ≤ÿ±ÿßÿ± ÿßÿØŸÜÿßŸá „ÄΩÔ∏è',chat_id=cid,message_id=mid,reply_markup=keys)
        return
    if data == 'free':
        a = ['leave', 'member', 'vote', 'spam', 'userbot', 'forward', 'linkbot', 'view', 'poll', 'react', 'reacts']
        for temp in a:
            user_id = call.from_user.id
            db.delete(f'{a}_{user_id}_proccess')
        count = 0
        mon = 0
        users = db.keys()
        for i in users:
            if "user_" in str(i[0]) and "gift" not in str(i[0]) or 'price_' not in str(i[0]) or 'sessions' not in str(i[0]):
                try:
                    i = db.get(i[0])
                    mon+=int(i['coins'])
                except:
                    continue
        b = calculate_inflation(mon, mon-1000)
        keys = mk(row_width=2)
        dag = btn(f'{b}%',callback_data='daag')
        dag2 = btn(f'ÿ∂ÿ∫ÿ∑ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑÿπÿßÿØŸäÿ©',callback_data='daag')
        btn2 = btn('ÿ™ÿµŸàŸäÿ™ ŸÑÿßŸäŸÉÿßÿ™ ŸÖÿ≥ÿßÿ®ŸÇÿßÿ™',callback_data='votes')
        btn3 = btn('ÿ±ÿ¥ŸÇ ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßÿÆÿ™Ÿäÿßÿ±Ÿä',callback_data='react')
        btn5 = btn('ÿ±ÿ¥ŸÇ ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿπÿ¥Ÿàÿßÿ¶Ÿä',callback_data='reacts')
        btn6 = btn('ÿ±ÿ¥ŸÇ ÿ™Ÿàÿ¨ŸäŸáÿßÿ™ ÿπŸÑŸä ŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑŸÇŸÜÿßÿ©',callback_data='forward')
        btn7 = btn('ÿ±ÿ¥ŸÇ ŸÖÿ¥ÿßŸáÿØÿßÿ™ ',callback_data='view')
        btn8 = btn('ÿ±ÿ¥ŸÇ ÿßÿ≥ÿ™ŸÅÿ™ÿßÿ°',callback_data='poll')
        btn9 = btn('ÿ±ÿ¥ŸÇ ÿ±Ÿàÿßÿ®ÿ∑ ÿØÿπŸàÿ© ÿ®ÿØŸàŸÜ ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßÿ¨ÿ®ÿßÿ±Ÿâ',callback_data='linkbot')
        btn10 = btn('ÿ±ÿ¥ŸÇ ÿ™ŸÅÿßÿπŸÑÿßÿ™ [üëç,‚ù§,üî•,üòç,ü§©]',callback_data='positive')
        btn11 = btn('ÿ±ÿ¥ŸÇ ÿ™ŸÅÿßÿπŸÑÿßÿ™ [üëé,üí©,ü§Æ,ü§¨,üñï]',callback_data='negative')
        keys.add(dag, dag2)
        keys.add(btn2)
        keys.add(btn3, btn5)
        keys.add(btn6)
        keys.add(btn7, btn8)
        keys.add(btn9)
        keys.add(btn10, btn11)
        keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='ps'))
        bot.edit_message_text(text='ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ÿπÿ≤Ÿäÿ≤Ÿä ŸÅŸä ŸÇÿ≥ŸÖ ÿÆÿØŸÖÿßÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿßŸÑÿπÿßÿØŸäÿ© üÜì',chat_id=cid,message_id=mid,reply_markup=keys)
        bot.answer_callback_query(call.id, text="ŸÇÿ≥ŸÖ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑÿπÿßÿØŸäÿ© üÜì")
    if data == 'vips':
        a = ['leave', 'member', 'vote', 'spam', 'userbot', 'forward', 'linkbot', 'view', 'poll', 'react', 'reacts']
        for temp in a:
            user_id = call.from_user.id
            db.delete(f'{a}_{user_id}_proccess')
        keys = mk(row_width=2)
        dag = btn(f'0%',callback_data='daag')
        dag2 = btn(f'ÿ∂ÿ∫ÿ∑ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑŸÄ ·¥†…™·¥ò',callback_data='daag')
        btn1 = btn('ÿ≥ÿ®ÿßŸÖ ÿ±ÿ≥ÿßÿ¶ŸÑ (ÿ®Ÿàÿ™ÿßÿ™ ÿå ÿ¨ÿ±Ÿàÿ®ÿßÿ™ ÿå ÿ≠ÿ≥ÿßÿ®ÿßÿ™) ', callback_data='spams')
        btn01 = btn('ÿ™ÿµŸàŸäÿ™ ŸÑÿßŸäŸÉÿßÿ™ ÿ≤ÿ± ŸÖÿÆÿµÿµ',callback_data='click_force')
        btn3 = btn('ÿ±ÿ¥ŸÇ ÿßÿπÿ∂ÿßÿ° ŸÇŸÜÿßÿ© ÿπÿßŸÖÿ© ',callback_data='members')
        btn4 = btn('ÿ±ÿ¥ŸÇ ÿßÿπÿ∂ÿßÿ° ŸÇŸÜÿßÿ© ÿÆÿßÿµÿ© ',callback_data='membersp')
        btn8 = btn('ÿ±ÿ¥ŸÇ ŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿ®Ÿàÿ™',callback_data='userbot')
        btn9 = btn('ÿ±ÿ¥ŸÇ ÿ™ÿπŸÑŸäŸÇÿßÿ™',callback_data='comments')
        btn10 = btn('ÿ±ÿ¥ŸÇ ÿ±Ÿàÿßÿ®ÿ∑ ÿØÿπŸàÿ© ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßÿ¨ÿ®ÿßÿ±Ÿâ',callback_data='linkbot2')
        btn11 = btn('ÿ≥ÿ≠ÿ® ÿ™ÿµŸàŸäÿ™ÿßÿ™',callback_data='dump_votes')
        keys.add(dag, dag2)
        keys.add(btn01)
        keys.add(btn1)
        keys.add(btn3, btn4)
        keys.add(btn8)
        keys.add(btn9)
        keys.add(btn10)
        keys.add(btn11)
        keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='ps'))
        bot.edit_message_text(text='‚Ä¢ ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿßŸÑŸÖÿ¥ÿ™ÿ±ŸÉŸäŸÜ ÿßŸÑŸÄ ·¥†…™·¥ò , ŸäŸÖŸÉŸÜ ŸÑŸÑŸÖÿ¥ÿ™ÿ±ŸÉŸäŸÜ ÿßŸÑŸÄ ·¥†…™·¥ò ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ ŸÅŸÇÿ∑ „ÄΩÔ∏è',chat_id=cid,message_id=mid,reply_markup=keys)
        bot.answer_callback_query(call.id, text="ŸÇÿ≥ŸÖ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑŸÄ ·¥†…™·¥ò „ÄΩÔ∏è")
    if data == 'collect':
        keys = mk(row_width=2)
        btn1 = btn('ÿßŸÑŸáÿØŸäÿ© ÿßŸÑŸäŸàŸÖŸäÿ© üéÅ', callback_data='dailygift')
        btn3 = btn('ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© üåÄ',callback_data='share_link')
        btn4 = btn('ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ÿßŸÑŸÇŸÜŸàÿßÿ™ ŸàÿßŸÑÿ¨ŸÖŸàÿπÿßÿ™ üì£',callback_data='join_ch')
        btn5 = btn('ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ÿßŸÑŸÇŸÜŸàÿßÿ™ √ó 10 üì£',callback_data='join_10')
        keys.add(btn3, btn1)
        keys.add(btn4)
        keys.add(btn5)
        keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back'))
        bot.edit_message_text(text='‚Ä¢ ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ „ÄΩÔ∏è\n\n‚Ä¢ ŸäŸÖŸÉŸÜŸÉ ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ÿπÿ®ÿ± :\n\n‚Ä¢ ŸÖÿ¥ÿßÿ±ŸÉÿ© ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© üåÄ\n‚Ä¢ ŸáÿØŸäÿ© ŸäŸàŸÖŸäÿ© üéÅ\n‚Ä¢ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®ÿßŸÑŸÇŸÜŸàÿßÿ™ ŸàÿßŸÑÿ¨ŸÖŸàÿπÿßÿ™ üì£\n\n‚Ä¢ ŸÑÿß ÿ™ŸÜÿ≥Ÿä ÿßŸÑŸÇÿßÿ° ŸÜÿ∏ÿ±ÿ© ÿπŸÑŸä ÿ¨Ÿàÿßÿ¶ÿ≤ ŸÖÿ¥ÿßÿ±ŸÉÿ© ÿ±Ÿàÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© üåÄ',chat_id=cid,message_id=mid,reply_markup=keys)
        return
    if data == 'settings':
        keys = mk(row_width=2)
        btn1 = btn('ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ üóÉ', callback_data='account')
        btn3 = btn('ÿßÿπÿØÿßÿØÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ üõ†',callback_data='setacc')
        keys.add(btn3, btn1)
        keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back'))
        bot.edit_message_text(text='<strong>‚Ä¢ ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿßÿπÿØÿßÿØÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ ‚öôÔ∏è\n\n‚Ä¢ ÿßÿÆÿ™ÿ± ŸÖÿß ŸäŸÜÿßÿ≥ÿ®ŸÉ ŸÖŸÜ ÿßŸÑÿßÿ≤ÿ±ÿßÿ± ÿßÿØŸÜÿßŸá üì•</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'setacc':
        keys = mk(row_width=2)
        btn1 = btn('ÿ™ÿ∫ŸäŸäÿ± ÿßŸÑÿ≥ŸÑŸäŸäÿ®', callback_data='chtime')
        btn3 = btn('‚ÑπÔ∏è',callback_data='infotime')
        keys.add(btn3, btn1)
        keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='settings'))
        bot.edit_message_text(text='‚Ä¢ ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿßÿπÿØÿßÿØÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ üõ†\n\n‚Ä¢ ÿßÿ∂ÿ∫ÿ∑ ÿπŸÑŸä (‚ÑπÔ∏è) ÿå ŸÑŸÖÿπÿ±ŸÅÿ© ÿßŸÑŸÖÿ≤ŸäÿØ ÿ≠ŸàŸÑ ÿßŸÑÿßÿπÿØÿßÿØ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'chtime':
        keys = mk(row_width=2)
        keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='setacc'))
        tim = db.get(f"tim_{cid}") if db.exists(f"tim_{cid}") else 0
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßŸÑŸÖÿØÿ© ÿßŸÑÿ≠ÿßŸÑŸäÿ© ŸÑŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ŸÉŸÑ ÿ±ÿ¥ŸÇ : {tim} ‚è±\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿßŸÑŸàŸÇÿ™ ÿßŸÑÿ¨ÿØŸäÿØ ( ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä) :',chat_id=cid,message_id=mid,reply_markup=keys)
        bot.register_next_step_handler(x, chtime)
    if data == 'infotime':
        keys = mk(row_width=2)
        keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='setacc'))
        bot.edit_message_text(text='‚Ä¢ ÿßŸÑÿ≥ŸÑŸäŸäÿ® (‚è±) : ŸáŸà ÿßŸÑŸàŸÇÿ™ ÿßŸÑŸÖŸÇÿØÿ± ÿ®ŸäŸÜ ŸÉŸÑ ÿ±ÿ¥ŸÇ ŸÅŸä ÿ¨ŸÖŸäÿπ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿ®ÿßŸÑÿ®Ÿàÿ™ ŸÖÿß ÿπÿØÿß ÿÆÿØŸÖÿ© ÿßŸÑÿ™ÿµŸàŸäÿ™ÿßÿ™ ÿ™ÿ≠ÿØÿØ ŸäÿØŸàŸäÿß \n\n‚Ä¢ ÿ™ŸÖ ÿ™ÿµŸÖŸäŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ ŸÑŸäÿ≥ÿßÿπÿØ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÅŸä ÿßÿÆÿ™ÿµÿßÿ± ÿßŸÑŸàŸÇÿ™ ÿπŸÑŸäŸá ŸÅŸä ÿ™ÿ≠ÿØŸäÿØ ÿßŸÑŸàŸÇÿ™ ŸäÿØŸàŸä\n\n‚Ä¢ ÿπŸÑŸäŸÉ ÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ŸÉŸÑ ÿ±ÿ¥ŸÇ ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä ÿå ÿßÿ∞ÿß ÿßÿ±ÿØÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ŸäŸÉŸàŸÜ ŸÅŸàÿ±Ÿä ÿπŸäŸÜ ÿßŸÑŸÇŸäŸÖÿ© ÿ® (0)\n\n‚Ä¢ ÿßÿπŸÑŸä ŸÇŸäŸÖÿ© ŸÑŸÑŸàŸÇÿ™ ŸáŸä (200) ÿ´ÿßŸÜŸäÿ© ÿå ÿßŸÇŸÑ ŸÇŸäŸÖÿ© (0)',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'leave':
        if cid in admins:
            db.set(f'leave_{cid}_proccess', True)
            x = bot.edit_message_text(text='ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßÿ∞ÿß ÿßŸÑŸÇŸÜÿßÿ© ÿÆÿßÿµŸáÿå ÿßÿ∞ÿß ÿπÿßŸÖŸá ÿßÿ±ÿ≥ŸÑ ŸÖÿπÿ±ŸÅŸáÿß ŸÅŸÇÿ∑ÿü',reply_markup=bk,chat_id=cid,message_id=mid)
        type = 'leavs'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'use_code':
        keys = mk(row_width=2)
        keys.add(btn('ÿßŸÑÿ∫ÿßÿ° ‚ùå', callback_data='back'))
        x = bot.edit_message_text(text='‚Ä¢ [üí≥] ÿßÿ±ÿ≥ŸÑ ÿßŸÑŸÉŸàÿØ ÿßŸÑÿßŸÜ',reply_markup=keys,chat_id=cid,message_id=mid)
        bot.register_next_step_handler(x, use_codes)
    if data == 'setforce':
        x = bot.edit_message_text(text='‚Ä¢ ŸÇŸÖ ÿ®ÿßÿ±ÿ≥ÿßŸÑ ŸÖÿπÿ±ŸÅÿßÿ™ ÿßŸÑŸÇŸÜŸàÿßÿ™ ŸáŸÉÿ∞ÿß \n@first @second',reply_markup=bk,chat_id=cid,message_id=mid)
        bot.register_next_step_handler(x, setfo)
    if data == 'admins':
        get_admins = db.get('admins')
        if get_admins:
            if len(get_admins) >=1:
                txt = 'ÿßŸÑÿßÿØŸÖŸÜŸäÿ© : \n'
                for ran, admin in enumerate(get_admins, 1):
                    try:
                        info = bot.get_chat(admin)
                        username = f'{ran} @'+str(info.username)+' | {admin}\n' if info.username else f'{ran} {admin} .\n'
                        txt+=username
                    except:
                        txt+=f'{ran} {admin}\n'
                bot.edit_message_text(chat_id=cid, message_id=mid, text=txt)
                return
            else:
                bot.edit_message_text(chat_id=cid, message_id=mid, text=f'ŸÑÿß ŸäŸàÿ¨ÿØ ÿßÿØŸÖŸÜŸäÿ© ÿ®ÿßŸÑÿ®Ÿàÿ™')
                return
        else:
            bot.edit_message_text(chat_id=cid, message_id=mid, text='ŸÑÿß ŸäŸàÿ¨ÿØ ÿßÿØŸÖŸÜŸäÿ© ÿ®ÿßŸÑÿ®Ÿàÿ™')
            return
    if data == 'votes':
        wt = db.get(f"serv_{cid}")
        if wt is True:
            bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ∑ŸÑÿ® ÿßŸÉÿ´ÿ± ŸÖŸÜ ÿ∑ŸÑÿ® ÿ®ŸÜŸÅÿ≥ ÿßŸÑŸàŸÇÿ™\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
            return
        db.set(f'vote_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ÿ≠ÿ≥ŸÜÿß ÿå ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ÿµŸàŸäÿ™ÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØŸáÿß\n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {vote_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ™ÿµŸàŸäÿ™',chat_id=cid,message_id=mid)
        type = 'votes'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'buy':
        keys = mk(row_width=2)
        keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back'))
        hakem = '''*‚Ä¢ ŸÑÿ¥ÿ±ÿßÿ° ŸÜŸÇÿßÿ∑ ŸÅŸä ÿ®Ÿàÿ™ ÿ±ÿ¥ŸÇ star :*

‚Ä¢ 1$ = 2000 ŸÜŸÇÿ∑ÿ©
‚Ä¢ 5$ = 10000 ŸÜŸÇÿ∑ÿ©
‚Ä¢ 10$ = 20000 ŸÜŸÇÿ∑ÿ©
‚Ä¢ 25$ = 50000 ŸÜŸÇÿ∑ÿ©

*‚Ä¢ ÿßÿ≥ÿπÿßÿ± ÿ™ŸÅÿπŸäŸÑ ÿßÿ¥ÿ™ÿ±ÿßŸÉ ·¥†…™·¥ò ŸÅŸä ÿ®Ÿàÿ™ strt :*

- ÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÑŸÖÿØÿ© ÿßÿ≥ÿ®Ÿàÿπ : 3$
- ÿ•ÿ¥ÿ™ÿ±ÿßŸÉ ŸÑŸÖÿØÿ© ÿ¥Ÿáÿ± : 10$

*‚Ä¢ ŸÖŸÑÿ≠Ÿàÿ∏ÿ© :*

- ÿßŸÑÿπŸÖŸÑÿ© $ = ÿØŸàŸÑÿßÿ± ÿßŸÖÿ±ŸäŸÉŸä üá±üá∑
- ÿπŸÜÿØ ÿßŸÑÿØŸÅÿπ Ÿäÿ™ŸÖ ŸÖÿ≠ÿßÿ≥ÿ®ÿ™ŸÉ ÿ®ÿ≥ÿπÿ± ÿßŸÑÿØŸàŸÑÿßÿ± ÿßŸÑÿßŸÖÿ±ŸäŸÉŸä ŸÅŸä ÿßŸÑÿ®ŸÑÿØ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ 

*‚Ä¢ ÿ∑ÿ±ŸÇ ÿßŸÑÿØŸÅÿπ ÿßŸÑŸÖÿ™ŸàŸÅÿ±ÿ© :*

- ÿßÿ≥Ÿäÿßÿ≥ŸäŸÑ | ÿ≤ŸäŸÜ ŸÉÿßÿ¥ | ŸÅŸàÿßÿØŸÅŸàŸÜ ŸÉÿßÿ¥ | ÿßÿ™ÿµÿßŸÑÿßÿ™ ŸÉÿßÿ¥ | ÿßŸàÿ±ŸÜ⁄Ü ŸÉÿßÿ¥ | ÿßŸäÿØÿßÿπ ŸÉÿ±ŸäŸÖŸä

‚Ä¢ ŸÑŸÑÿ™ŸàÿßÿµŸÑ ŸàÿßŸÑÿßÿ≥ÿ™ŸÅÿ≥ÿßÿ± : @w3ww5'''
        bot.edit_message_text(text=hakem,chat_id=cid,message_id=mid,parse_mode="Markdown",reply_markup=keys)
    if data == 'dump_votes':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='<strong>‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπÿ≤Ÿäÿ≤Ÿä ŸÑŸÇÿØ ÿßŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò\n\n‚Ä¢ ŸÇŸÖ ÿ®ÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÖÿ¨ÿØÿØÿß</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
                return 
            db.set(f'dump_votes_{cid}_proccess', True)
            x = bot.edit_message_text(text='‚Ä¢ ÿ≠ÿ≥ŸÜÿß ÿå ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ≥ÿ≠ÿ® ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±ÿßÿ™ ŸÖŸÜŸá ',reply_markup=bk,chat_id=cid,message_id=mid)
            bot.register_next_step_handler(x, dump_votes)
        else:
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·¥†…™·¥ò ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'share_link':
        bot_user = None
        try:
            x = bot.get_me()
            bot_user = x.username
        except:
            bot.edit_message_text(text=f'‚Ä¢ ÿ≠ÿØÿ´ ÿÆÿ∑ÿß ŸÖÿß ŸÅŸä ÿßŸÑÿ®Ÿàÿ™',chat_id=cid,message_id=mid,reply_markup=bk)
            return
        link = f'https://t.me/{bot_user}?start={cid}'
        y = trend()
        keys = mk(row_width=2)
        keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='collect'))
        inviting = db.get(f"invite_{cid}") if db.exists(f"invite_{cid}") else 0
        gghh = 10 - int(inviting)
        xyz = f'''<strong>ÿßŸÜÿ≥ÿÆ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ´ŸÖ ŸÇŸÖ ÿ®ŸÖÿ¥ÿßÿ±ŸÉÿ™Ÿá ŸÖÿπ ÿßÿµÿØŸÇÿßÿ¶ŸÉ !!</strong>\n‚Ä¢ ŸÉŸÑ ÿ¥ÿÆÿµ ŸäŸÇŸàŸÖ ÿ®ÿßŸÑÿØÿÆŸàŸÑ ÿ≥ÿ™ÿ≠ÿµŸÑ ÿπŸÑŸâ <strong>{link_price}</strong> ŸÜŸÇÿ∑Ÿá\n\n‚Ä¢ ŸÉŸÑ <strong>10</strong> ÿßÿ¥ÿÆÿßÿµ ŸäÿØÿÆŸÑŸàŸÜ ÿπÿ®ÿ± ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ÿ≥ÿ™ÿ≠ÿµŸÑ ÿπŸÑŸä <strong>500</strong> ŸÜŸÇÿ∑ÿ© ŸáÿØŸäÿ© üéÅ\n\n‚Ä¢ ŸÖÿ¥ÿßÿ±ŸÉÿ™ŸÉ ŸÑŸÑÿ±ÿßÿ®ÿ∑ : <strong>{len(get(cid)["users"])} </strong>\n‚Ä¢ ÿ™ÿ®ŸÇŸä ŸÑŸÉ ÿØÿπŸàÿ© <strong>{gghh}</strong> ÿßÿ¥ÿÆÿßÿµ ÿ≠ÿ™Ÿä ÿ™ÿ≠ÿµŸÑ ÿπŸÑŸä <strong>500</strong> ŸÜŸÇÿ∑ÿ© üåÄ\n‚Ä¢ [üåÄ] ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© : \n\n‚Ä¢ {link}\n\n{y}'''
        bot.edit_message_text(text=xyz,chat_id=cid,message_id=mid,reply_markup=keys)

    if data == 'members':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='<strong>‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπÿ≤Ÿäÿ≤Ÿä ŸÑŸÇÿØ ÿßŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò\n\n‚Ä¢ ŸÇŸÖ ÿ®ÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÖÿ¨ÿØÿØÿß</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
                return 
            db.set(f'member_{cid}_proccess', True)
            x = bot.edit_message_text(text=f'‚Ä¢ ÿ≠ÿ≥ŸÜÿß ÿå ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ° ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿßÿ±ÿ≥ÿßŸÑŸáÿß \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {member_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿπÿ∂Ÿà',chat_id=cid,message_id=mid)
            type = 'members'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·¥†…™·¥ò ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'membersp':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='<strong>‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπÿ≤Ÿäÿ≤Ÿä ŸÑŸÇÿØ ÿßŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò\n\n‚Ä¢ ŸÇŸÖ ÿ®ÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÖÿ¨ÿØÿØÿß</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
                return
            wt = db.get(f"serv_{cid}")
            if wt is True:
                bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ∑ŸÑÿ® ÿßŸÉÿ´ÿ± ŸÖŸÜ ÿ∑ŸÑÿ® ÿ®ŸÜŸÅÿ≥ ÿßŸÑŸàŸÇÿ™\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
                return
            db.set(f'memberp_{cid}_proccess', True)
            x = bot.edit_message_text(text=f'‚Ä¢ ÿ≠ÿ≥ŸÜÿß ÿå ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ° ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿßÿ±ÿ≥ÿßŸÑŸáÿß \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {member_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿπÿ∂Ÿà',chat_id=cid,message_id=mid)
            type = 'membersp'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·¥†…™·¥ò ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'spams':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='<strong>‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπÿ≤Ÿäÿ≤Ÿä ŸÑŸÇÿØ ÿßŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò\n\n‚Ä¢ ŸÇŸÖ ÿ®ÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÖÿ¨ÿØÿØÿß</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
                return 
            wt = db.get(f"serv_{cid}")
            if wt is True:
                bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ∑ŸÑÿ® ÿßŸÉÿ´ÿ± ŸÖŸÜ ÿ∑ŸÑÿ® ÿ®ŸÜŸÅÿ≥ ÿßŸÑŸàŸÇÿ™\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
                return
            db.set(f'spam_{cid}_proccess', True)
            x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ±ÿ≥ÿßÿ¶ŸÑ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿßÿ±ÿ≥ÿßŸÑŸáÿß ÿßÿ≥ÿ®ÿßŸÖ\n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {spam_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ±ÿ≥ÿßŸÑÿ©',chat_id=cid,message_id=mid)
            type = 'msgs'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·¥†…™·¥ò ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'click_force':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© VIP',chat_id=cid,message_id=mid,reply_markup=keys)
                
                return 
            x = bot.edit_message_text(text=f'‚Ä¢ ÿ≠ÿ≥ŸÜÿß ÿå ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿßŸÑÿ™ÿµŸàŸäÿ™ ÿπŸÑŸäŸá',chat_id=cid,message_id=mid,reply_markup=keys)
            bot.register_next_step_handler(x, get_url_click_force)
        else:
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© VIP',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'react':
        wt = db.get(f"serv_{cid}")
        if wt is True:
            bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ∑ŸÑÿ® ÿßŸÉÿ´ÿ± ŸÖŸÜ ÿ∑ŸÑÿ® ÿ®ŸÜŸÅÿ≥ ÿßŸÑŸàŸÇÿ™\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
            return
        db.set(f'react_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {react_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ™ŸÅÿßÿπŸÑ',chat_id=cid,message_id=mid)
        type = 'react'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'reacts':
        wt = db.get(f"serv_{cid}")
        if wt is True:
            bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ∑ŸÑÿ® ÿßŸÉÿ´ÿ± ŸÖŸÜ ÿ∑ŸÑÿ® ÿ®ŸÜŸÅÿ≥ ÿßŸÑŸàŸÇÿ™\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
            return
        db.set(f'reacts_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß ÿ®ÿ¥ŸÉŸÑ ÿπÿ¥Ÿàÿßÿ¶Ÿä \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {react_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ™ŸÅÿßÿπŸÑ',chat_id=cid,message_id=mid)
        type = 'reactsrandom'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'positive':
        wt = db.get(f"serv_{cid}")
        if wt is True:
            bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ∑ŸÑÿ® ÿßŸÉÿ´ÿ± ŸÖŸÜ ÿ∑ŸÑÿ® ÿ®ŸÜŸÅÿ≥ ÿßŸÑŸàŸÇÿ™\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
            return
        db.set(f'reacts_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß ÿßŸäÿ¨ÿßÿ®Ÿäÿß \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {react_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ™ŸÅÿßÿπŸÑ',chat_id=cid,message_id=mid)
        type = 'positive'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'negative':
        wt = db.get(f"serv_{cid}")
        if wt is True:
            bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ∑ŸÑÿ® ÿßŸÉÿ´ÿ± ŸÖŸÜ ÿ∑ŸÑÿ® ÿ®ŸÜŸÅÿ≥ ÿßŸÑŸàŸÇÿ™\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
            return
        db.set(f'reacts_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß ÿ≥ŸÑÿ®Ÿäÿß \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {react_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ™ŸÅÿßÿπŸÑ',chat_id=cid,message_id=mid)
        type = 'negative'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'forward':
        wt = db.get(f"serv_{cid}")
        if wt is True:
            bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ∑ŸÑÿ® ÿßŸÉÿ´ÿ± ŸÖŸÜ ÿ∑ŸÑÿ® ÿ®ŸÜŸÅÿ≥ ÿßŸÑŸàŸÇÿ™\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
            return
        db.set(f'forward_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™Ÿàÿ¨ŸäŸáÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß ÿπŸÑŸä ŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑŸÇŸÜÿßÿ© \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {forward_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ™Ÿàÿ¨ŸäŸá',chat_id=cid,message_id=mid)
        type = 'forward'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'view':
        wt = db.get(f"serv_{cid}")
        if wt is True:
            bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ∑ŸÑÿ® ÿßŸÉÿ´ÿ± ŸÖŸÜ ÿ∑ŸÑÿ® ÿ®ŸÜŸÅÿ≥ ÿßŸÑŸàŸÇÿ™\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
            return
        db.set(f'view_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿßŸÑŸÑŸä ÿ™ÿ±ŸäÿØ ÿ™ÿ±ÿ¥ŸÇŸáÿß ÿπŸÑŸä ŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑŸÇŸÜÿßÿ© \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {view_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ŸÖÿ¥ÿßŸáÿØŸá',chat_id=cid,message_id=mid)
        type = 'view'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'poll':
        wt = db.get(f"serv_{cid}")
        if wt is True:
            bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ∑ŸÑÿ® ÿßŸÉÿ´ÿ± ŸÖŸÜ ÿ∑ŸÑÿ® ÿ®ŸÜŸÅÿ≥ ÿßŸÑŸàŸÇÿ™\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
            return
        db.set(f'poll_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿßÿ≥ÿ™ŸÅÿ™ÿßÿ° ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {poll_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ™ÿµŸàŸäÿ™',chat_id=cid,message_id=mid)
        type = 'poll'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'change_price':
        type = 'change_price'
        x  = bot.edit_message_text(text=f'‚Ä¢ ŸÑÿ™ÿ∫ŸäŸäÿ± ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßÿ™ÿ®ÿπ ÿßŸÑÿ™ÿπŸÑŸäŸÖÿßÿ™ \n\n‚Ä¢ ŸÑÿ™ÿ∫ŸäŸäÿ± ÿ≥ÿπÿ± ÿßŸÑÿ™ÿµŸàŸäÿ™ÿßÿ™ ÿßÿ±ÿ≥ŸÑ : <code>vote_price</code>\n\n‚Ä¢ ŸÑÿ™ÿ∫ŸäŸäÿ± ÿ≥ÿπÿ± ÿßŸÑÿßÿ≥ÿ®ÿßŸÖ ÿßÿ±ÿ≥ŸÑ : <code>spam_price</code>\n\n‚Ä¢ ŸÑÿ™ÿ∫ŸäŸäÿ± ÿ≥ÿπÿ± ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßÿ±ÿ≥ŸÑ : <code>react_price</code>\n\n‚Ä¢ ŸÑÿ™ÿ∫ŸäŸäÿ± ÿ≥ÿπÿ± ÿßŸÑŸÖÿ¥ÿßŸáÿØÿßÿ™ ÿßÿ±ÿ≥ŸÑ : <code>view_price</code>\n\n‚Ä¢ ŸÑÿ™ÿ∫ŸäŸäÿ± ÿ≥ÿπÿ± ÿßŸÑÿßÿπÿ∂ÿßÿ° ÿßÿ±ÿ≥ŸÑ : <code>member_price</code>',chat_id=cid, message_id=mid)
        bot.register_next_step_handler(x, adminss, type)
    if data == 'userbot':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='<strong>‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπÿ≤Ÿäÿ≤Ÿä ŸÑŸÇÿØ ÿßŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò\n\n‚Ä¢ ŸÇŸÖ ÿ®ÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÖÿ¨ÿØÿØÿß</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
                return 
            wt = db.get(f"serv_{cid}")
            if wt is True:
                bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ∑ŸÑÿ® ÿßŸÉÿ´ÿ± ŸÖŸÜ ÿ∑ŸÑÿ® ÿ®ŸÜŸÅÿ≥ ÿßŸÑŸàŸÇÿ™\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
                return
            db.set(f'userbot_{cid}_proccess', True)
            x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ™ÿ±ÿ¥ŸÇŸáŸÖ ŸÑŸÑÿ®Ÿàÿ™ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {userbot_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ŸÖÿ≥ÿ™ÿÆÿØŸÖ',chat_id=cid,message_id=mid)
            type = 'userbot'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·¥†…™·¥ò ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'linkbot':
        wt = db.get(f"serv_{cid}")
        if wt is True:
            bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ∑ŸÑÿ® ÿßŸÉÿ´ÿ± ŸÖŸÜ ÿ∑ŸÑÿ® ÿ®ŸÜŸÅÿ≥ ÿßŸÑŸàŸÇÿ™\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
            return
        db.set(f'linkbot_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿ±Ÿàÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {linkbot_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿØÿπŸàÿ©',chat_id=cid,message_id=mid)
        type = 'linkbot'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'comments':
        user_id = call.from_user.id€∏
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='<strong>‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπÿ≤Ÿäÿ≤Ÿä ŸÑŸÇÿØ ÿßŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò\n\n‚Ä¢ ŸÇŸÖ ÿ®ÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÖÿ¨ÿØÿØÿß</strong>',chat_id=cid,message_id=mid,reply_markup=key)
                return 
            wt = db.get(f"serv_{cid}")
            if wt is True:
                bot.edit_message_text(text='<strong>‚Ä¢ ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ∑ŸÑÿ® ÿßŸÉÿ´ÿ± ŸÖŸÜ ÿ∑ŸÑÿ® ÿ®ŸÜŸÅÿ≥ ÿßŸÑŸàŸÇÿ™\n\n‚Ä¢ ÿ®ÿ±ÿ¨ÿßÿ° ÿßŸÑÿßŸÜÿ™ÿ∏ÿßÿ± ŸÑÿ≠ŸäŸÜ Ÿäÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑÿßŸàŸÑ</strong>',chat_id=cid,message_id=mid,reply_markup=bk)
                return
            db.set(f'comments_{cid}_proccess', True)
            x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ™ÿπŸÑŸäŸÇÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸáÿß \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {comment_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿ™ÿπŸÑŸäŸÇ',chat_id=cid,message_id=mid)
            type = 'comments'
            bot.register_next_step_handler(x, get_amount, type)
        else:
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            bot.edit_message_text(text='‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·¥†…™·¥ò ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'tape':
        how = ""
        x = giiiift(cid)
        if x is not None:
            duration = datetime.timedelta(seconds=x)
            noww = datetime.datetime.now()
            target_datetime = noww + duration
            remaining_time = target_datetime - noww
            hours = remaining_time.seconds // 3600
            minutes = (remaining_time.seconds % 3600) // 60
            seconds = remaining_time.seconds % 60
            if hours > 0:
                how = f"‚ùå"
                hoow = "0/1"
            elif minutes > 0:
                how = f"‚ùå"
                hoow = "0/1"
            else:
                how = f"‚ùå"
                hoow = "0/1"
        else:
            how = "‚úÖ"
            hoow = "1/1"
        typ = float(db.get(f"typ_{cid}")) if db.exists(f"typ_{cid}") else 0.0
        if typ >= 100.0:
            db.set(f"typ_{cid}", 100)
            type = "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
        elif typ >= 85.0:
            type = "‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
        elif typ >= 75.0:
            type = "‚ñë‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
        elif typ >= 50.0:
            type = "‚ñë‚ñë‚ñë‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
        elif typ >= 25.0:
            type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì‚ñà‚ñà‚ñà ◊Ä<"
        elif typ >= 15.0:
            type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì‚ñà‚ñà ◊Ä<"
        elif typ >= 0.0:
            type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì ◊Ä<"
        if typ == 0.0:
            type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë ◊Ä<"
        keys = mk(
             [
                 [btn(text=f'ÿßŸÑÿ≤ŸäÿßÿØÿ©', callback_data=f'tt'),btn(text=f'ÿßŸÑÿ≠ÿµŸàŸÑ', callback_data=f'tt'),btn(text=f'ÿßŸÑŸÖÿ™ÿßÿ≠', callback_data=f'tt'),btn(text=f'ÿßŸÑŸÖŸáÿßŸÖ', callback_data=f'tt')],
                 [btn(text=f'0.2%', callback_data=f'tjkt'),btn(text=f'{how}', callback_data='ee'), btn(text=f'{hoow}', callback_data='kk'),btn(text=f'ÿßŸÑŸáÿØŸäÿ© üéÅ', callback_data=f'dailygift')],
                 [btn(text=f'0.3%', callback_data=f'tjklot'),btn(text=f'‚úÖ', callback_data='eoke'), btn(text=f'‚ôæ', callback_data='kiskk'),btn(text=f'ÿßŸÑÿØÿπŸàÿ© üåÄ', callback_data=f'share_link')],
                 [btn(text=f'0.1%', callback_data=f'tjklot'),btn(text=f'‚úÖ', callback_data='eoe'), btn(text=f'‚ôæ', callback_data='kis'),btn(text=f'ÿßŸÑÿßŸÜÿ∂ŸÖÿßŸÖ üì£', callback_data=f'join_ch')],
                 [btn(text=f'0.2%', callback_data=f'tvjklot'),btn(text=f'‚úÖ', callback_data='eloe'), btn(text=f'‚ôæ', callback_data='kiskv'),btn(text=f'ÿßŸÑÿ™ŸÖŸàŸäŸÑ üìÆ', callback_data=f'tmoo')],
                 [btn(text=f'0.1%', callback_data=f'tvjot'),btn(text=f'‚úÖ', callback_data='elo'), btn(text=f'‚ôæ', callback_data='kkv'),btn(text=f'ÿßŸÑÿ™ÿ≠ŸàŸäŸÑ ‚ôªÔ∏è', callback_data=f'sendd')],
                 [btn(text=f'ŸÖÿ™ÿ¨ÿ± ÿßŸÑŸÖŸáÿßŸÖ üõí', callback_data='market')],
                 [btn(text=f'%{typ} ◊Ä {type}', callback_data='tto')],
                 [btn(text='ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back')]
             ]
        )
        bot.edit_message_text(text='‚Ä¢ ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÇÿ≥ŸÖ ÿ¥ÿ±Ÿäÿ∑ ÿßŸÑŸÖŸáÿßŸÖ „ÄΩÔ∏è\n\n‚Ä¢ ÿßŸÉŸÖŸÑ ÿßŸÑŸÖŸáÿßŸÖ Ÿàÿßÿ≥ÿ™ÿ®ÿØŸÑ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿ®ÿßŸÑŸáÿØÿßŸäÿß ŸàÿßŸÑŸÖŸÉÿßŸÅÿßÿ™ ŸÅŸä ŸÖÿ™ÿ¨ÿ± ÿßŸÑŸÖŸáÿßŸÖ ',chat_id=cid,message_id=mid,reply_markup=keys)
    typ = float(db.get(f"typ_{cid}")) if db.exists(f"typ_{cid}") else 0.0
    if typ >= 100.0:
        db.set(f"typ_{cid}", 100)
        type = "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
    elif typ >= 85.0:
        type = "‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
    elif typ >= 75.0:
        type = "‚ñë‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
    elif typ >= 50.0:
        type = "‚ñë‚ñë‚ñë‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà ◊Ä<"
    elif typ >= 25.0:
        type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì‚ñà‚ñà‚ñà ◊Ä<"
    elif typ >= 15.0:
        type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì‚ñà‚ñà ◊Ä<"
    elif typ >= 0.0:
        type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì ◊Ä<"
    if typ == 0.0:
        type = "‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë ◊Ä<"
    if data == 'market':
        typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
        key = mk(
            [
                [btn(text='ÿßŸÑÿßÿ™ÿßÿ≠ÿ©', callback_data='pp'),btn(text=f'ÿßŸÑÿ≥ÿπÿ±', callback_data='pp'),btn(text=f'ÿßŸÑŸÖŸÉÿßŸÅÿ£ÿ©', callback_data='pp')],
                [btn(text='ŸÇÿ≥ŸÖ ÿßŸÑŸÜŸÇÿßÿ∑', callback_data='ppo')],
                [btn(text='‚úÖ', callback_data='chda'),btn(text=f'50.0%', callback_data='chda'),btn(text=f'5000 ŸÜŸÇÿ∑ÿ©', callback_data='chda')],
                [btn(text='‚úÖ', callback_data='chd1'),btn(text=f'10.0%', callback_data='chd1'),btn(text=f'1000 ŸÜŸÇÿ∑ÿ©', callback_data='chd1')],
                [btn(text='ŸÇÿ≥ŸÖ ÿßŸÑŸÄ ·¥†…™·¥ò', callback_data='plp')],
                [btn(text='‚ùå', callback_data='chvi'),btn(text=f'100.0%', callback_data='chvi'),btn(text=f'10 ŸäŸàŸÖ ·¥†…™·¥ò', callback_data='chvi')],
                [btn(text='‚úÖ', callback_data='ch5'),btn(text=f'50.0%', callback_data='ch5'),btn(text=f'5 ŸäŸàŸÖ ·¥†…™·¥ò', callback_data='ch5')],
                [btn(text='‚úÖ', callback_data='ch1'),btn(text=f'10.0%', callback_data='ch1'),btn(text=f'1 ŸäŸàŸÖ ·¥†…™·¥ò', callback_data='ch1')],
                [btn(text=f'%{typ} ◊Ä {type}', callback_data='tto')],
                [btn(text='ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='tape')]
            ]
        )
        bot.edit_message_text(text='‚Ä¢ ŸÖÿ±ÿ≠ÿ®ÿß ÿ®ŸÉ ŸÅŸä ŸÖÿ™ÿ¨ÿ± ÿ¥ÿ±Ÿäÿ∑ ÿßŸÑŸÖŸáÿßŸÖ „ÄΩÔ∏è\n‚Ä¢ ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿ®ÿØÿßŸÑ ÿßŸÑŸÖŸÉÿßŸÅÿßÿ™ ŸÖŸÇÿßÿ®ŸÑ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿßŸÑÿ≠ÿßŸÑŸäÿ© ŸÑÿ≠ÿ≥ÿßÿ®ŸÉ',chat_id=cid,message_id=mid,reply_markup=key)
    if data == 'chda':
        user_id = call.from_user.id
        typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
        if typ >= 50.0:
            rk = "ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸä 5000 ŸÜŸÇÿ∑ÿ© Ÿàÿ™ŸÖ ÿÆÿµŸÖ 50.0% ŸÖŸÜ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ üéâ"
            typ = float(db.get(f"typ_{cid}")) if db.exists(f"typ_{cid}") else 0.0
            ftt = typ - 50.0
            db.set(f"typ_{cid}", float(ftt))
            info = db.get(f'user_{cid}')
            info['coins'] = int(info['coins']) + 5000
            db.set(f"user_{cid}", info)
            bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,reply_markup=bk)
        else:
            bot.answer_callback_query(call.id, text=f"‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿßŸÑÿ≠ÿßŸÑŸäÿ© {typ} ŸÑÿß ÿ™ŸÉŸÅŸä ‚ùå")
    if data == 'chd1':
        user_id = call.from_user.id
        typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
        if typ >= 10.0:
            rk = "ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸä 1000 ŸÜŸÇÿ∑ÿ© Ÿàÿ™ŸÖ ÿÆÿµŸÖ 10.0% ŸÖŸÜ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ üéâ"
            typ = float(db.get(f"typ_{cid}")) if db.exists(f"typ_{cid}") else 0.0
            ftt = typ - 10.0
            db.set(f"typ_{cid}", float(ftt))
            info = db.get(f'user_{cid}')
            info['coins'] = int(info['coins']) + 1000
            db.set(f"user_{cid}", info)
            bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,reply_markup=bk)
        else:
            bot.answer_callback_query(call.id, text=f"‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿßŸÑÿ≠ÿßŸÑŸäÿ© {typ} ŸÑÿß ÿ™ŸÉŸÅŸä ‚ùå")
    if data == 'dellink':
        count_coins = db.get("user_trans")
        if count_coins != 0:
            try:
                rand = db.get("user_tran")
                user_from = db.get("user_iddd")
                joo = db.get(f"user_{user_from}")
                info = db.get(f"user_{cid}")
                coins = info['coins']
                rk = f"""*‚Ä¢ üìé] ÿ™ŸÖ ÿ™ÿπÿ∑ŸäŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ , Ÿàÿ≥ÿ™ÿ±ÿØÿßÿØ {count_coins} ŸÜŸÇÿ∑ÿ© ‚ôªÔ∏è*"""
                bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,parse_mode="Markdown",reply_markup=bk)
                info['coins'] = int(info['coins']) + int(count_coins)
                db.set(f"user_{cid}", info)
                db.delete('user_tran')
                db.delete('user_iddd')
            except:
                rk = f"""*‚Ä¢ üìé] ÿ™ŸÖÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿµŸÑÿßÿ≠Ÿäÿ© Ÿáÿ∞ÿß ÿßŸÑÿ±ÿßÿ®ÿ∑ ‚ùå*"""
                bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,parse_mode="Markdown",reply_markup=bk)
        else:
            rk = f"""*‚Ä¢ üìé] ÿ™ŸÖÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿµŸÑÿßÿ≠Ÿäÿ© Ÿáÿ∞ÿß ÿßŸÑÿ±ÿßÿ®ÿ∑ ‚ùå*"""
            bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,parse_mode="Markdown",reply_markup=bk)
    if data == 'chvi':
        user_id = call.from_user.id
        typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
        if typ >= 100.0:
            rk = "<strong>‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸä 10 ŸäŸàŸÖ ·¥†…™·¥ò  Ÿàÿ™ŸÖ ÿÆÿµŸÖ 100.0% ŸÖŸÜ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ üéâ</strong>"
            typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
            ftt = typ - 100.0
            db.set(f"typ_{user_id}", float(ftt))
            info = db.get(f'user_{user_id}')
            info['premium'] = True
            db.set(f"user_{user_id}", info)
            users = {}
            noww = time.time()
            users['vip'] = noww
            db.set(f'vip_{user_id}', users)
            db.set(f"vipp_{user_id}_time", 5)
            us = bot.get_chat(user_id)
            if us.username is None:
                user = "ŸÑÿß ŸäŸàÿ¨ÿØ"
            else:
                user = "@" + us.username
            name = us.first_name
            today = datetime.date.today()
            end_date = today + datetime.timedelta(days=int(10))
            now = datetime.datetime.now()
            HM = now.strftime("%p")
            if str(HM) == str("PM"):
                how = "ŸÖÿ≥ÿßÿ°Ÿã"
            else:
                how = "ÿµÿ®ÿßÿ≠ÿßŸã"
            hour = now.hour
            minutes = now.minute
            seconds = now.second
            d = 10
            h = 10 * 24
            m = 10 * 24 * 60
            s = 10 * 24 * 60 * 60
            reb2 = f"""*‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ÿ™ŸÖ ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ŸÑÿ≠ÿ≥ÿßÿ®ŸÉ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ ‚úÖ*\n\n_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† ‚è±Ô∏è:_\n\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}\n\n*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ :*\n\n- ŸäŸàŸÖ : {end_date}\n- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}\n- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
            reb = f"""*‚Ä¢ ÿ™ŸÖÿ™ ÿπŸÖŸÑŸäÿ© ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ÿ¨ÿØŸäÿØŸá üî•*
`{user_id}`
*‚Ä¢ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸàÿßŸÑŸÖÿØÿ© ‚è±:*

_‚Ä¢ ŸàŸÇÿ™ ÿßŸÑÿ™ŸÅÿπŸäŸÑ :_

- ÿßŸÑŸäŸàŸÖ : {today}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}

_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† :_

- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}

*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ :*

_‚Ä¢ ÿ≥ŸäŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿπÿ∂Ÿà ŸÅŸä :_

- ŸäŸàŸÖ : {end_date}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
            bot.send_message(chat_id=int(sudo), text=reb, parse_mode="Markdown")
            bot.send_message(chat_id=int(user_id), text=reb2, parse_mode="Markdown")
            bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,reply_markup=bk)
        else:
            bot.answer_callback_query(call.id, text=f"‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå Ÿáÿ∞ÿß ÿßŸÑÿπÿ±ÿ∂ ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠ ÿ≠ÿßŸÑŸäÿßŸã ‚ùå")
    if data == 'ch5':
        user_id = call.from_user.id
        typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
        if typ >= 50.0:
            rk = "<strong>‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸä 5 ŸäŸàŸÖ ·¥†…™·¥ò  Ÿàÿ™ŸÖ ÿÆÿµŸÖ 50.0% ŸÖŸÜ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ üéâ</strong>"
            typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
            ftt = typ - 50.0
            db.set(f"typ_{user_id}", float(ftt))
            info = db.get(f'user_{user_id}')
            info['premium'] = True
            db.set(f"user_{user_id}", info)
            users = {}
            noww = time.time()
            users['vip'] = noww
            db.set(f'vip_{user_id}', users)
            db.set(f"vipp_{user_id}_time", 3)
            us = bot.get_chat(user_id)
            if us.username is None:
                user = "ŸÑÿß ŸäŸàÿ¨ÿØ"
            else:
                user = "@" + us.username
            name = us.first_name
            today = datetime.date.today()
            end_date = today + datetime.timedelta(days=int(5))
            now = datetime.datetime.now()
            HM = now.strftime("%p")
            if str(HM) == str("PM"):
                how = "ŸÖÿ≥ÿßÿ°Ÿã"
            else:
                how = "ÿµÿ®ÿßÿ≠ÿßŸã"
            hour = now.hour
            minutes = now.minute
            seconds = now.second
            d = 5
            h = 5 * 24
            m = 5 * 24 * 60
            s = 5 * 24 * 60 * 60
            reb2 = f"""*‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ÿ™ŸÖ ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ŸÑÿ≠ÿ≥ÿßÿ®ŸÉ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ ‚úÖ*\n\n_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† ‚è±Ô∏è:_\n\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}\n\n*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ :*\n\n- ŸäŸàŸÖ : {end_date}\n- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}\n- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
            reb = f"""*‚Ä¢ ÿ™ŸÖÿ™ ÿπŸÖŸÑŸäÿ© ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ÿ¨ÿØŸäÿØŸá üî•*
`{user_id}`
*‚Ä¢ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸàÿßŸÑŸÖÿØÿ© ‚è±:*

_‚Ä¢ ŸàŸÇÿ™ ÿßŸÑÿ™ŸÅÿπŸäŸÑ :_

- ÿßŸÑŸäŸàŸÖ : {today}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}

_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† :_

- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}

*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ :*

_‚Ä¢ ÿ≥ŸäŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿπÿ∂Ÿà ŸÅŸä :_

- ŸäŸàŸÖ : {end_date}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
            bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,reply_markup=bk)
            bot.send_message(chat_id=int(sudo), text=reb, parse_mode="Markdown")
            bot.send_message(chat_id=int(user_id), text=reb2, parse_mode="Markdown")
        else:
            bot.answer_callback_query(call.id, text=f"‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿßŸÑÿ≠ÿßŸÑŸäÿ© {typ} ŸÑÿß ÿ™ŸÉŸÅŸä ‚ùå")
    if data == 'ch1':
        user_id = call.from_user.id
        typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
        if typ >= 10.0:
            rk = "<strong>‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸä 1 ŸäŸàŸÖ ·¥†…™·¥ò  Ÿàÿ™ŸÖ ÿÆÿµŸÖ 10.0% ŸÖŸÜ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ üéâ</strong>"
            typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{cid}") else 0.0
            ftt = typ - 10.0
            db.set(f"typ_{user_id}", float(ftt))
            info = db.get(f'user_{user_id}')
            info['premium'] = True
            db.set(f"user_{user_id}", info)
            users = {}
            noww = time.time()
            users['vip'] = noww
            db.set(f'vip_{user_id}', users)
            db.set(f"vipp_{user_id}_time", 1)
            us = bot.get_chat(user_id)
            if us.username is None:
                user = "ŸÑÿß ŸäŸàÿ¨ÿØ"
            else:
                user = "@" + us.username
            name = us.first_name
            today = datetime.date.today()
            end_date = today + datetime.timedelta(days=int(1))
            now = datetime.datetime.now()
            HM = now.strftime("%p")
            if str(HM) == str("PM"):
                how = "ŸÖÿ≥ÿßÿ°Ÿã"
            else:
                how = "ÿµÿ®ÿßÿ≠ÿßŸã"
            hour = now.hour
            minutes = now.minute
            seconds = now.second
            d = 1
            h = 1 * 24
            m = 1 * 24 * 60
            s = 1 * 24 * 60 * 60
            reb2 = f"""*‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ÿ™ŸÖ ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ŸÑÿ≠ÿ≥ÿßÿ®ŸÉ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ ‚úÖ*\n\n_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† ‚è±Ô∏è:_\n\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}\n\n*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ :*\n\n- ŸäŸàŸÖ : {end_date}\n- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}\n- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
            reb = f"""*‚Ä¢ ÿ™ŸÖÿ™ ÿπŸÖŸÑŸäÿ© ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ÿ¨ÿØŸäÿØŸá üî•*
`{user_id}`
*‚Ä¢ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸàÿßŸÑŸÖÿØÿ© ‚è±:*

_‚Ä¢ ŸàŸÇÿ™ ÿßŸÑÿ™ŸÅÿπŸäŸÑ :_

- ÿßŸÑŸäŸàŸÖ : {today}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}

_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† :_

- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}

*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ :*

_‚Ä¢ ÿ≥ŸäŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿπÿ∂Ÿà ŸÅŸä :_

- ŸäŸàŸÖ : {end_date}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
            bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,reply_markup=bk)
            bot.send_message(chat_id=int(sudo), text=reb, parse_mode="Markdown")
            bot.send_message(chat_id=int(user_id), text=reb2, parse_mode="Markdown")
        else:
            bot.answer_callback_query(call.id, text=f"‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ¥ÿ±Ÿäÿ∑ ÿßŸÑÿ≠ÿßŸÑŸäÿ© {typ} ŸÑÿß ÿ™ŸÉŸÅŸä ‚ùå")
    if data == 'lvallc':
        bot.edit_message_text(text='‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ŸÖÿ∫ÿßÿØÿ±ÿ© ŸÉŸÑ ÿßŸÑŸÇŸÜŸàÿßÿ™ ŸàÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ',chat_id=cid,message_id=mid)
        acc = db.get('accounts')
        amount = len(acc)
        true = 0
        for amount in acc:
            try:
                true+=1
                o = asyncio.run(leave_chats(amount['s']))  
            except Exception as e:
                print(e)
                continue
            id = call.from_user.id
            bot.send_message(chat_id=id, text=f'‚Ä¢ ÿ™ŸÖ ÿ®ŸÜÿ¨ÿßÿ≠ ÿßŸÑÿÆÿ±Ÿàÿ¨ ŸÖŸÜ ŸÉŸÑ ÿßŸÑŸÇŸÜŸàÿßÿ™ ŸàÿßŸÑŸÖÿ¨ŸÖŸàÿπÿßÿ™ \n‚Ä¢ ÿ™ŸÖ ÿßŸÑÿÆÿ±Ÿàÿ¨ ŸÖŸÜ <code>{true}</code> ÿ≠ÿ≥ÿßÿ® ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
    if data == 'cancel':
        bot.edit_message_text(text='<strong>‚Ä¢ ÿ™ŸÖ ÿßŸÑÿ∫ÿßÿ° ÿπŸÖŸÑŸäÿ© ÿßŸÑŸÖÿ∫ÿßÿØÿ±ÿ© ‚ùå</strong>',chat_id=cid,message_id=mid)
    if data == 'linkbot2':
        user_id = call.from_user.id
        prem = get(user_id)['premium']
        if prem is True:
            x = check_vip(call.from_user.id)
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            if x is None:
                bot.edit_message_text(text='<strong>‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπÿ≤Ÿäÿ≤Ÿä ŸÑŸÇÿØ ÿßŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò\n\n‚Ä¢ ŸÇŸÖ ÿ®ÿ™ÿ¨ÿØŸäÿØ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸÖÿ¨ÿØÿØÿß</strong>',chat_id=cid,message_id=mid,reply_markup=keys)
                return 
            db.set(f'linkbot2_{cid}_proccess', True)
            keys = mk(row_width=5)
            a = btn('1', callback_data='c1')
            b = btn('2', callback_data='c2')
            c = btn('3', callback_data='c3')
            d = btn('4', callback_data='c4')
            e = btn('5', callback_data='c5')
            f = btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back')
            keys.add(a,b,c,d,e)
            keys.add(f)
            x = bot.edit_message_text(text=f'‚Ä¢ ÿßÿÆÿ™ÿ± ÿßŸÑÿßŸÜ ÿπÿØÿØ ŸÇŸÜŸàÿßÿ™ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿßÿ¨ÿ®ÿßÿ±Ÿâ ŸÇÿ®ŸÑ ÿ±ÿ¥ŸÇ ÿ±Ÿàÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ©',reply_markup=keys,chat_id=cid,message_id=mid)
        else:
            keys = mk(row_width=2)
            keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='vips'))
            bot.edit_message_text(text=f'‚Ä¢ ÿπÿ∞ÿ±ÿß ÿπŸÑŸäŸÉ ÿ¥ÿ±ÿßÿ° ÿπÿ∂ŸàŸäÿ© ·¥†…™·¥ò ŸÇÿ®ŸÑ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ Ÿáÿ∞ÿß ÿßŸÑŸÇÿ≥ŸÖ',chat_id=cid,message_id=mid,reply_markup=keys)
    if data == 'c1':
        user_id = call.from_user.id
        db.set(f'linkbot2_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ŸÑŸÇÿØ ÿßÿÆÿ™ÿ±ÿ™ ÿ±ÿ¥ŸÇ ÿ±Ÿàÿßÿ®ÿ∑ ÿØÿπŸàÿ© ŸÑŸÄ <strong>1</strong> ŸÇŸÜÿßÿ© ÿßÿ¨ÿ®ÿßÿ±Ÿâ\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ±ÿ¥ŸÇ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØŸá \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {linkbot2_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿØÿπŸàÿ©',chat_id=cid,message_id=mid)
        type = 'linkbot1'
        bot.register_next_step_handler(x, get_amount, type)
    if data == 'c2':
        user_id = call.from_user.id
        db.set(f'linkbot2_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ŸÑŸÇÿØ ÿßÿÆÿ™ÿ±ÿ™ ÿ±ÿ¥ŸÇ ÿ±Ÿàÿßÿ®ÿ∑ ÿØÿπŸàÿ© ŸÑŸÄ <strong>2</strong> ŸÇŸÜÿßÿ© ÿßÿ¨ÿ®ÿßÿ±Ÿâ\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ±ÿ¥ŸÇ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØŸá \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {linkbot2_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿØÿπŸàÿ©',chat_id=cid,message_id=mid)
        type = 'linkbot2'
        bot.register_next_step_handler(x, get_linkbot, type)
    if data == 'c3':
        user_id = call.from_user.id
        db.set(f'linkbot2_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ŸÑŸÇÿØ ÿßÿÆÿ™ÿ±ÿ™ ÿ±ÿ¥ŸÇ ÿ±Ÿàÿßÿ®ÿ∑ ÿØÿπŸàÿ© ŸÑŸÄ <strong>3</strong> ŸÇŸÜÿßÿ© ÿßÿ¨ÿ®ÿßÿ±Ÿâ\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ±ÿ¥ŸÇ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØŸá \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {linkbot2_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿØÿπŸàÿ©',chat_id=cid,message_id=mid)
        type = 'linkbot2'
        bot.register_next_step_handler(x, get_linkbot, type)
    if data == 'c4':
        user_id = call.from_user.id
        db.set(f'linkbot2_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ŸÑŸÇÿØ ÿßÿÆÿ™ÿ±ÿ™ ÿ±ÿ¥ŸÇ ÿ±Ÿàÿßÿ®ÿ∑ ÿØÿπŸàÿ© ŸÑŸÄ <strong>4</strong> ŸÇŸÜÿßÿ© ÿßÿ¨ÿ®ÿßÿ±Ÿâ\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ±ÿ¥ŸÇ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØŸá \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {linkbot2_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿØÿπŸàÿ©',chat_id=cid,message_id=mid)
        type = 'linkbot2'
        bot.register_next_step_handler(x, get_linkbot, type)
    if data == 'c5':
        user_id = call.from_user.id
        db.set(f'linkbot2_{cid}_proccess', True)
        x = bot.edit_message_text(text=f'‚Ä¢ ŸÑŸÇÿØ ÿßÿÆÿ™ÿ±ÿ™ ÿ±ÿ¥ŸÇ ÿ±Ÿàÿßÿ®ÿ∑ ÿØÿπŸàÿ© ŸÑŸÄ <strong>5</strong> ŸÇŸÜÿßÿ© ÿßÿ¨ÿ®ÿßÿ±Ÿâ\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿ±ÿ¥ŸÇ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØŸá \n\n‚Ä¢ ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {linkbot2_price} ŸÜŸÇÿ∑ÿ© ŸÑŸÉŸÑ ÿØÿπŸàÿ©',chat_id=cid,message_id=mid)
        type = 'linkbot2'
        bot.register_next_step_handler(x, get_linkbot, type)
    if data == 'mytm':
        user_id = call.from_user.id
        if db.exists(f"Tmoil_{user_id}"):
            ch1 = db.get(f"Tmoil_{user_id}")
            count = int(db.get(f"count_{ch1}")) if db.exists(f"count_{ch1}") else 0
            mem = int(db.get(f"mem_{ch1}")) if db.exists(f"mem_{ch1}") else 0
            if int(count) <= 1:
                stat = "ÿ∑ŸÑÿ® ŸÖŸÉÿ™ŸÖŸÑ üü¢"
                count = 0
            else:
                stat = "ŸÇŸäÿØ ÿßŸÑÿ™ŸÜŸÅŸäÿ∞ ‚è≥"
            info1 = f"‚ú≥Ô∏è] ŸÖÿπÿ±ŸÅ ÿßŸÑŸÇŸÜÿßÿ© : {ch1}\nüè∑Ô∏è] ÿßŸÑŸÉŸÖŸäÿ© : {mem}\n‚è≥] ÿßŸÑŸÖÿ™ÿ®ŸÇŸä : {count}\n\nüîò) ÿ≠ÿßŸÑÿ© ÿßŸÑÿ∑ŸÑÿ® : {stat}\nŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄ\n"
        else:
            info1 = f"\n\n‚Ä¢ ŸÑÿß ŸäŸàÿ¨ÿØ ÿ™ŸÖŸàŸäŸÑÿßÿ™ ŸÖÿ≥ÿ¨ŸÑÿ© ÿ≠ÿßŸÑŸäÿß ‚ùå"
        if db.exists(f"Tmoil2_{user_id}"):
            ch2 = db.get(f"Tmoil2_{user_id}")
            count2 = int(db.get(f"count_{ch2}")) if db.exists(f"count_{ch2}") else 0
            mem2 = int(db.get(f"mem_{ch2}")) if db.exists(f"mem_{ch2}") else 0
            if int(count2) <= 1:
                stat2 = "ÿ∑ŸÑÿ® ŸÖŸÉÿ™ŸÖŸÑ üü¢"
                count2 = 0
            else:
                stat2 = "ŸÇŸäÿØ ÿßŸÑÿ™ŸÜŸÅŸäÿ∞ ‚è≥"
            info2 = f"‚ú≥Ô∏è] ŸÖÿπÿ±ŸÅ ÿßŸÑŸÇŸÜÿßÿ© : {ch2}\nüè∑Ô∏è] ÿßŸÑŸÉŸÖŸäÿ© : {mem2}\n‚è≥] ÿßŸÑŸÖÿ™ÿ®ŸÇŸä : {count2}\n\nüîò) ÿ≠ÿßŸÑÿ© ÿßŸÑÿ∑ŸÑÿ® : {stat2}\nŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄ\n"
        else:
            info2 = ""
        if db.exists(f"Tmoil3_{user_id}"):
            ch3 = db.get(f"Tmoil3_{user_id}")
            count3 = int(db.get(f"count_{ch3}")) if db.exists(f"count_{ch3}") else 0
            mem3 = int(db.get(f"mem_{ch3}")) if db.exists(f"mem_{ch3}") else 0
            if int(count3) <= 1:
                stat3 = "ÿ∑ŸÑÿ® ŸÖŸÉÿ™ŸÖŸÑ üü¢"
                count3 = 0
            else:
                stat3 = "ŸÇŸäÿØ ÿßŸÑÿ™ŸÜŸÅŸäÿ∞ ‚è≥"
            info3 = f"‚ú≥Ô∏è] ŸÖÿπÿ±ŸÅ ÿßŸÑŸÇŸÜÿßÿ© : {ch3}\nüè∑Ô∏è] ÿßŸÑŸÉŸÖŸäÿ© : {mem3}\n‚è≥] ÿßŸÑŸÖÿ™ÿ®ŸÇŸä : {count3}\n\nüîò) ÿ≠ÿßŸÑÿ© ÿßŸÑÿ∑ŸÑÿ® : {stat3}\nŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄ\n"
        else:
            info3 = ""
        
        rk = f"""‚Ä¢ ÿßŸÑŸäŸÉ ŸÇÿßÿ¶ŸÖÿ© ÿ®ÿßÿÆÿ± 3 ÿ™ŸÖŸàŸäŸÑÿßÿ™ŸÉ üìÆ\n{info1}\n{info2}\n{info3}"""
        key = mk(
            [
                [btn(text='ÿßÿ±ÿ≥ÿßŸÑ ÿ¨ŸÖŸäÿπ ÿßŸÑÿ™ŸÖŸàŸäŸÑÿßÿ™ ŸÅŸä ÿµŸäÿ∫ÿ© ŸÖŸÑŸÅ üìÇ', callback_data='send_doc')],
                [btn(text='ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back')]
            ]
        )
        bot.edit_message_text(text=rk,chat_id=cid,message_id=mid,reply_markup=key, parse_mode="HTML")
    if data == 'send_doc':
        user_id = call.from_user.id
        if db.exists(f"Tmoil_{user_id}"):
            ch1 = db.get(f"Tmoil_{user_id}")
            count = int(db.get(f"count_{ch1}")) if db.exists(f"count_{ch1}") else 0
            mem = int(db.get(f"mem_{ch1}")) if db.exists(f"mem_{ch1}") else 0
            if int(count) <= 1:
                stat = "ÿ∑ŸÑÿ® ŸÖŸÉÿ™ŸÖŸÑ üü¢"
            else:
                stat = "ŸÇŸäÿØ ÿßŸÑÿ™ŸÜŸÅŸäÿ∞ ‚è≥"
            info1 = f"‚ú≥Ô∏è] ŸÖÿπÿ±ŸÅ ÿßŸÑŸÇŸÜÿßÿ© : {ch1}\nüè∑Ô∏è] ÿßŸÑŸÉŸÖŸäÿ© : {mem}\n‚è≥] ÿßŸÑŸÖÿ™ÿ®ŸÇŸä : {count}\n\nüîò) ÿ≠ÿßŸÑÿ© ÿßŸÑÿ∑ŸÑÿ® : {stat}\nŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄ\n"
        else:
            info1 = f"\n\n‚Ä¢ ŸÑÿß ŸäŸàÿ¨ÿØ ÿ™ŸÖŸàŸäŸÑÿßÿ™ ŸÖÿ≥ÿ¨ŸÑÿ© ÿ≠ÿßŸÑŸäÿß ‚ùå"
        if db.exists(f"Tmoil2_{user_id}"):
            ch2 = db.get(f"Tmoil2_{user_id}")
            count2 = int(db.get(f"count_{ch2}")) if db.exists(f"count_{ch2}") else 0
            mem2 = int(db.get(f"mem_{ch2}")) if db.exists(f"mem_{ch2}") else 0
            if int(count2) <= 1:
                stat2 = "ÿ∑ŸÑÿ® ŸÖŸÉÿ™ŸÖŸÑ üü¢"
            else:
                stat2 = "ŸÇŸäÿØ ÿßŸÑÿ™ŸÜŸÅŸäÿ∞ ‚è≥"
            info2 = f"‚ú≥Ô∏è] ŸÖÿπÿ±ŸÅ ÿßŸÑŸÇŸÜÿßÿ© : {ch2}\nüè∑Ô∏è] ÿßŸÑŸÉŸÖŸäÿ© : {mem2}\n‚è≥] ÿßŸÑŸÖÿ™ÿ®ŸÇŸä : {count2}\n\nüîò) ÿ≠ÿßŸÑÿ© ÿßŸÑÿ∑ŸÑÿ® : {stat2}\nŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄ\n"
        else:
            info2 = ""
        if db.exists(f"Tmoil3_{user_id}"):
            ch3 = db.get(f"Tmoil3_{user_id}")
            count3 = int(db.get(f"count_{ch3}")) if db.exists(f"count_{ch3}") else 0
            mem3 = int(db.get(f"mem_{ch3}")) if db.exists(f"mem_{ch3}") else 0
            if int(count) <= 1:
                stat3 = "ÿ∑ŸÑÿ® ŸÖŸÉÿ™ŸÖŸÑ üü¢"
            else:
                stat3 = "ŸÇŸäÿØ ÿßŸÑÿ™ŸÜŸÅŸäÿ∞ ‚è≥"
            info3 = f"‚ú≥Ô∏è] ŸÖÿπÿ±ŸÅ ÿßŸÑŸÇŸÜÿßÿ© : {ch3}\nüè∑Ô∏è] ÿßŸÑŸÉŸÖŸäÿ© : {mem3}\n‚è≥] ÿßŸÑŸÖÿ™ÿ®ŸÇŸä : {count3}\n\nüîò) ÿ≠ÿßŸÑÿ© ÿßŸÑÿ∑ŸÑÿ® : {stat3}\nŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄŸÄ\n"
        else:
            info3 = ""
        
        rk = f"""‚Ä¢ ÿßŸÑŸäŸÉ ŸÖŸÑŸÅ ÿ®ÿßÿÆÿ± ÿ™ŸÖŸàŸäŸÑÿßÿ™ŸÉ üìÆ\n{info1}\n{info2}\n{info3}"""
        if db.exists(f"Tmoil_{user_id}"):
            with open(f"tmoil-{cid}.txt", "w") as file:
                file.write(rk)
            bot.send_document(cid, open(f"tmoil-{cid}.txt", "rb"), caption="\n‚Ä¢ ÿßŸÑŸäŸÉ ŸÖŸÑŸÅ Ÿäÿ≠ÿ™ŸàŸä ÿπŸÑŸä ÿ¨ŸÖŸäÿπ ÿ™ŸÖŸàŸäŸÑÿßÿ™ŸÉ ŸÅŸä ÿ®Ÿàÿ™ strt üìÆ")
        else:
            bot.answer_callback_query(call.id, text="‚Ä¢ ÿπÿ∞ÿ±ÿß ÿå ÿßŸÜÿ™ ŸÑŸÖ ÿ™ŸÇŸÖ ÿ®ÿßŸä ÿ™ŸÖŸàŸäŸÑ ÿ®ÿπÿØ ‚ùå",show_alert=True)
            return
    if data == 'join_ch':
        user_id = call.from_user.id
        coin_join = db.get("coin_join") if db.exists("coin_join") else 10
        chats_joining = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
        ch_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
        chats_dd = db.get('force_ch')
        joo = db.get(f"user_{user_id}")
        coin = joo['coins']
        chats_user = [chat for chat in chats_dd if chat not in chats_joining]
        doo = db.get('force_ch')
        if doo != None:
            for i in chats_user:
                count = db.get(f"count_{i}")
                ids = db.get(f"id_{i}")
                if int(count) <= 0:
                    tm = db.get("tmoil") if db.exists("tmoil") else 0
                    tmm = int(tm) + 1
                    db.set("tmoil", int(tmm))
                    chats_dd = db.get('force_ch')
                    chats_dd.remove(i)
                    db.set("force_ch", chats_dd)
                    chat_info = bot.get_chat(i)
                    name = chat_info.title
                    ii = i.replace('@', '')
                    mem = db.get(f"mem_{i}") if db.exists(f"mem_{i}") else "ÿπÿØÿØ ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ"
                    bot.send_message(chat_id=int(ids), text=f"ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
                    iddd = 6596299609
                    bot.send_message(chat_id=int(iddd), text=f"ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
                else: 
                    chat_info = bot.get_chat(i)
                    name = chat_info.title
                    ii = i.replace('@', '')
                    k = f'''‚Ä¢ ÿßÿ¥ÿ™ÿ±ŸÉ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© : [{name}](https://t.me/{ii}) üì£\n\n- ŸÖŸÜ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ ÿπŸÑŸâ ÿ™ÿ≠ŸÇŸÇ ŸÑŸÉŸä ÿ™ÿ≠ÿµŸÑ ÿπŸÑŸâ {coin_join} ŸÜŸÇÿ∑ÿ© ‚ùáÔ∏è\n\n‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿßŸÑÿ≠ÿßŸÑŸäÿ© : `{coin}`'''
                    keys = mk(
                        [
                            [btn(text=f'{name}', url=f'https://t.me/{ii}')],
                            [btn(text='ÿ™ÿ≠ŸÇŸÇ', callback_data='check_join'), btn(text='ÿ™ÿÆÿ∑Ÿä', callback_data='skip')],
                            [btn(text='ÿßÿ®ŸÑÿßÿ∫', callback_data='report')],
                            [btn(text='ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='collect')]
                        ]
                    )
                    bot.edit_message_text(text=k, chat_id=cid, message_id=mid,reply_markup=keys, parse_mode="Markdown")
                    return
            kk = f"‚Ä¢ ŸÑÿß ŸäŸàÿ¨ÿØ ŸÇŸÜŸàÿßÿ™ ŸÅŸä ÿßŸÑŸàŸÇÿ™ ÿßŸÑÿ≠ÿßŸÑŸä , ŸÇŸÖ Ÿäÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ÿ®ÿ∑ÿ±ŸäŸÇŸá ŸÖÿÆÿ™ŸÑŸÅŸá ‚ùï\n\n‚Ä¢ ÿßÿ∞ÿß ŸÇŸÖÿ™ ÿ®ŸÖÿ∫ÿßÿØÿ±ÿ© ÿßŸä ŸÇŸÜÿßÿ© ÿ≥Ÿäÿ™ŸÖ ÿÆÿµŸÖ ÿ∂ÿπŸÅ ÿßŸÑŸÜŸÇÿßÿ∑"
            key = mk(
                [
                    [btn(text='ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ‚ùáÔ∏è', callback_data='collect')],
                    [btn(text='ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back')]
                ]
            )
            bot.edit_message_text(text=kk, chat_id=cid, message_id=mid,reply_markup=key, parse_mode="Markdown")
    if data == 'join_10':
        user_id = call.from_user.id
        coin_join = db.get("coin_join") if db.exists("coin_join") else 10
        chats_joining = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
        ch_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
        chats_dd = db.get('force_ch')
        joo = db.get(f"user_{user_id}")
        coin = joo['coins']
        key = mk(
            [
                [btn(text='ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ‚ùáÔ∏è', callback_data='collect')],
                [btn(text='ÿ±ÿ¨Ÿàÿπ', callback_data='back')]
            ]
        )
        count = 0
        keys = mk(row_width=2)
        chats_user = [chat for chat in chats_dd if chat not in chats_joining]
        for channel in chats_user[:10]:
            chat_info = bot.get_chat(channel)
            name = chat_info.title
            ii = channel.replace('@', '')
            button = btn(name, url=f"https://t.me/{ii}")
            keys.add(button)
            count += 1
            time.sleep(0.3)
            if count == 1:
                np = "‚ñà‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë"
                mf = 10 * count
            elif count == 2:
                np = "‚ñà‚ñà‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë"
                mf = 10 * count
            elif count == 3:
                np = "‚ñà‚ñà‚ñà‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë"
                mf = 10 * count
            elif count == 4:
                np = "‚ñà‚ñà‚ñà‚ñà‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë"
                mf = 10 * count
            elif count == 5:
                np = "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë"
                mf = 10 * count
            elif count == 6:
                np = "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë"
                mf = 10 * count
            elif count == 7:
                np = "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë"
                mf = 10 * count
            elif count == 8:
                np = "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñë‚ñë‚ñë"
                mf = 10 * count
            elif count == 9:
                np = "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñë"
                mf = 10 * count
            elif count == 10:
                np = "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà"
                mf = 10 * count
            else:
                np = "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà"
                mf = 10 * count
            all = int(count) * int(coin_join)
            k = f'''‚Ä¢ ÿßÿ¥ÿ™ÿ±ŸÉ ŸÅŸä ÿ¨ŸÖŸäÿπ ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ∏Ÿáÿ± ŸÅŸä ÿßŸÑÿßÿ≤ÿ±ÿßÿ± ÿßÿØŸÜÿßŸá
‚Ä¢ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ ÿ™ÿ≠ŸÇŸÇ ŸÑŸÉŸä ÿ™ÿ≠ÿµŸÑ ÿπŸÑŸä {all} ŸÜŸÇÿ∑ÿ© ŸÖŸÜ ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ŸÅŸä  {count} ŸÇŸÜŸàÿßÿ™ üìÆ \n\n%{mf} | {np}'''
            bot.edit_message_text(text=k, chat_id=cid, message_id=mid,reply_markup=keys, parse_mode="Markdown")
        if count == 0:
            k = f'''‚Ä¢ ŸÑÿß ŸäŸàÿ¨ÿØ ŸÇŸÜŸàÿßÿ™ ÿ≠ÿßŸÑŸäÿß ÿå ŸÇŸÖ ÿ®ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ÿ®ÿ∑ÿ±ŸäŸÇÿ© ŸÖÿÆÿ™ŸÑŸÅÿ©.'''
            bot.edit_message_text(text=k, chat_id=cid, message_id=mid,reply_markup=key, parse_mode="Markdown")
        else:
            button1 = btn("ÿ™ÿ≠ŸÇŸÇ ‚úÖ", callback_data="check10")
            button2 = btn("ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è", callback_data="collect")
            keys.add(button1,button2)
            all = int(count) * int(coin_join)
            k = f'''‚Ä¢ ÿßÿ¥ÿ™ÿ±ŸÉ ŸÅŸä ÿ¨ŸÖŸäÿπ ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ÿ∏Ÿáÿ± ŸÅŸä ÿßŸÑÿßÿ≤ÿ±ÿßÿ± ÿßÿØŸÜÿßŸá
‚Ä¢ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ ÿ™ÿ≠ŸÇŸÇ ŸÑŸÉŸä ÿ™ÿ≠ÿµŸÑ ÿπŸÑŸä {all} ŸÜŸÇÿ∑ÿ© ŸÖŸÜ ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ŸÅŸä  {count} ŸÇŸÜŸàÿßÿ™ üìÆ \n\n%{mf} | {np}'''
            bot.edit_message_text(text=k, chat_id=cid, message_id=mid,reply_markup=keys, parse_mode="Markdown")
    if data == 'check10':
        user_id = call.from_user.id
        coin_join = db.get("coin_join") if db.exists("coin_join") else 10
        chats_joining = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
        ch_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
        chats_dd = db.get('force_ch')
        joo = db.get(f"user_{user_id}")
        coin = joo['coins']
        key = mk(
            [
                [btn(text='ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ‚ùáÔ∏è', callback_data='collect')],
                [btn(text='ÿ±ÿ¨Ÿàÿπ', callback_data='back')]
            ]
        )
        count = 0
        count1 = 0
        keys = mk(row_width=2)
        chats_user = [chat for chat in chats_dd if chat not in chats_joining]
        for channel in chats_user[:10]:
            x = bot2.get_chat_member(chat_id=channel, user_id=user_id)
            if str(x.status) in stypes:
                count1 += 1
                count = db.get(f"count_{channel}")
                ids = db.get(f"id_{channel}")
                if int(count) <= 0:
                    tm = db.get("tmoil") if db.exists("tmoil") else 0
                    tmm = int(tm) + 1
                    db.set("tmoil", int(tmm))
                    chats_dd = db.get('force_ch')
                    chats_dd.remove(channel)
                    db.set("force_ch", chats_dd)
                    chat_info = bot2.get_chat(channel)
                    name = chat_info.title
                    ii = channel.replace('@', '')
                    mem = db.get(f"mem_{channel}") if db.exists(f"mem_{channel}") else ""
                    bot.send_message(chat_id=int(ids), text=f"ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
                    iddd = 6596299609
                    bot.send_message(chat_id=int(iddd), text=f"ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
                else:
                    tm = db.get("members") if db.exists("members") else 0
                    tmm = int(tm) + 1
                    db.set("members", int(tmm))
                    ids = db.get(f"id_{channel}")
                    chat_info = bot2.get_chat(channel)
                    name = chat_info.title
                    count = db.get(f"count_{channel}")
                    countcc = int(count) - 1
                    db.set(f"count_{channel}", countcc)
                    chats_joining.append(channel)
                    db.set(f"chats_{user_id}", chats_joining)
                    ch_joining.append(channel)
                    db.set(f"ch_{user_id}", ch_joining)
                    chat_inf = bot.get_chat(channel)
                    name = chat_inf.title
                    count = db.get(f"count_{channel}")
                    ids = db.get(f"id_{channel}")
                    ii = channel.replace('@', '')
                    bot.send_message(chat_id=int(ids), text=f"ÿßÿ¥ÿ™ÿ±ŸÉ ÿ¥ÿÆÿµ ÿ¨ÿØŸäÿØ ŸÅŸä ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ‚úÖ\n\n‚Ä¢ ÿßÿ≥ŸÖŸá : {call.from_user.first_name}\n‚Ä¢ ÿßŸäÿØŸäŸá : {call.from_user.id}\n\n‚Ä¢ ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ™ÿ®ŸÇŸä : `{countcc}`", parse_mode="Markdown")
        if int(count1) == 0:
            kkj = f'''ÿπÿ∞ÿ±ÿß ÿå Ÿäÿ®ÿØŸà ÿßŸÜŸÉ ŸÑŸÖ ÿ™ÿ¥ÿ™ÿ±ŸÉ ŸÅŸä ÿßŸä ŸÖŸÜ ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑŸÖÿ∞ŸÉŸàÿ±ÿ© ‚ùå'''
        else:
            all = int(coin_join) * int(count1)
            kkj = f'''‚Ä¢ ÿ™ŸÖ ÿßÿ∂ÿßŸÅÿ© {all} ÿßŸÑŸä ŸÜŸÇÿßÿ∑ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ
    
‚Ä¢ ŸÑÿßŸÜŸÉ ÿßÿ¥ÿ™ÿ±ŸÉÿ™ ŸÅŸä {count1} ŸÇŸÜŸàÿßÿ™'''
            joo = db.get(f"user_{user_id}")
            joo['coins'] = int(joo['coins']) + int(all)
            db.set(f"user_{user_id}", joo)
        bot.edit_message_text(text=kkj, chat_id=cid, message_id=mid,reply_markup=key, parse_mode="Markdown")
    if data == 'skip':
        skip(call)
    if data == 'report':
        report(call)
    if data == 'ret':
        bot.answer_callback_query(call.id, text="ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ ÿ®ŸÑÿßÿ∫ŸÉ ÿ®ÿßŸÑŸÅÿπŸÑ ‚ùå")
    if data == 'check_join':
        user_id = call.from_user.id
        coin_join = db.get("coin_join") if db.exists("coin_join") else 10
        chats_joining = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
        ch_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
        chats_dd = db.get('force_ch')
        joo = db.get(f"user_{user_id}")
        coin = joo['coins']
        chats_user = [chat for chat in chats_dd if chat not in chats_joining]
        doo = db.get('force_ch')
        if doo != None:
            for i in chats_user:
                if i in chats_joining:
                    bot.answer_callback_query(call.id, text=f"ŸÑŸÇÿØ ÿ≠ÿµŸÑÿ™ ÿπŸÑŸä ŸÜŸÇÿßÿ∑ ŸÖŸÜ Ÿáÿ∞Ÿá ÿßŸÑŸÇŸÜÿßÿ© ÿ®ÿßŸÑŸÅÿπŸÑ ‚ùå",show_alert=True)
                    return
                try:
                    x = bot2.get_chat_member(chat_id=i, user_id=user_id)
                except:
                    chats_joining.append(i)
                    db.set(f"chats_{user_id}", chats_joining)
                    chats_dd = db.get('force_ch')
                    chats_dd.remove(i)
                    db.set("force_ch", chats_dd)
                    return
                if str(x.status) in stypes:
                    tm = db.get("members") if db.exists("members") else 0
                    tmm = int(tm) + 1
                    db.set("members", int(tmm))
                    bot.answer_callback_query(call.id, text=f"ÿ™ŸÖ ÿßÿ∂ÿßŸÅÿ© {coin_join} ŸÜŸÇÿßÿ∑ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ",show_alert=True)
                    typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{user_id}") else 0.0
                    ftt = typ + 0.1
                    db.set(f"typ_{user_id}", float(ftt))
                    ids = db.get(f"id_{i}")
                    chat_info = bot2.get_chat(i)
                    name = chat_info.title
                    count = db.get(f"count_{i}")
                    countcc = int(count) - 1
                    db.set(f"count_{i}", countcc)
                    joo = db.get(f"user_{user_id}")
                    joo['coins'] = int(joo['coins']) + int(coin_join)
                    db.set(f"user_{user_id}", joo)
                    chats_joining.append(i)
                    db.set(f"chats_{user_id}", chats_joining)
                    ch_joining.append(i)
                    db.set(f"ch_{user_id}", ch_joining)
                    chat_inf = bot.get_chat(i)
                    name = chat_inf.title
                    count = db.get(f"count_{i}")
                    ids = db.get(f"id_{i}")
                    nextch(call)
                    if int(count) <= 0:
                        tm = db.get("tmoil") if db.exists("tmoil") else 0
                        tmm = int(tm) + 1
                        db.set("tmoil", int(tmm))
                        chats_dd = db.get('force_ch')
                        chats_dd.remove(i)
                        db.set("force_ch", chats_dd)
                        chat_info = bot2.get_chat(i)
                        name = chat_info.title
                        ii = i.replace('@', '')
                        mem = db.get(f"mem_{i}") if db.exists(f"mem_{i}") else ""
                        bot.send_message(chat_id=int(ids), text=f"ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
                        iddd = 6596299609
                        bot.send_message(chat_id=int(iddd), text=f"ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà üö∏", parse_mode="Markdown")
                    else:
                        ii = i.replace('@', '')
                        bot.send_message(chat_id=int(ids), text=f"ÿßÿ¥ÿ™ÿ±ŸÉ ÿ¥ÿÆÿµ ÿ¨ÿØŸäÿØ ŸÅŸä ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii}) ‚úÖ\n\n‚Ä¢ ÿßÿ≥ŸÖŸá : {call.from_user.first_name}\n‚Ä¢ ÿßŸäÿØŸäŸá : {call.from_user.id}\n\n‚Ä¢ ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ™ÿ®ŸÇŸä : `{countcc}`", parse_mode="Markdown")
                        for i in chats_joining:
                            x = bot2.get_chat_member(chat_id=i, user_id=user_id)
                            if str(x.status) not in stypes:
                                chats_joining.remove(i)
                                ids = db.get(f"id_{i}")
                                db.set(f"ch_{user_id}", chats_joining)
                                chats_g = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
                                if i in chats_g:
                                    chats_g.remove(i)
                                db.set(f"chats_{user_id}", chats_g)
                                all = int(coin_join) * 2
                                user_info = db.get(f'user_{user_id}')
                                user_info['coins'] = int(user_info['coins']) - int(all)
                                db.set(f"user_{user_id}", user_info)
                                chat_info = bot.get_chat(i)
                                ii = i.replace('@', '')
                                name = chat_info.title
                                bot.send_message(chat_id=int(cid), text=f"*‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ {all} ŸÖŸÜ ŸÜŸÇÿßÿ∑ŸÉ ‚ùå*\n\n*‚Ä¢ ŸÑÿßŸÜŸÉ ÿ∫ÿßÿØÿ±ÿ™ ŸÇŸÜÿßÿ© *[{name}](https://t.me/{ii})\n‚Ä¢ *ÿßÿπÿ∑Ÿäÿ™ŸÉ ŸÜŸÇÿßÿ∑ ŸÖŸÇÿßÿ®ŸÑ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ®Ÿáÿß¬†‚ö†Ô∏è*", parse_mode="Markdown")
                else:
                    bot.answer_callback_query(call.id, text="ÿßÿ¥ÿ™ÿ±ŸÉ ÿ®ÿßŸÑŸÇŸÜÿßÿ© ÿßŸàŸÑÿß ‚ùå",show_alert=True)
    else:
        return
def get_linkbot(message, type):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    admins = db.get('admins')
    cid = message.from_user.id
    if message.text == "/start":
        start_message(message)
        return
    if type == 'linkbot2':
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = linkbot2_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ')
            bot.register_next_step_handler(x, link2, amount)
    if type == 'linkbot3':
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = linkbot2_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ')
            bot.register_next_step_handler(x, link3, amount)
    if type == 'linkbot4':
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = linkbot2_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ')
            bot.register_next_step_handler(x, link4, amount)
    if type == 'linkbot5':
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = linkbot2_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ')
            bot.register_next_step_handler(x, link5, amount)
def link2(message,amount):
    if message.text == "/start":
        start_message(message)
        return
    url = message.text
    if 'https://t.me' in url:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n\n‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸà ŸÖÿπÿ±ŸÅ ŸÇŸÜÿßÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿßÿ¨ÿ®ÿßÿ±Ÿâ ÿßŸÑÿßŸàŸÑŸä')
        bot.register_next_step_handler(x, linkb2, amount, url)
    else:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
def linkb2(message,amount,url):
    ch1 = message.text
    if 'https://t.me' or '@' in ch1:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n\n‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸà ŸÖÿπÿ±ŸÅ ŸÇŸÜÿßÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿßÿ¨ÿ®ÿßÿ±Ÿâ ÿßŸÑÿ´ÿßŸÜŸäÿ©')
        bot.register_next_step_handler(x, linkbo2, amount, ch1, url)
    else:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
def linkbo2(message,amount,ch1,url):
    ch2 = message.text
    if message.text == "/start":
        start_message(message)
        return
    channel_force = ch1.replace('https://t.me/', '').replace('@', '')
    channel_force2 = ch2.replace('https://t.me/', '').replace('@', '')
    bot_id, user_id = url.split("?start=")[0].split("/")[-1], url.split("?start=")[1]
    channel = "@" + bot_id
    tex = "/start " + user_id
    pr = linkbot2_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ±ÿßÿ®ÿ∑ ÿØÿπŸàÿ© ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßÿ¨ÿ®ÿßÿ±Ÿâ'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n\n‚Ä¢ üì£] ŸÇŸÜÿßÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿßŸàŸÑŸä : @{channel_force}\n‚Ä¢ üì£] ŸÇŸÜÿßÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿ´ÿßŸÜŸäÿ© : @{channel_force2}')
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true, false = 0, 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            session = random.choice(load_)
            x = asyncio.run(linkhhh2(session, channel, tex, channel_force,channel_force2, tim))
            load_.remove(session)
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        for ix in range(true):
            acc['coins'] -= linkbot2_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*linkbot2_price}',reply_markup=bk)
    bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
    user_id = message.from_user.id
    code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
    daily_count = code + int(true*linkbot2_price)
    db.set(f"po_{user_id}", int(daily_count))
    return
def calculate_inflation(total: float, previous_total: float) -> int:
    inflation_rate = (total - previous_total) / previous_total * 100
    
    if inflation_rate > 100:
        inflation_rate = 100
    
    return round(max(0, min(100, inflation_rate)))
def stattts(call):
    cid, data, mid = call.from_user.id, call.data, call.message.id
    bot.answer_callback_query(call.id, text="‚Ä¢ ÿ¨ÿßÿ±Ÿâ ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿßÿ≠ÿµÿßÿ¶Ÿäÿßÿ™ üìä")
    db.set(f"serv_{message.from_user.id}", False)
    user_id = call.from_user.id
    chats = db.get('force')
    force_msg = str(db.get("force_msg"))
    count = 0
    mon = 0
    users = db.keys()
    for i in users:
        if "user_" in str(i[0]):
            count+=1
    for i in users:
        if "user_" in str(i[0]) and "gift" not in str(i[0]) or 'price_' not in str(i[0]) or 'sessions' not in str(i[0]):
            try:
                i = db.get(i[0])
                mon+=int(i['coins'])
            except:
                continue
    b = calculate_inflation(mon, mon-1000)
    members = db.get("members") if db.exists("members") else 0
    tm = db.get("tmoil") if db.exists("tmoil") else 0
    numch = len(db.get("force_ch"))
    keys = mk(
        [
            [btn(text='ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back')]
        ]
    )
    y = trend()
    k = coinsn()
    good = 0
    users = db.keys('user_%')
    for ix in users:
        try:
            d = db.get(ix[0])['id']
            good+=1
        except: continue 
  
    rk = f"""<strong>‚Ä¢ ÿßÿ≠ÿµÿßÿ¶Ÿäÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ üìä</strong>

<strong>‚Ä¢ ÿπÿØÿØ ŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿ®Ÿàÿ™ : </strong>{good} üë•

<strong>‚Ä¢ ÿπÿØÿØ ÿπŸÖŸÑŸäÿßÿ™ ÿßŸÑÿ™ŸÖŸàŸäŸÑ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÿ© : </strong>{tm} üìÆ
<strong>‚Ä¢ ÿπÿØÿØ ÿπŸÖŸÑŸäÿßÿ™ ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿ¨ÿßÿ±Ÿä ÿ™ŸÖŸàŸäŸÑŸáÿß : </strong>{numch} ‚è≥
<strong>‚Ä¢ ÿπÿØÿØ ÿßŸÑÿßÿπÿ∂ÿßÿ° ÿßŸÑŸÑŸä ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑŸáŸÖ : </strong>{members} üë§

<strong>‚Ä¢ ŸÜÿ≥ÿ®ÿ© ÿßŸÑÿ∂ÿ∫ÿ∑ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ : </strong>%{b} üìâ

{y}

{k}

"""
    bot.edit_message_text(text=rk, chat_id=cid, message_id=mid,reply_markup=keys, parse_mode="HTML")
def report(call):
    cid, data, mid = call.from_user.id, call.data, call.message.id
    user_id = call.from_user.id
    coin_join = db.get("coin_join") if db.exists("coin_join") else 10
    chats_joining = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
    
    key = mk(
        [
            [btn(text='ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ‚ùáÔ∏è', callback_data='invite')],
            [btn(text='ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back')]
        ]
    )
    chats_dd = db.get('force_ch')
    joo = db.get(f"user_{user_id}")
    coin = joo['coins']
    chats_user = [chat for chat in chats_dd if chat not in chats_joining]
    doo = db.get('force_ch')
    if doo != None:
        for i in chats_user:
            count = db.get(f"count_{i}")
            ids = db.get(f"id_{i}")
            
            if int(count) <= 0:
                tm = db.get("tmoil") if db.exists("tmoil") else 0
                tmm = int(tm) + 1
                db.set("tmoil", int(tmm))
                chats_dd = db.get('force_ch')
                chats_dd.remove(i)
                db.set("force_ch", chats_dd)
                chat_info = bot.get_chat(i)
                name = chat_info.title
                ii = i.replace('@', '')
                mem = db.get(f"mem_{i}") if db.exists(f"mem_{i}") else ""
                bot.send_message(chat_id=int(ids), text=f"*ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ* [{name}](https://t.me/{ii})* ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ*\n*‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà* üö∏", parse_mode="Markdown")
                iddd = 6596299609
                bot.send_message(chat_id=int(iddd), text=f"*ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ [{name}](https://t.me/{ii})* ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ*\n*‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà* üö∏", parse_mode="Markdown")
            else: 
                chat_info = bot.get_chat(i)
                name = chat_info.title
                ii = i.replace('@', '')
                k = f'''‚Ä¢ ÿßÿ¥ÿ™ÿ±ŸÉ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© : [{name}](https://t.me/{ii}) üì£\n\n- ŸÖŸÜ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ ÿπŸÑŸâ ÿ™ÿ≠ŸÇŸÇ ŸÑŸÉŸä ÿ™ÿ≠ÿµŸÑ ÿπŸÑŸâ {coin_join} ŸÜŸÇÿ∑ÿ© ‚ùáÔ∏è\n\n*‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿßŸÑÿ≠ÿßŸÑŸäÿ©* : `{coin}`'''
                keys = mk(
                    [
                        [btn(text=f'{name}', url=f'https://t.me/{ii}')],
                        [btn(text='ÿ™ÿ≠ŸÇŸÇ', callback_data='check_join'), btn(text='ÿ™ÿÆÿ∑Ÿä', callback_data='skip')],
                        [btn(text='ÿ™ŸÖ ÿßŸÑÿßÿ®ŸÑÿßÿ∫', callback_data='ret')],
                        [btn(text='ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='collect')]
                    ]
                )
                iddd = 5583496580
                bot.send_message(chat_id=int(iddd), text=f"*‚Ä¢ ÿ®ŸÑÿßÿ∫ ÿ¨ÿØŸäÿØ ÿπŸÑŸä ŸÇŸÜÿßÿ© *[{name}](https://t.me/{ii}) \n‚Ä¢ ÿßŸÑÿ¥ÿÆÿµ ÿßŸÑÿ∞Ÿä ŸÇÿßŸÖ ÿ®ÿßŸÑÿßÿ®ŸÑÿßÿ∫ :\n\n‚Ä¢ ÿßŸÑÿßÿ≥ŸÖ : {call.from_user.first_name}\n‚Ä¢ ÿßŸÑŸÖÿπÿ±ŸÅ : @{call.from_user.username}\n‚Ä¢ ÿßŸÑÿßŸäÿØŸä : [{user_id}](tg://user?id={user_id}) ", parse_mode="Markdown")
                bot.answer_callback_query(call.id, text="ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ ÿ®ŸÑÿßÿ∫ŸÉ ÿßŸÑŸä ÿßŸÑŸÖÿ∑Ÿàÿ± ‚õî")
                bot.edit_message_text(text=k, chat_id=cid, message_id=mid,reply_markup=keys, parse_mode="Markdown")
                return
 
 
 
 
def skip(call):
    cid, data, mid = call.from_user.id, call.data, call.message.id
    user_id = call.from_user.id
    coin_join = db.get("coin_join") if db.exists("coin_join") else 10
    chats_joining = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
    chats_dd = db.get('force_ch')
    joo = db.get(f"user_{user_id}")
    coin = joo['coins']
    chats_user = [chat for chat in chats_dd if chat not in chats_joining]
    doo = db.get('force_ch')
    if doo != None:
        for i in chats_user:
            chats_joining.append(i)
            db.set(f"chats_{user_id}", chats_joining)
            nextch(call)
            return
def nextch(call):
    cid, data, mid = call.from_user.id, call.data, call.message.id
    user_id = call.from_user.id
    v = 5
    if v == 5:
        coin_join = db.get("coin_join") if db.exists("coin_join") else 10
        chats_joining = db.get(f"chats_{user_id}") if db.exists(f"chats_{user_id}") else []
        ch_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
        chats_dd = db.get('force_ch')
        joo = db.get(f"user_{user_id}")
        coin = joo['coins']
        chats_user = [chat for chat in chats_dd if chat not in chats_joining]
        doo = db.get('force_ch')
        if doo != None:
            for i in chats_user:
                count = db.get(f"count_{i}")
                ids = db.get(f"id_{i}")
                if int(count) <= 2:
                    tm = db.get("tmoil") if db.exists("tmoil") else 0
                    tmm = int(tm) + 1
                    db.set("tmoil", int(tmm))
                    chats_dd = db.get('force_ch')
                    chats_dd.remove(i)
                    db.set("force_ch", chats_dd)
                    chat_info = bot.get_chat(i)
                    name = chat_info.title
                    ii = i.replace('@', '')
                    mem = db.get(f"mem_{i}") if db.exists(f"mem_{i}") else "ÿπÿØÿØ ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ"
                    bot.send_message(chat_id=int(ids), text=f"*ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ* [{name}](https://t.me/{ii})* ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ*\n*‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà* üö∏", parse_mode="Markdown")
                    iddd = 5583496580
                    bot.send_message(chat_id=int(iddd), text=f"*ÿ™ŸÖ ÿßŸÜÿ™Ÿáÿßÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ *[{name}](https://t.me/{ii})* ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ*\n*‚Ä¢ ÿ™ŸÖ ÿ™ŸÖŸàŸäŸÑ : {mem} ÿπÿ∂Ÿà* üö∏", parse_mode="Markdown")
                else: 
                    chat_info = bot.get_chat(i)
                    name = chat_info.title
                    ii = i.replace('@', '')
                    k = f'''‚Ä¢ ÿßÿ¥ÿ™ÿ±ŸÉ ŸÅŸä ÿßŸÑŸÇŸÜÿßÿ© : [{name}](https://t.me/{ii}) üì£\n\n- ŸÖŸÜ ÿ´ŸÖ ÿßÿ∂ÿ∫ÿ∑ ÿπŸÑŸâ ÿ™ÿ≠ŸÇŸÇ ŸÑŸÉŸä ÿ™ÿ≠ÿµŸÑ ÿπŸÑŸâ {coin_join} ŸÜŸÇÿ∑ÿ© ‚ùáÔ∏è\n\n*‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿßŸÑÿ≠ÿßŸÑŸäÿ©* : `{coin}`'''
                    keys = mk(
                        [
                            [btn(text=f'{name}', url=f'https://t.me/{ii}')],
                            [btn(text='ÿ™ÿ≠ŸÇŸÇ', callback_data='check_join'), btn(text='ÿ™ÿÆÿ∑Ÿä', callback_data='skip')],
                            [btn(text='ÿßÿ®ŸÑÿßÿ∫', callback_data='report')],
                            [btn(text='ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='collect')]
                        ]
                    )
                    bot.edit_message_text(text=k, chat_id=cid, message_id=mid,reply_markup=keys, parse_mode="Markdown")
                    return
            kk = f"*‚Ä¢ ŸÑÿß ŸäŸàÿ¨ÿØ ŸÇŸÜŸàÿßÿ™ ŸÅŸä ÿßŸÑŸàŸÇÿ™ ÿßŸÑÿ≠ÿßŸÑŸä , ŸÇŸÖ Ÿäÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ÿ®ÿ∑ÿ±ŸäŸÇŸá ŸÖÿÆÿ™ŸÑŸÅŸá ‚ùï*\n\n‚Ä¢ *ÿßÿ∞ÿß ŸÇŸÖÿ™ ÿ®ŸÖÿ∫ÿßÿØÿ±ÿ© ÿßŸä ŸÇŸÜÿßÿ© ÿ≥Ÿäÿ™ŸÖ ÿÆÿµŸÖ ÿ∂ÿπŸÅ ÿßŸÑŸÜŸÇÿßÿ∑*"
            key = mk(
                [
                    [btn(text='ÿ™ÿ¨ŸÖŸäÿπ ÿßŸÑŸÜŸÇÿßÿ∑ ‚ùáÔ∏è', callback_data='collect')],
                    [btn(text='ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back')]
                ]
            )
            bot.edit_message_text(text=kk, chat_id=cid, message_id=mid,reply_markup=key, parse_mode="Markdown")
def tmmo(msg):
    user_id = msg.from_user.id
    coin_join = db.get("coin_join") if db.exists("coin_join") else 10
    chats_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
    joo = db.get(f"user_{user_id}")
    price_join = db.get("price_join") if db.exists("price_join") else 10
    coin = int(joo['coins'])
    try:
        count = int(msg.text)
    except:
        bot.reply_to(msg, '‚Ä¢ [üë§] Ÿäÿ¨ÿ® ÿßŸÜ ŸäŸÉŸàŸÜ ÿπÿØÿØ ŸÅŸÇÿ∑')
        return
    if count <15:
        bot.reply_to(msg, "ÿßŸÇŸÑ ÿ≠ÿØ ŸÑŸÑÿ∑ŸÑÿ® ŸáŸà 15 ‚ùå")
        return
    all = int(price_join) * int(count)
    joo = db.get(f"user_{user_id}")
    if joo['coins'] < int(all):
        bot.reply_to(msg, "‚Ä¢ [üë§] ÿπŸÅŸàÿß ÿå ŸÜŸÇÿßÿ∑ŸÉ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑŸáÿ∞ÿß ÿßŸÑÿ∑ŸÑÿ® ‚ùå")
        return
    x = bot.reply_to(msg, "[‚ö†Ô∏è] ÿßÿ±ŸÅÿπ ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑŸÖÿ≥ÿßÿπÿØ @Iahagsgoxbot ÿßÿØŸÖŸÜ ŸÅŸä ŸÇŸÜÿßÿ™ŸÉ ÿßŸà ŸÖÿ¨ŸÖŸàÿπÿ™ŸÉ\n\n‚Ä¢ ÿ´ŸÖ ÿßÿ±ÿ≥ŸÑ ÿßŸÑŸÖÿπÿ±ŸÅ ÿßŸà ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿßŸÑÿÆÿßÿµ ÿ®ÿßŸÑŸÇŸÜÿßÿ© ÿßŸà ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© ")
    bot.register_next_step_handler(x, tmm_count, count)
def tmm_count(msg,count):
    user_id = msg.from_user.id
    coin_join = db.get("coin_join") if db.exists("coin_join") else 10
    chats_joining = db.get(f"ch_{user_id}") if db.exists(f"ch_{user_id}") else []
    joo = db.get(f"user_{user_id}")
    price_join = db.get("price_join") if db.exists("price_join") else 10
    channel = msg.text.replace('https://t.me/', '@').replace('@', '@')
    channels_force = db.get("force_ch") if db.exists("force_ch") else []
    channel_username = channel.lower().strip()
    try:
        chat_member = bot2.get_chat_member(channel_username, bot2.get_me().id)
    except:
        bot.reply_to(msg, "*[‚ö†Ô∏è] ŸÑÿß ŸäŸàÿ¨ÿØ ŸÇŸÜÿßÿ© ÿßŸà ŸÖÿ¨ŸÖŸàÿπÿ© ÿ™ÿ≠ŸÖŸÑ Ÿáÿ∞ÿß ÿßŸÑŸÖÿπÿ±ŸÅ*", parse_mode="Markdown")
        return False
    if str(chat_member.status) == "administrator":
        if channel_username in channels_force:
            count_befor = db.get(f"count_{channel_username}")
            alll = int(count_befor) + int(count)
            all_coins = int(price_join) * int(count)
            joo = db.get(f"user_{user_id}")
            joo['coins'] = int(joo['coins']) - int(all_coins)
            db.set(f"user_{user_id}", joo)
            db.set(f"count_{channel_username}", alll)
            db.set(f"mem_{channel_username}", alll)
            db.set(f"id_{channel_username}", user_id)
            chat_info = bot.get_chat(channel_username)
            name = chat_info.title
            ii = channel_username.replace('@', '')
            all_coins = int(price_join) * int(count)
            bot.reply_to(msg, f"*‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ* (`{all_coins}`) *ŸÜŸÇÿßÿ∑*\n*- Ÿàÿ®ÿØÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ* [{name}](https://t.me/{ii}) *ÿ®ŸÄ {alll} ÿπÿ∂Ÿà* üö∏\n*‚Ä¢ ÿ™ÿßŸÉÿØ ŸÖŸÜ ÿπÿØŸÖ ÿßÿ≤ÿßŸÑÿ© ÿßŸÑÿ®Ÿàÿ™ ŸÖŸÜ ÿßŸÑÿßÿØŸÖŸÜŸäÿ© ÿ≠ÿ™Ÿä ŸÑÿß Ÿäÿ™ŸÖ ÿßÿ≥ÿ™ÿ®ÿπÿßÿØ ÿ™ŸÖŸàŸäŸÑŸÉ*\n\n*‚Ä¢ ÿ™ŸÖ ÿßÿ∂ÿßŸÅÿ© ÿßŸÑÿ™ŸÖŸàŸäŸÑ ÿßŸÑŸÇÿØŸäŸÖ ÿßŸÑŸä ÿßŸÑÿ™ŸÖŸàŸäŸÑ ÿßŸÑÿ¨ÿØŸäÿØ *", parse_mode="Markdown")
            bot.send_message(chat_id=int(sudo), text=f"*- ÿ®ÿØÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ© ÿ¨ÿØŸäÿØÿ©* [{name}](https://t.me/{ii}) ÿ®ŸÄ {alll} *ÿπÿ∂Ÿà* üö∏", parse_mode="Markdown")
            typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{user_id}") else 0.0
            ftt = typ + 0.2
            db.set(f"typ_{user_id}", float(ftt))
            if db.exists(f"Tmoil_{user_id}"):
                if db.exists(f"Tmoil2_{user_id}"):
                    if db.exists(f"Tmoil3_{user_id}"):
                        db.delete(f"Tmoil_{user_id}")
                        db.set(f"Tmoil_{user_id}", channel_username)
                    else:
                        db.set(f"Tmoil3_{user_id}", channel_username)
                else:
                    db.set(f"Tmoil2_{user_id}", channel_username)
            else:
                db.set(f"Tmoil_{user_id}", channel_username)
        else:
            all = int(price_join) * int(count)
            joo = db.get(f"user_{user_id}")
            joo['coins'] = int(joo['coins']) - int(all)
            db.set(f"user_{user_id}", joo)
            db.set(f"count_{channel_username}", count)
            db.set(f"mem_{channel_username}", count)
            db.set(f"id_{channel_username}", user_id)
            channels_force = db.get("force_ch") if db.exists("force_ch") else []
            channels_force.append(channel_username)
            db.set("force_ch", channels_force)
            chat_info = bot.get_chat(channel_username)
            name = chat_info.title
            ii = channel_username.replace('@', '')
            bot.reply_to(msg, f"*‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ* (`{all}`) *ŸÜŸÇÿßÿ∑*\n*- Ÿàÿ®ÿØÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ™ŸÉ* [{name}](https://t.me/{ii}) ÿ®ŸÄ {count} *ÿπÿ∂Ÿà* üö∏\n\n*‚Ä¢ ÿ™ÿßŸÉÿØ ŸÖŸÜ ÿπÿØŸÖ ÿßÿ≤ÿßŸÑÿ© ÿßŸÑÿ®Ÿàÿ™ ŸÖŸÜ ÿßŸÑÿßÿØŸÖŸÜŸäÿ© ÿ≠ÿ™Ÿä ŸÑÿß Ÿäÿ™ŸÖ ÿßÿ≥ÿ™ÿ®ÿπÿßÿØ ÿ™ŸÖŸàŸäŸÑŸÉ*", parse_mode="Markdown")
            bot.send_message(chat_id=int(sudo), text=f"*- ÿ®ÿØÿ° ÿ™ŸÖŸàŸäŸÑ ŸÇŸÜÿßÿ© ÿ¨ÿØŸäÿØÿ©* [{name}](https://t.me/{ii}) ÿ®ŸÄ {count} *ÿπÿ∂Ÿà* üö∏", parse_mode="Markdown")
            typ = float(db.get(f"typ_{user_id}")) if db.exists(f"typ_{user_id}") else 0.0
            ftt = typ + 0.2
            db.set(f"typ_{user_id}", float(ftt))
            if db.exists(f"Tmoil_{user_id}"):
                if db.exists(f"Tmoil2_{user_id}"):
                    if db.exists(f"Tmoil3_{user_id}"):
                        db.delete(f"Tmoil_{user_id}")
                        db.set(f"Tmoil_{user_id}", channel_username)
                    else:
                        db.set(f"Tmoil3_{user_id}", channel_username)
                else:
                    db.set(f"Tmoil2_{user_id}", channel_username)
            else:
                db.set(f"Tmoil_{user_id}", channel_username)
    else:
        bot.reply_to(msg, "*[‚ö†Ô∏è] ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÖÿ¥ÿ±ŸÅ ÿ®Ÿáÿ∞Ÿá ÿßŸÑŸÇŸÜÿßÿ©*", parse_mode="Markdown")
        return
        
def delvar(msg):
    db.delete(msg.text)
    bot.reply_to(msg, "ÿ™ŸÖ ÿ≠ÿ∞ŸÅ ÿßŸÑŸÖÿ™ÿ∫Ÿäÿ± ŸÖŸÜ ŸÇÿßÿπÿØÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™")
def get_amount(message, type):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    admins = db.get('admins')
    cid = message.from_user.id
    if message.text == "/start":
        start_message(message)
        return
    if type == 'leavs':
        if not db.get(f'leave_{cid}_proccess'): return
        if detect(message.text):
            url = message.text
            acc = db.get('accounts')
            amount = len(acc)
            if len(acc) > 10:
                amount = amount / 2
            true = 0
            for y in acc:
                true+=1
                if true >=amount:
                    break
                try:
                    o = asyncio.run(leave_chats(y['s'], url))
                    
                except Exception as e:
                    
                    continue
            bot.reply_to(message, f'‚Ä¢ ÿ™ŸÖ ÿßŸÑÿÆÿ±Ÿàÿ¨ ŸÖŸÜ <code>{true}</code> ÿ≠ÿ≥ÿßÿ® ŸäŸÜÿ¨ÿßÿ≠ ‚úÖ')
            return
                    
        else:
            url = message.text.replace('https://t.me/', '').replace('@', '')
            acc = db.get('accounts')
            amount = len(acc)
            if len(acc) > 10:
                amount = amount / 2
            true = 0
            for y in acc:
                
                if true >=amount:
                    break
                try:
                    o = asyncio.run(leave_chat(y['s'], url))
                   
                    true+=1
                except Exception as e:
                    
                    continue
            bot.reply_to(message, f'‚Ä¢ ÿ™ŸÖ ÿßŸÑÿÆÿ±Ÿàÿ¨ ŸÖŸÜ <strong>{true}</strong> ÿ≠ÿ≥ÿßÿ® ‚úÖ')
            return
            pass
        
    if type == 'members':
        if not db.get(f'member_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 10:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = member_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ŸÖÿπÿ±ŸÅ ŸÇŸÜÿßÿ™ŸÉ ÿßŸà ÿ±ÿßÿ®ÿ∑Ÿáÿß')
            bot.register_next_step_handler(x, get_url_mem, amount)
            return
    if type == 'membersp':
        if not db.get(f'memberp_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 10:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = member_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ÿßŸÑŸÇŸÜÿßÿ© ÿßŸÑÿÆÿßÿµÿ©')
            bot.register_next_step_handler(x, get_url_memp, amount)
            return
    if type == 'react':
        if not db.get(f'react_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = react_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿßŸÑÿ™ŸÅÿßÿπŸÑ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿßÿ±ÿ≥ÿßŸÑŸá\n‚Ä¢ ÿßŸà ŸäŸÖŸÉŸÜŸÉ ÿßŸÑÿßÿÆÿ™Ÿäÿßÿ± ŸÖŸÜ ÿ®ŸäŸÜ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸÑÿ™ÿßŸÑŸäÿ© \n\nüëçüëé‚ù§üî•ü•∞üëèüòÅü§îü§Øü§¨üò¢üéâü§©ü§Æüí©üôèüëåüïäü§°ü•±ü•¥üòçüê≥‚ù§Ô∏è‚Äçüî•üåöüå≠üíØü§£‚ö°Ô∏èüçåüèÜüíîü§®üòêüçìüçæüíãüñïüòàüò¥ü§ìüëªüë®‚ÄçüíªüëÄüéÉüôàüòáüò®ü§ù‚úçü§óü´°üéÖüéÑ‚òÉÔ∏èüíÖü§™üóøüÜíüíòüôâü¶Ñüòòüíäüôäüòéüëæü§∑‚Äç‚ôÇü§∑ü§∑‚Äç‚ôÄüò°')
            bot.register_next_step_handler(x, get_react, amount)
    if type == 'forward':
        if message.text and db.get(f'forward_{cid}_proccess') == True:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong>',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong>',reply_markup=bk)
                return
            pr = forward_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇ ÿßŸÑÿ™Ÿàÿ¨ŸäŸáÿßÿ™ ÿπŸÑŸäŸá')
            bot.register_next_step_handler(x, get_url_forward, amount)
            return
    if type == 'poll':
        if not db.get(f'poll_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong>',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong>',reply_markup=bk)
                return
            pr = poll_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇ ÿßŸÑÿ™Ÿàÿ¨ŸäŸáÿßÿ™ ÿπŸÑŸäŸá')
            bot.register_next_step_handler(x, get_url_poll, amount)
            return
    if type == 'reactsrandom':
        if not db.get(f'reacts_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = react_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá')
            bot.register_next_step_handler(x, get_reacts_url, amount)
            return
    if type == 'positive':
        if not db.get(f'reacts_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = react_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá')
            bot.register_next_step_handler(x, get_positive_url, amount)
            return
    if type == 'negative':
        if not db.get(f'reacts_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = react_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá')
            bot.register_next_step_handler(x, get_negative_url, amount)
            return
    if type == 'view':
        if not db.get(f'view_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = view_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá')
            bot.register_next_step_handler(x, get_view_url, amount)
            return
    if type == 'votes':
        if not db.get(f'vote_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong>',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>2000</strong>',reply_markup=bk)
                return
            pr = vote_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸâ {pr-amount} ŸÜŸÇÿ∑ÿ© .')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount} ÿπÿ∂Ÿà\n‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ•ŸÜÿ™ÿ∂ÿßÿ± ÿ®ŸäŸÜ ÿßŸÑÿ±ÿ¥ŸÇ (ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä) \n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ 0 ÿßÿ∞ÿß ŸÉŸÜÿ™ ÿ™ÿ±ŸäÿØŸá ŸÅŸàÿ±Ÿä\n‚Ä¢ Ÿäÿ¨ÿ® ÿßŸÜ ŸÑÿßŸäÿ≤ŸäÿØ ÿπŸÜ 200')
            bot.register_next_step_handler(x, get_time_votes, amount)
            return
    
    if type == 'msgs':
        if not db.get(f'spam_{cid}_proccess'): return
        if message.text:
            amount = None
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÑÿßÿ≠ŸÇÿß',reply_markup=bk)
                return
            load_ = db.get('accounts')
            if amount < 1:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ 10', reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ 2000',reply_markup=bk)
                return
            
            if len(load_) < amount:
                bot.reply_to(message,text='‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            pr = spam_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if acc['coins'] < pr:
                bot.reply_to(message,f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä {pr-amount} ŸÜŸÇÿ∑Ÿá',reply_markup=bk)
                return
            x = bot.reply_to(message,text='‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ŸäŸàÿ≤ÿ± ÿßŸà ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿ≠ÿ≥ÿßÿ® ÿßŸÑŸÑŸä ÿ™ÿ±ŸäÿØ ÿ™ÿπŸÖŸÑ ÿ≥ÿ®ÿßŸÖ ÿπŸÑŸäŸá')
            bot.register_next_step_handler(x, get_url_spam, amount)
            return
    if type == 'userbot':
        if not db.get(f'userbot_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = userbot_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßÿßŸà ŸÖÿπÿ±ŸÅ ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑŸÑŸä ÿ™ÿ±ŸäÿØ ÿ™ÿ±ÿ¥ŸÇŸÑŸá ŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ')
            bot.register_next_step_handler(x, get_bot_user, amount)
            return
    if type == 'linkbot':
        if not db.get(f'linkbot_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = linkbot_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ')
            bot.register_next_step_handler(x, link_bot, amount)
            return
    if type == 'linkbot1':
        if not db.get(f'linkbot2_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = linkbot2_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ')
            bot.register_next_step_handler(x, link_bot2, amount)
            return
    if type == 'comments':
        if not db.get(f'comments_{cid}_proccess'): return
        if message.text:
            try:
                amount = int(message.text)
            except:
                bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
                return
            if amount < 1:
                bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>10</strong> ..',reply_markup=bk)
                return
            if amount > 2000:
                bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
                return
            pr = comment_price * amount
            acc = db.get(f'user_{message.from_user.id}')
            if int(pr) > acc['coins']:
                bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
                return
            load_ = db.get('accounts')
            if len(load_) < amount:
                bot.reply_to(message,f'‚Ä¢ ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑŸÑŸä ÿ™ÿ±ŸäÿØ ÿßŸÑÿ™ÿπŸÑŸäŸÇ ÿπŸÑŸäŸá \n\n Ÿäÿ¨ÿ® ÿßŸÜ ÿ™ŸÜÿ≥ÿÆ ŸÖŸÜÿ¥Ÿàÿ± ÿßŸÑŸÇŸÜÿßÿ© ŸÖŸÜ ŸÖÿ¨ŸÖŸàÿπÿ© ÿßŸÑŸÖŸÜÿßŸÇÿ¥ÿ© ŸàŸÑŸäÿ≥ ŸÖŸÜ ÿßŸÑŸÇŸÜÿßÿ© ŸÜŸÅÿ≥Ÿáÿß')
            bot.register_next_step_handler(x, get_comments_url, amount)
            return
###########
def get_time_votes(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    try:
        time = int(message.text)
    except:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑŸàŸÇÿ™ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    if time <0:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    if time >200:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n‚Ä¢ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ : {time}\n\n‚Ä¢ ÿßŸÑÿßŸÜ ÿ£ÿ±ÿ≥ŸÑ ŸÑŸä ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±')
    bot.register_next_step_handler(x, get_url_votes, amount, time)
def gen_code_name(message):
    name_code = message.text
    x = bot.reply_to(message,f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑŸÉŸàÿØ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ')
    bot.register_next_step_handler(x, gen_code_num, name_code)
def gen_code_num(message, name_code):
    try:
        num_code = int(message.text)
    except:
        bot.reply_to(message,f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑')
        return
    x = bot.reply_to(message,f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÜŸÇÿßÿ∑ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ Ÿàÿ∂ÿπŸáÿß ÿØÿßÿÆŸÑ ÿßŸÑŸÉŸàÿØ')
    bot.register_next_step_handler(x, gen_code_coin, name_code, num_code)
def gen_code_coin(message, name_code, num_code):
    try:
        coin_code = int(message.text)
    except:
        bot.reply_to(message,f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑')
        return
    db.delete('coin_code')
    db.delete('num_code')
    db.delete('name_code')
    db.delete('used_codes')
    db.set("coin_code", int(coin_code))
    db.set("num_code", int(num_code))
    db.set("name_code", str(name_code))
    bot.reply_to(message,f'<strong>‚Ä¢ ÿ™ŸÖ ÿßŸÜÿ¥ÿßÿ° ŸÉŸàÿØ ŸáÿØŸäÿ© ÿ¨ÿØŸäÿØ [üéÅ,üî•]</strong>\n\n[üè∑] | ÿßŸÑŸÉŸàÿØ : <code>{name_code}</code>\n[‚ùáÔ∏è] | ÿπÿØÿØ ÿßŸÑŸÜŸÇÿßÿ∑ : {coin_code} \n[üë•] | ÿπÿØÿØ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ : {num_code} \n\n[ü§ñ] | ÿßŸÑÿ®Ÿàÿ™ : @ABOSAITI_BOT')
def use_codes(msg):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(msg, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if msg.text == "/start":
        start_message(msg)
        return False
    code_coin = db.get("name_code")
    user_code = db.get("num_code")
    coin_code = db.get("coin_code")
    used_codes = db.get("used_codes") if db.exists("used_codes") else []
    text = msg.text
    if text == code_coin:
        if msg.from_user.id in used_codes:
            bot.reply_to(msg,f'‚Ä¢ ŸÑŸÇÿØ ÿßÿ≥ÿ™ÿÆÿØŸÖÿ™ Ÿáÿ∞ÿß ÿßŸÑŸÉŸàÿØ ŸÖŸÜ ŸÇÿ®ŸÑ ‚ùå')
            return
        if user_code >= 1:
            join_user = msg.from_user.id
            joo = db.get(f"user_{join_user}")
            joo['coins'] = int(joo['coins']) + int(coin_code)
            db.set(f"user_{msg.from_user.id}", joo)
            bot.reply_to(msg,f'‚Ä¢ ÿ™ŸÖ ÿßÿ∂ÿßŸÅÿ© {coin_code} ŸÜŸÇÿßÿ∑ ÿßŸÑŸä ÿ≠ÿ≥ÿßÿ®ŸÉ ‚úÖ')
            user_after = int(user_code) - 1
            db.set("user_code", user_after)
            used_codes.append(msg.from_user.id)
            db.set('used_codes', used_codes)
            start_message(msg)
            user_id = msg.from_user.id
            code = int(db.get(f"cd_{user_id}")) if db.exists(f"cd_{user_id}") else 0
            daily_count = code + 1
            db.set(f"cd_{user_id}", int(daily_count))
        else:
            bot.reply_to(msg,'‚Ä¢ ÿßŸÜÿ™Ÿáÿ™ ÿµŸÑÿßÿ≠Ÿäÿ© Ÿáÿ∞ÿß ÿßŸÑŸÉŸàÿØ ‚ùå')
    else:
        bot.reply_to(msg,f'‚Ä¢ ŸÑŸÇÿØ ÿßÿØÿÆŸÑÿ™ ŸÉŸàÿØ ÿ®ÿ¥ŸÉŸÑ ÿÆÿ∑ÿß ‚ùå')
####$$########
def link_bot2(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    url = message.text
    if 'https://t.me' in url:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n\n‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸà ŸÖÿπÿ±ŸÅ ŸÇŸÜÿßÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿßÿ¨ÿ®ÿßÿ±Ÿâ')
        bot.register_next_step_handler(x, linkbot_chforce, amount, url)
    else:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
def dump_votes(message):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    url = message.text
    load_ = db.get('accounts')
    num = len(load_)
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ≥ÿ≠ÿ® ÿ™ÿµŸàŸäÿ™'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {num}')
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true, false = 0, 0
    nume = int(num)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for num in load_:
        try:
            x = asyncio.run(dump_votess(num['s'], url, tim))
            
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            print(f"Erorr: {e}")
            continue
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n\n‚Ä¢ ÿ™ŸÖ ÿ≥ÿ≠ÿ® : {false} ÿ™ÿµŸàŸäÿ™\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿ≥ÿ≠ÿ® : {true}',reply_markup=bk)
  
def linkbot_chforce(message, amount, url):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    channel_force = message.text.replace('https://t.me/', '').replace('@', '')
    bot_id, user_id = url.split("?start=")[0].split("/")[-1], url.split("?start=")[1]
    channel = "@" + bot_id
    tex = "/start " + user_id
    pr = linkbot2_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ±ÿßÿ®ÿ∑ ÿØÿπŸàÿ© ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßÿ¨ÿ®ÿßÿ±Ÿâ'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n\n‚Ä¢ üì£] ŸÇŸÜÿßÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿßŸàŸÑŸä : @{channel_force}')
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true, false = 0, 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            session = random.choice(load_)
            x = asyncio.run(linkbot2(session, channel, tex, channel_force, tim))
            load_.remove(session)
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        for ix in range(true):
            acc['coins'] -= linkbot2_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*linkbot2_price}',reply_markup=bk)
    bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
    user_id = message.from_user.id
    code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
    daily_count = code + int(true*linkbot2_price)
    db.set(f"po_{user_id}", int(daily_count))
    return
##################
def get_comments_url(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    url = message.text
    admins = db.get('admins')
    if 'https://t.me' in url:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n\n‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ™ÿπŸÑŸäŸÇ ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá')
        bot.register_next_step_handler(x, comment_text, amount, url)
    else:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
def comment_text(message, amount, url):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    text = message.text
    if text:
        if len(text) > 100:
            bot.reply_to(message, text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿ±ÿ≥ÿßŸÑÿ© ÿ™ŸÉŸàŸÜ ÿßŸÇŸÑ ŸÖŸÜ 100 ÿ≠ÿ±ŸÅ ')
            return
        acc = db.get(f'user_{message.from_user.id}')
        pr = comment_price * amount
        load_ = db.get('accounts')
        typerr = 'ÿ™ÿπŸÑŸäŸÇÿßÿ™ ÿÆÿØŸÖÿ© ·¥†…™·¥ò'
        bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
        tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
        db.set(f"serv_{message.from_user.id}", True)
        bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr} .\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n‚Ä¢ ÿßŸäÿØŸäŸá: {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}')
        true, false = 0, 0
        nume = int(amount)
        prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        for y in load_:
            if true >= amount:
                break
            try:
                session = random.choice(load_)
                x = asyncio.run(send_comment(session, url, text, tim))
                load_.remove(session)
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            except:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
                continue
        if true >= 1:
            for ix in range(true):
                acc['coins'] -= comment_price
            db.set(f'user_{message.from_user.id}', acc)
        else:
            pass
        db.set(f"serv_{message.from_user.id}", False)
        addord()
        user_id = message.from_user.id
        buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
        buys+=1
        db.set(f"user_{user_id}_buys", int(buys))
        bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*comment_price} ŸÖŸÜ ŸÜŸÇÿßÿ∑ŸÉ',reply_markup=bk)
        bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
        code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
        daily_count = code + int(true*comment_price)
        db.set(f"po_{user_id}", int(daily_count))
        return
########################
def link_bot(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text
    bot_id, user_id = url.split("?start=")[0].split("/")[-1], url.split("?start=")[1]
    channel = "@" + bot_id
    tex = "/start " + user_id
    pr = linkbot_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ±ÿßÿ®ÿ∑ ÿØÿπŸàÿ© ÿ®ÿØŸàŸÜ ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßÿ¨ÿ®ÿßÿ±Ÿâ'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true, false = 0, 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            session = random.choice(load_)
            x = asyncio.run(linkbot(session, channel, tex, tim))
            load_.remove(session)
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        for ix in range(true):
            acc['coins'] -= linkbot_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ŸÖÿπÿ±ŸÅ ÿßŸÑÿ®Ÿàÿ™Ô∏ô{channel}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖ : {true*linkbot_price}',reply_markup=bk)
    bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
    code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
    daily_count = code + int(true*linkbot_price)
    db.set(f"po_{user_id}", int(daily_count))
    return

def get_bot_user(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text.replace('https://t.me/', '').replace('@', '')
    pr = userbot_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿ®Ÿàÿ™'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true, false = 0, 0
    nume = int(amount)
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            session = random.choice(load_)
            x = asyncio.run(userbot(session, url, tim))
            load_.remove(session)
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        for ix in range(true):
            acc['coins'] -= usebot_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{message.text}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*userbot_price}',reply_markup=bk)
    bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
    code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
    daily_count = code + int(true*userbot_price)
    db.set(f"po_{user_id}", int(daily_count))
    return
    
def get_url_spam(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    url = message.text
    admins = db.get('admins')
    if 'https://t.me' in url or '@' in url:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ÿßŸÑŸÑŸä ÿ™ÿ±ŸäÿØ ÿ™ÿ±ÿ≥ŸÑŸáÿß ŸÑŸÑÿ≠ÿ≥ÿßÿ®')
        bot.register_next_step_handler(x, get_text, amount, url)
        return

def get_text(message, amount, url):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    text = message.text
    if text:
        if len(text) > 1000:
            bot.reply_to(message, text='‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿ±ÿ≥ÿßŸÑÿ© ÿ™ŸÉŸàŸÜ ÿßŸÇŸÑ ŸÖŸÜ 1000 ÿ≠ÿ±ŸÅ ')
            return
        acc = db.get(f'user_{message.from_user.id}')
        pr = spam_price * amount
        load_ = db.get('accounts')
        typerr = 'ÿ±ÿ≥ÿßÿ¶ŸÑ ŸÖÿ≤ÿπÿ¨ÿ© ÿÆÿØŸÖÿ© ·¥†…™·¥ò'
        bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
        tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
        db.set(f"serv_{message.from_user.id}", True)
        bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr} .\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n‚Ä¢ ÿßŸäÿØŸäŸá: {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}')
        true, false = 0, 0
        nume = int(amount)
        prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        for y in load_:
            if true >= amount:
                break
            try:
                session = random.choice(load_)
                x = asyncio.run(send_message(session, chat=url, text=tex))
                load_.remove(session)
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            except:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
                continue
        if true >= 1:
            for ix in range(true):
                acc['coins'] -= spam_price
            db.set(f'user_{message.from_user.id}', acc)
        else:
            pass
        db.set(f"serv_{message.from_user.id}", False)
        addord()
        user_id = message.from_user.id
        buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
        buys+=1
        db.set(f"user_{user_id}_buys", int(buys))
        bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*spam_price} ŸÖŸÜ ŸÜŸÇÿßÿ∑ŸÉ',reply_markup=bk)
        bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
        code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
        daily_count = code + int(true*spam_price)
        db.set(f"po_{user_id}", int(daily_count))
        return

def get_url_memp(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text
    load = db.get('accounts')
    info = get(message.from_user.id)
    price = member_price * amount
    if price > int(info['coins']):
        bot.reply_to(message,text=f'ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä <strong> {price - int(info["coins"])} </strong>',reply_markup=bk)
        return
    if len(load) < 1:
        bot.reply_to(message,text='ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ',reply_markup=bk)
        return
    typerr = 'ÿ±ÿ¥ŸÇ ÿßÿπÿ∂ÿßÿ° ŸÇŸÜÿßÿ© ÿÆÿßÿµÿ© ÿÆÿØŸÖÿ© ·¥†…™·¥ò'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™ \n‚Ä¢ ÿßŸÑŸÜŸàÿπ: {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}')
    true, false = 0, 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load:
        if true >= amount:
            break
        try:
            session = random.choice(load_)
            x = asyncio.run(join_chatp(session, url, tim))
            load_.remove(session)
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            pass
    if true >= 1:
        for ix in range(true):
            info['coins'] -= member_price
        db.set(f'user_{message.from_user.id}', info)
    else:
        pass
    bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*member_price} ŸÖŸÜ ŸÜŸÇÿßÿ∑ŸÉ',)
    bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
    user_id = message.from_user.id
    code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
    daily_count = code + int(true*member_price)
    db.set(f"po_{user_id}", int(daily_count))
    return

def get_url_mem(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text
    if 'https://t.me' in url or '@' in url:
        if detect(url):
            load = db.get('accounts')
            info = get(message.from_user.id)
            price = member_price * amount
            if price > int(info['coins']):
                bot.reply_to(message,text=f'ŸÖÿßŸÖÿπŸÉ ŸÜŸÇÿßÿ∑ ŸÉÿßŸÅŸäÿ©ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ <strong> {price - int(info["coins"])} </strong> ŸÜŸÇÿ∑ÿ© ÿπŸÑŸÖŸàÿØ ÿ™ÿ±ÿ≥ŸÑ Ÿáÿ∞ÿß ÿßŸÑÿπÿØÿØ',reply_markup=bk)
                return
            if len(load) < 1:
                bot.reply_to(message,text='ÿπÿØÿØ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ ',reply_markup=bk)
                return
            typerr = 'ÿ±ÿ¥ŸÇ ÿßÿπÿ∂ÿßÿ° ÿÆÿØŸÖÿ© ·¥†…™·¥ò'
            v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
            tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
            db.set(f"serv_{message.from_user.id}", True)
            bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™ \n‚Ä¢ ÿßŸÑŸÜŸàÿπ: {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}')
            
            true, false = 0, 0
            nume = int(amount)
            prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            for y in load:
                if true >= amount:
                    break
                try:
                    session = random.choice(load_)
                    x = asyncio.run(join_chat(session, url, tim))
                    load_.remove(session)
                    if x == 'o':
                        continue
                    if x == True:
                        true += 1
                        nume -= 1
                        bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
                    else:
                        false += 1
                        bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
                except Exception as e:
                   pass
            if true >= 1:
                for ix in range(true):
                    info['coins'] -= member_price
                db.set(f'user_{message.from_user.id}', info)
            else:
                pass
            db.set(f"serv_{message.from_user.id}", False)
            bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*member_price} ŸÖŸÜ ŸÜŸÇÿßÿ∑ŸÉ',)
            bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
            user_id = message.from_user.id
            code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
            daily_count = code + int(true*member_price)
            db.set(f"po_{user_id}", int(daily_count))
            return
        else:
            username = url.replace('https://t.me/', '').replace('@', '')
            load = db.get('accounts')
            info = get(message.from_user.id)
            price = member_price * amount
            if price > int(info['coins']):
                bot.reply_to(message,text=f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© : ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä <strong> {price - int(info["coins"])} </strong> ŸÜŸÇÿ∑ÿ©',reply_markup=bk)
                return
            if len(load) < 1:
                bot.reply_to(message,text=f'‚Ä¢ ÿ≠ÿ≥ÿßÿ®ÿßÿ™ ÿßŸÑÿ®Ÿàÿ™ ŸÑÿß ÿ™ŸÉŸÅŸä ŸÑÿ™ŸÜŸÅŸäÿ∞ ÿ∑ŸÑÿ®ŸÉ',reply_markup=bk)
                return
            typerr = 'ÿ±ÿ¥ŸÇ ÿßÿπÿ∂ÿßÿ° ÿÆÿØŸÖÿ© ·¥†…™·¥ò'
            v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
            tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
            db.set(f"serv_{message.from_user.id}", True)
            bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount}\n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
            
            true, false = 0, 0
            nume = int(amount)
            prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            for y in load:
                if true >= amount:
                    break
                try:
                    session = random.choice(load_)
                    x = asyncio.run(join_chat(session, username, tim))
                    load_.remove(session)
                    if x == 'o':
                        continue
                    if x == True:
                        true += 1
                        nume -= 1
                        bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
                    else:
                        false += 1
                        bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
                except Exception as e:
                   
                    continue
            for i in range(true):
                info['coins'] -= member_price
            db.set(f"serv_{message.from_user.id}", False) 
            db.set(f'user_{message.from_user.id}', info)
            addord()
            user_id = message.from_user.id
            buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
            buys+=1
            db.set(f"user_{user_id}_buys", int(buys))
            bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*member_price} ŸÖŸÜ ŸÜŸÇÿßÿ∑ŸÉ',)
            bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
            user_id = message.from_user.id
            code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
            daily_count = code + int(true*member_price)
            db.set(f"po_{user_id}", int(daily_count))
            return

def chtime(msg):
    try:
        time = int(msg.text)
    except:
        bot.reply_to(msg, text='ÿÆÿ∑ÿß ÿå ŸÇŸÖ ÿ®ÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸàŸÇÿ™ ŸÉÿßÿ±ŸÇÿßŸÖ ŸÅŸÇÿ∑ ‚ùå')
        return
    if time <0:
        bot.reply_to(msg, text='ÿÆÿ∑ÿß ÿå ÿßŸÇŸÑ ŸÇŸäŸÖÿ© ŸäŸÖŸÉŸÜ ÿßÿ∂ÿßŸÅÿ™Ÿáÿß ŸáŸä 0 ‚ùå')
        return
    if time >200:
        bot.reply_to(msg, text='ÿÆÿ∑ÿß ÿå ÿßŸÉÿ®ÿ± ŸÇŸäŸÖÿ© ŸäŸÖŸÉŸÜ ÿßÿØÿÆÿßŸÑŸáÿß ŸáŸä 200 ‚ùå')
        return
    db.set(f"tim_{msg.from_user.id}", int(time))
    bot.reply_to(msg, text='ŸÜÿ¨ÿßÿ≠ ÿå ÿ™ŸÖ ÿ≠ŸÅÿ∏ ÿßŸÑŸÇŸäŸÖÿ© ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
def checks(link):
    admins = db.get('admins')
    pattern = r"https?://t\.me/(\w+)/(\d+)"
    match = re.match(pattern, link)

    if match:
        username = match.group(1)
        post_id = match.group(2)
        return username, post_id
    else:
        return False
def get_react(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    rs = ["üëç", "üëé", "‚ù§", "üî•", "ü•∞", "üëè", "üòÅ", "ü§î", "ü§Ø", "ü§¨", "üò¢", "üéâ", "ü§©", "ü§Æ", "üí©", "üôè", "üëå", "üïä", "ü§°", "ü•±", "ü•¥", "üòç", "üê≥", "üåö", "üå≠", "üíØ", "ü§£", "‚ö°Ô∏è", "üçå", "üèÜ", "üíî", "ü§®", "üòê", "üçì", "üçæ", "üíã", "üñï","üòà", "üò¥", "ü§ì", "üëª", "üë®‚Äçüíª", "üëÄ", "üéÉ", "üôà", "üòá", "üò®", "ü§ù", "‚úç", "ü§ó", "ü´°", "üéÖ", "üéÑ", "‚òÉÔ∏è", "üíÖ", "ü§™","üóø", "üÜí", "üíò", "üôâ", "ü¶Ñ", "üòò", "üíä", "üôä", "üòé", "üëæ", "ü§∑‚Äç‚ôÇÔ∏è", "ü§∑", "ü§∑‚Äç‚ôÄÔ∏è", "üò°","‚ù§"]
    if message.text in rs:
        x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n‚Ä¢ ÿßŸÑÿ™ŸÅÿßÿπŸÑ : {message.text}\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ŸÑÿ±ÿ¥ŸÇ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿπŸÑŸäŸá')
        bot.register_next_step_handler(x, get_url_react, amount, message)
    elif message.text == "‚ù§":
        x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n‚Ä¢ ÿßŸÑÿ™ŸÅÿßÿπŸÑ : {message.text}\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ŸÑÿ±ÿ¥ŸÇ ÿßŸÑÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿπŸÑŸäŸá')
        bot.register_next_step_handler(x, get_url_react, amount, message)
    else:
        x = bot.reply_to(message,f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ™ŸÅÿßÿπŸÑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        bot.register_next_step_handler(x, get_react, amount)
        return
def get_url_votes(message, amount, time):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text
    if "/c/" in url:
        bot.reply_to(message,text=f'‚Ä¢ ÿπÿ∞ÿ±ÿß ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿÆÿØŸÖÿ© ŸÅŸä ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿÆÿßÿµÿ©')
        return
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = vote_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ÿµŸàŸäÿ™'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}\n‚Ä¢ ‚è±] ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ŸÉŸÑ ÿ™ÿµŸàŸäÿ™ : {time}')
    db.set(f"serv_{message.from_user.id}", True)
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}\n‚Ä¢ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ : {time} ')
    true, false = 0, 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            session = random.choice(load_)
            x = asyncio.run(vote_one(session, url, time, tim))
            load_.remove(session)
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        for ix in range(true):
            acc['coins'] -= vote_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}',reply_markup=bk)
    bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
    user_id = message.from_user.id
    code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
    daily_count = code + int(true*vote_price)
    db.set(f"po_{user_id}", int(daily_count))
    return
    
def get_url_react(message, amount, like):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text
    like = like.text
    if "/c/" in url:
        bot.reply_to(message,text=f'‚Ä¢ ÿπÿ∞ÿ±ÿß ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿÆÿØŸÖÿ© ŸÅŸä ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿÆÿßÿµÿ©')
        return
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = react_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßÿÆÿ™Ÿäÿßÿ±Ÿä'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n‚Ä¢ üëç] ÿßŸÑÿ™ŸÅÿßÿπŸÑ : {like}\n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    db.set(f"serv_{message.from_user.id}", True)
    true, false = 0, 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            session = random.choice(load_)
            x = asyncio.run(reactions(session, url, like, tim))
            load_.remove(session)
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        for ix in range(true):
            acc['coins'] -= react_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*react_price}',reply_markup=bk)
    bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
    user_id = message.from_user.id
    code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
    daily_count = code + int(true*react_price)
    db.set(f"po_{user_id}", int(daily_count))
    return
def get_reacts_url(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text
    if "/c/" in url:
        bot.reply_to(message,text=f'‚Ä¢ ÿπÿ∞ÿ±ÿß ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿÆÿØŸÖÿ© ŸÅŸä ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿÆÿßÿµÿ©')
        return
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = react_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿπÿ¥Ÿàÿßÿ¶Ÿä'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true, false = 0, 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            session = random.choice(load_)
            x = asyncio.run(reaction(session, url, tim))
            load_.remove(session)
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        for ix in range(true):
            acc['coins'] -= react_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*react_price}',reply_markup=bk)
    bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
    user_id = message.from_user.id
    code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
    daily_count = code + int(true*react_price)
    db.set(f"po_{user_id}", int(daily_count))
    return
def get_positive_url(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text
    if "/c/" in url:
        bot.reply_to(message,text=f'‚Ä¢ ÿπÿ∞ÿ±ÿß ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿÆÿØŸÖÿ© ŸÅŸä ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿÆÿßÿµÿ©')
        return
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = react_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿßŸäÿ¨ÿßÿ®Ÿä [üëç,‚ù§,üî•,üòç,ü§©]'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true, false = 0, 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            session = random.choice(load_)
            x = asyncio.run(positive(session, url, tim))
            load_.remove(session)
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        for ix in range(true):
            acc['coins'] -= react_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False) 
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*react_price}',reply_markup=bk)
    bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
    user_id = message.from_user.id
    code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
    daily_count = code + int(true*react_price)
    db.set(f"po_{user_id}", int(daily_count))
    return
def get_negative_url(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text
    if "/c/" in url:
        bot.reply_to(message,text=f'‚Ä¢ ÿπÿ∞ÿ±ÿß ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿÆÿØŸÖÿ© ŸÅŸä ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿÆÿßÿµÿ©')
        return
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = react_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ŸÅÿßÿπŸÑÿßÿ™ ÿ≥ŸÑÿ®Ÿä [üëé,üí©,ü§Æ,ü§¨,üñï]'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true, false = 0, 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            session = random.choice(load_)
            x = asyncio.run(negative(session, url, tim))
            load_.remove(session)
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        for ix in range(true):
            acc['coins'] -= react_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*react_price}',reply_markup=bk)
    bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
    user_id = message.from_user.id
    code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
    daily_count = code + int(true*react_price)
    db.set(f"po_{user_id}", int(daily_count))
    return
def get_url_forward(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text
    if "/c/" in url:
        bot.reply_to(message,text=f'‚Ä¢ ÿπÿ∞ÿ±ÿß ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿÆÿØŸÖÿ© ŸÅŸä ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿÆÿßÿµÿ©')
        return
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = forward_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™Ÿàÿ¨ŸäŸáÿßÿ™'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true, false = 0, 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            session = random.choice(load_)
            x = asyncio.run(forward(session, url, tim))
            load_.remove(session)
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        for ix in range(true):
            acc['coins'] -= react_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*react_price}',reply_markup=bk)
    bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
    user_id = message.from_user.id
    code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
    daily_count = code + int(true*react_price)
    db.set(f"po_{user_id}", int(daily_count))
    return
def get_url_poll(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text
    if "/c/" in url:
        bot.reply_to(message,text=f'‚Ä¢ ÿπÿ∞ÿ±ÿß ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿÆÿØŸÖÿ© ŸÅŸä ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿÆÿßÿµÿ©')
        return
    x = checks(url)
    if x:
        channel, msg_id = x
    if not checks(url):
        bot.reply_to(message,text='‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    try:
        mm = "‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿ™ÿ≥ŸÑÿ≥ŸÑ ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ© ŸÅŸä ÿßŸÑÿßÿ≥ÿ™ŸÅÿ™ÿßÿ°\n\n‚Ä¢ Ÿäÿ¨ÿ® ÿßŸÜ Ÿäÿ™ÿ±ÿßŸàÿ≠ ÿ®ŸäŸÜ 0 : 9\n‚Ä¢ ÿπŸÑŸÖÿß ÿ®ÿßŸÜ ÿßŸàŸÑ ÿßÿÆÿ™Ÿäÿßÿ± ŸäŸÉŸàŸÜ ÿ™ÿ≥ŸÑÿ≥ŸÑÿ© 0"
        x = bot.reply_to(message, mm, parse_mode='HTML')
        bot.register_next_step_handler(x, start_poll, amount, url)
    except Exception as e:
        bot.reply_to(message, "ÿßŸÑÿ±ÿ≥ÿßŸÑÿ© ŸÖŸÖÿ≥Ÿàÿ≠ÿ© ÿ£Ÿà ÿßŸÑŸÇŸÜÿßÿ© ÿßŸÑŸÖÿ¨ŸÖŸàÿπÿ© ÿ∫Ÿäÿ± ÿµÿ≠Ÿäÿ≠ÿ©.")
        print(e)
        return
def start_poll(message, amount, url):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    num = message.text
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = poll_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿßÿ≥ÿ™ŸÅÿ™ÿßÿ°'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url}\n‚Ä¢ üìä] ÿßŸÑÿßÿÆÿ™Ÿäÿßÿ± : {num}\n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
    db.set(f"serv_{message.from_user.id}", True)
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true, false = 0, 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            session = random.choice(load_)
            x = asyncio.run(poll(session, url, int(num), tim))
            load_.remove(session)
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        for ix in range(true):
            acc['coins'] -= poll_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*poll_price}',reply_markup=bk)
    bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
    user_id = message.from_user.id
    code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
    daily_count = code + int(true*poll_price)
    db.set(f"po_{user_id}", int(daily_count))
    return
def get_view_url(message, amount):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    url = message.text
    if "/c/" in url:
        bot.reply_to(message,text=f'‚Ä¢ ÿπÿ∞ÿ±ÿß ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿÆÿØŸÖÿ© ŸÅŸä ÿßŸÑŸÇŸÜŸàÿßÿ™ ÿßŸÑÿÆÿßÿµÿ©')
        return
    if not checks(url):
        bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    pr = view_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ŸÖÿ¥ÿßŸáÿØÿßÿ™'
    v = bot.reply_to(message,text=f'‚Ä¢ üì§] ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿ∑ŸÑÿ®ŸÉ\n\n‚Ä¢ üè∑] ÿßŸÑŸÜŸàÿπ : {typerr}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n\n‚Ä¢ üó≥] ÿßŸÑŸÉŸÖŸäÿ© : {amount}')
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    db.set(f"serv_{message.from_user.id}", True)
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username} ')
    true, false = 0, 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            session = random.choice(load_)
            x = asyncio.run(view(session, url, tim))
            load_.remove(session)
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
            else:
                false += 1
                bot.edit_message_text(chat_id=message.from_user.id, message_id=prog.message_id, text=f'‚Ä¢ ‚è™] ÿ¨ÿßÿ±Ÿâ ÿ™ÿ™ÿ®ÿπ ÿ∑ŸÑÿ®ŸÉÔ∏ô\n\n‚Ä¢ ‚úÖ] ÿßÿ±ÿ≥ÿßŸÑ ŸÜÿßÿ¨ÿ≠Ô∏ô{true}\n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑÔ∏ô{false}\n\n‚Ä¢ üì¨] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉÔ∏ô{nume}\n‚Ä¢ üìé] Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        for ix in range(true):
            acc['coins'] -= view_price
        db.set(f'user_{message.from_user.id}', acc)
    db.set(f"serv_{message.from_user.id}", False)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ üì•] ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ | ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜ ÿ∑ŸÑÿ®ŸÉ :\n\n‚Ä¢ üì¶] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®Ô∏ô{amount} \n\n‚Ä¢ ‚úÖ] ÿßŸÑÿπÿØÿØ ÿßŸÑŸÖŸÉÿ™ŸÖŸÑÔ∏ô{true} \n‚Ä¢ ‚ùå] ŸÅÿ¥ŸÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿßÿ±ÿ≥ÿßŸÑ : {false}\n\n‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑Ô∏ô{url}\n‚Ä¢ ‚ûñ] ÿ™ŸÖ ÿÆÿµŸÖÔ∏ô{true*view_price}',reply_markup=bk)
    bot.delete_message(chat_id=message.from_user.id, message_id=prog.message_id)
    return
def check_user(id):
    if not db.get(f'user_{id}'):
        return False
    return True

def set_user(id, data):
    db.set(f'user_{id}', data)
    return True

def get(id):
    return db.get(f'user_{id}')

def delete(id):
    return db.delete(f'user_{id}')

def trend():
    k = db.keys("user_%")
    users = []
    for i in k:
        try:
            g = db.get(i[0])
            d = g["id"]
            users.append(g)
        except:
            continue
    data = users
    sorted_users = sorted(data, key=lambda x: len(x["users"]), reverse=True)
    result_string = "‚Ä¢<strong> ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿ£ŸÉÿ´ÿ± ŸÖÿ¥ÿßÿ±ŸÉÿ© ŸÑÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© :</strong>\n\n"
    for index, user in enumerate(sorted_users[:5]):
        us = bot.get_chat(user['id'])
        hh = us.username
        if hh is None:
            hh = "ŸÑÿß ŸäŸàÿ¨ÿØ ŸÖÿπÿ±ŸÅ"
        else:
            pp = f"@{hh}"
        if index == 0:
            result_string += f"üèÜ: <strong>({len(user['users'])})</strong> > {pp}\n"
        elif index == 1:
            result_string += f"ü•à: <strong>({len(user['users'])})</strong> > {pp}\n"
        elif index == 2:
            result_string += f"ü•â: <strong>({len(user['users'])})</strong> > {pp}\n"
        elif index == 3:
            result_string += f"üéó: <strong>({len(user['users'])})</strong> > {pp}\n"
        else:
            result_string += f"üéó: <strong>({len(user['users'])})</strong> > {pp}\n"
    return result_string
    
def coinsn():
    k = db.keys("user_%")
    users = []
    for i in k:
        try:
            g = db.get(i[0])
            d = g["id"]
            users.append(g)
        except:
            continue
    data = users
    sorted_users = sorted(data, key=lambda x: x["coins"], reverse=True)
    result_strin = "‚Ä¢<strong> ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿ£ŸÉÿ´ÿ± ŸÜŸÇÿßÿ∑ÿßŸã ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ :</strong>\n\n"
    for index, user in enumerate(sorted_users[:5]):
        us = bot.get_chat(user['id'])
        hh = us.username
        if hh is None:
            hh = "ŸÑÿß ŸäŸàÿ¨ÿØ ŸÖÿπÿ±ŸÅ"
        elif hh == 'PWVWP':
            pp = f"@{hh} > <strong>(ÿßŸÑŸÖÿ∑Ÿàÿ±)</strong>"
        else:
            pp = f"@{hh}"
        if index == 0:
            result_strin += f"üèÜ: <strong>({user['coins']})</strong> > {pp}\n"
        elif index == 1:
            result_strin += f"ü•à: <strong>({user['coins']})</strong> > {pp}\n"
        elif index == 2:
            result_strin += f"ü•â: <strong>({user['coins']})</strong> > {pp}\n"
        elif index == 3:
            result_strin += f"üéó: <strong>({user['coins']})</strong> > {pp}\n"
        else:
            result_strin += f"üéó: <strong>({user['coins']})</strong> > {pp}\n"
    return result_strin
def detect(text):
    pattern = r'https:\/\/t\.me\/\+[a-zA-Z0-9]+'
    match = re.search(pattern, text)
    return match is not None
def casting(message):
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    idm = message.message_id
    d = db.keys('user_%')
    good = 0
    bad = 0
    bot.reply_to(message, f'‚Ä¢ ÿ¨ÿßÿ±Ÿä ÿßŸÑÿßÿ∞ÿßÿπÿ© ÿßŸÑŸä ŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿ®Ÿàÿ™ ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ ')
    for user in d:
        try:
            id = db.get(user[0])['id']
            bot.copy_message(chat_id=id, from_chat_id=message.from_user.id, message_id=idm)
            good+=1
        except:
            bad+=1
            continue
    bot.reply_to(message, f'‚Ä¢ ÿßŸÉÿ™ŸÖŸÑÿ™ ÿßŸÑÿßÿ∞ÿßÿπÿ© ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸâ : {good}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {bad} ')
    return
def adminss(message, type):
    if message.text == "/start":
        start_message(message)
        return
    admins = db.get('admins')
    if type == 'add':
        try:
            id = int(message.text)
        except:
            bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
        d = db.get('admins')
        if id in d:
            bot.reply_to(message, f'‚Ä¢ Ÿáÿ∞ÿß ÿßŸÑÿπÿ∂Ÿà ÿßÿØŸÖŸÜ ÿ®ÿßŸÑŸÅÿπŸÑ')
            return
        else:
            d.append(id)
            db.set('admins', d)
            bot.reply_to(message, f'‚Ä¢ ÿ™ŸÖ ÿßÿ∂ÿßŸÅÿ™Ÿá ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
            return
    if type == 'delete':
        try:
            id = int(message.text)
        except:
            bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
        d = db.get('admins')
        if id not in d:
            bot.reply_to(message, f'‚Ä¢ Ÿáÿ∞ÿß ÿßŸÑÿπÿ∂Ÿà ŸÑŸäÿ≥ ŸÖŸÜ ÿßŸÑÿßÿØŸÖŸÜŸäÿ© ÿ®ÿßŸÑÿ®Ÿàÿ™')
            return
        else:
            d.remove(id)
            db.set('admins', d)
            bot.reply_to(message, f'‚Ä¢ ÿ™ŸÖ ÿßÿ∞ÿßŸÑÿ© ÿßŸÑÿπÿ∂Ÿà ŸÖŸÜ ÿßŸÑÿßÿØŸÖŸÜŸäÿ© ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
            return
    if type == 'change_price':
        lisst = ["member_price","view_price","react_price","vote_price","spam_price"]
        serv = message.text
        nn = db.get(message.text) if db.exists(message.text) else "ŸÑÿß ŸäŸàÿ¨ÿØ ÿ≥ÿπÿ± ŸÑŸáÿ∞ÿß ÿßŸÑŸÖÿ™ÿ¨ÿ±"
        x = bot.reply_to(message, f'‚Ä¢ ÿßŸÑÿ≥ÿπÿ± ÿßŸÑÿ≠ÿßŸÑŸä ŸÑŸáÿ∞ÿß ÿßŸÑŸÖŸÜÿ™ÿ¨ : {nn}\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ≥ÿπÿ± ÿßŸÑÿ¨ÿØŸäÿØ !')
        bot.register_next_step_handler(x, change_price, serv)
def change_price(message, nn):
    try:
        new = int(message.text)
    except:
        bot.reply_to(message, f'ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑')
        return
    db.set(f"{nn}", int(new))
    bot.reply_to(message, f'‚Ä¢ ÿ™ŸÖ ÿ™ÿ∫ŸäŸäÿ± ÿ≥ÿπÿ± ÿßŸÑÿÆÿØŸÖÿ© : {nn}\n\n‚Ä¢ ÿßŸÑŸä : {new}')
def banned(message, type):
    admins = db.get('admins')
    if type == 'ban':
        try:
            id = int(message.text)
        except:
            bot.reply_to(message, f'ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
        d = db.get('badguys')
        if id in d:
            bot.reply_to(message, f'‚Ä¢ Ÿáÿ∞ÿß ÿßŸÑÿπÿ∂Ÿà ŸÖÿ≠ÿ∏Ÿàÿ± ŸÖŸÜ ŸÇÿ®ŸÑ ')
            return
        else:
            d.append(id)
            db.set('badguys', d)
            bot.reply_to(message, f'‚Ä¢ ÿ™ŸÖ ÿ≠ÿ∏ÿ± ÿßŸÑÿπÿ∂Ÿà ŸÖŸÜ ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ®Ÿàÿ™')
            return
    if type == 'unban':
        try:
            id = int(message.text)
        except:
            bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
        d = db.get('badguys')
        if id not in d:
            bot.reply_to(message, f'‚Ä¢ Ÿáÿ∞ÿß ÿßŸÑÿπÿ∂Ÿà ÿ∫Ÿäÿ± ŸÖÿ≠ÿ∏Ÿàÿ± ')
            return
        else:
            d.remove(id)
            db.set('badguys', d)
            bot.reply_to(message, f'‚Ä¢ ÿ™ŸÖ ÿßŸÑÿ∫ÿßÿ° ÿ≠ÿ∏ÿ± ÿßŸÑÿπÿ∂Ÿà ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ')
            return
def get_info(message):
    if message.text == "/start":
        start_message(message)
        return
    id = message.text
    try:
        id = int(id)
    except:
        bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠ ÿ±ÿ¨ÿßÿ°')
        return
    d = db.get(f'user_{id}')
    if not d:
        bot.reply_to(message, f'‚Ä¢ Ÿáÿ∞ÿß ÿßŸÑÿπÿ∂Ÿà ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ')
        return
    # {'id': user_id, 'users': [], 'coins': 0, 'paid': False}
    id, coins, users = d['id'], d['coins'], len(d['users'])
    bot.reply_to(message, f'‚Ä¢ ÿßŸäÿØŸäŸá : {id}.\n‚Ä¢ ŸÜŸÇÿßÿ∑Ÿá: {coins} ŸÜŸÇÿ∑ÿ© \n‚Ä¢ ÿπÿØÿØ ŸÖÿ¥ÿßÿ±ŸÉÿ™Ÿá ŸÑÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ©{users}')
    return
def send(message):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    id = message.text
    try:
        id = int(message.text)
    except:
        bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠ ')
        return
    if not db.exists(f'user_{id}'):
        bot.reply_to(message, f'‚Ä¢ Ÿáÿ∞ÿß ÿßŸÑÿπÿ∂Ÿà ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ ‚ùå')
        return
    if int(message.text) == int(message.from_user.id):
        bot.reply_to(message, f'‚Ä¢ ÿπÿ∞ÿ±ÿß ŸÑÿß ŸäŸÖŸÉŸÜŸÉ ÿ™ÿ≠ŸàŸäŸÑ ŸÜŸÇÿßÿ∑ ŸÑŸÜŸÅÿ≥ŸÉ ‚ùå')
        return
    x2 = bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑŸÜŸÇÿßÿ∑ ÿßŸÑÿ™Ÿä ÿ™ÿ±ŸäÿØ ÿ™ÿ≠ŸàŸäŸÑŸáÿß ŸÑŸÄ {id}')
    bot.register_next_step_handler(x2, get_amount_send, id)
def send_link(message):
    try:
        amount = int(message.text)
    except:
        te = bot.reply_to(message, f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© Ÿäÿ¨ÿ® ÿßŸÜ ÿ™ŸÉŸàŸÜ ÿπÿØÿØ ŸÅŸÇÿ∑ ')
        return
    to_user = db.get(f'user_{id}')
    from_user = db.get(f'user_{message.from_user.id}')
    if amount < 100:
        bot.reply_to(message, f'‚Ä¢ ÿπÿ∞ÿ±ÿßÿå ÿßŸÑÿ≠ÿØ ÿßŸÑÿßÿØŸÜŸä ŸÑÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸÜŸÇÿßÿ∑ ŸáŸà 100')
        return
    all = int(amount) + 20
    if from_user['coins'] < all:
        bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ÿ≠ŸàŸäŸÑ Ÿáÿ∞ÿß ÿßŸÑŸÖÿ®ŸÑÿ∫ ‚ùå')
        return
    characters = "12345678906380abCcdNksIoKlwclqnOveoMmVOXyz"
    random_string = ''.join(random.choice(characters) for _ in range(33))    
    bot.reply_to(message, f"*ÿ™ŸÖ ÿÆÿµŸÖ {all} ŸÖŸÜ ŸÜŸÇÿßÿ∑ŸÉ*\n\n*- ÿπŸÖŸàŸÑŸá ÿßŸÑÿ™ÿ≠ŸàŸäŸÑ : 20 *\n\n*‚Ä¢ ÿ±ÿßÿ®ÿ∑ ÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸÜŸÇÿßÿ∑* : https://t.me/ABOSAITI_BOT?start={random_string}\n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ŸÑŸÑÿ¥ÿÆÿµ ÿßŸÑŸÖÿ±ÿßÿØ ÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸÜŸÇÿßÿ∑ ŸÑŸá \n\n*‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿµÿßŸÑÿ≠ ŸÖÿØŸâ ÿßŸÑÿ≠Ÿäÿßÿ© *\n\n*- ŸäŸÖŸÉŸÜŸÉ ÿßŸÑÿ∂ÿ∫ÿ∑ ÿπŸÑŸâ ÿ≤ÿ± ÿ™ÿπÿ∑ŸäŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ŸÑŸÉŸä ÿ™ŸÇŸàŸÖ ÿ®ÿ≥ÿ™ÿ±ÿØÿßÿØ ŸÜŸÇÿßÿ∑ŸÉ ÿßŸà ŸÇŸÖ ÿ®ÿØÿÆŸàŸÑ ÿπŸÑŸâ ÿßŸÑÿ±ÿßÿ®ÿ∑ ŸÑÿßÿ≥ÿ™ÿ±ÿØÿßÿØ ŸÜŸÇÿßÿ∑ŸÉ*",parse_mode="Markdown",reply_markup=mk([[btn(text='‚Ä¢ ÿ™ÿπÿ∑ŸäŸÑ ÿßŸÑÿ±ÿßÿ®ÿ∑ ‚Ä¢',callback_data='dellink')]]))
    db.set("user_trans", int(amount))
    db.set("user_tran", str(random_string))
    from_user['coins'] = int(from_user['coins']) - int(all)
    db.set(f"user_{message.from_user.id}", from_user)
    db.set("user_iddd", int(f"{message.from_user.id}"))
def get_amount_send(message, id):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.reply_to(message, "ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäŸãÿß ‚öôÔ∏è")
        return False
    if message.text == "/start":
        start_message(message)
        return
    amount = message.text
    try:
        amount = int(message.text)
    except:
        te = bot.reply_to(message, f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© Ÿäÿ¨ÿ® ÿßŸÜ ÿ™ŸÉŸàŸÜ ÿπÿØÿØ ŸÅŸÇÿ∑ ')
        return
    to_user = db.get(f'user_{id}')
    from_user = db.get(f'user_{message.from_user.id}')
    if amount < 100:
        bot.reply_to(message, f'‚Ä¢ ÿπÿ∞ÿ±ÿßÿå ÿßŸÑÿ≠ÿØ ÿßŸÑÿßÿØŸÜŸä ŸÑÿ™ÿ≠ŸàŸäŸÑ ÿßŸÑŸÜŸÇÿßÿ∑ ŸáŸà 100')
        return
    all = int(amount) + 20
    if from_user['coins'] < all:
        bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ŸÑÿ™ÿ≠ŸàŸäŸÑ Ÿáÿ∞ÿß ÿßŸÑŸÖÿ®ŸÑÿ∫ \n‚Ä¢ ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä {amount-from_user["coins"]} ŸÜŸÇÿ∑ÿ©')
        return
    amm = int(amount) + 20
    from_user['coins']-=amm
    db.set(f'user_{message.from_user.id}', from_user)
    to_user['coins']+=amount
    db.set(f'user_{id}', to_user)
    typ = float(db.get(f"typ_{from_user}")) if db.exists(f"typ_{from_user}") else 0.0
    ftt = typ + 0.1
    db.set(f"typ_{from_user}", float(ftt))
    try:
        bot.send_message(chat_id=id, text=f"‚Ä¢ [üë§] ÿ™ŸÖ ÿßÿ≥ÿ™ŸÑÿßŸÖ {amount} ŸÖŸÜ ŸÜŸÇÿßÿ∑\n\n- ŸÖŸÜ ÿßŸÑÿ¥ÿÆÿµ : {message.from_user.id}\n- ŸÜŸÇÿßÿ∑ŸÉ ÿßŸÑŸÇÿØŸäŸÖÿ© : {to_user['coins']}\n- ŸÜŸÇÿßÿ∑ŸÉ ÿßŸÑÿßŸÜ : {to_user['coins']+amount}")
    except: pass
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ÿ™ŸÖÿ™ ÿπŸÖŸÑŸäÿ© ÿ™ÿ≠ŸàŸäŸÑ <strong>{amount}</strong> ŸÜŸÇÿ∑ÿ© ‚úÖ\n\n‚Ä¢  ŸÖŸÜ : <a href="tg://user?id={message.from_user.id}">{message.from_user.id}</a>\n\n‚Ä¢ ÿßŸÑŸä : <a href="tg://user?id={id}">{id}</a>')
    bot.reply_to(message, f"‚Ä¢ [üë§] ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ {amount} ŸÖŸÜ ŸÜŸÇÿßÿ∑\n\n- ÿßŸÑŸâ ÿßŸÑÿ¥ÿÆÿµ : {id}\n- ŸÜŸÇÿßÿ∑ŸÉ ÿßŸÑŸÇÿØŸäŸÖÿ© : {from_user['coins']+amount}\n- ŸÜŸÇÿßÿ∑ŸÉ ÿßŸÑÿßŸÜ : {from_user['coins']}")
    user_id = message.from_user.id
    trans = int(db.get(f"user_{user_id}_trans")) if db.exists(f"user_{user_id}_trans") else 0
    count_trans = trans + 1
    db.set(f"user_{user_id}_trans", int(count_trans))
    user_id = message.from_user.id
    code = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
    daily_count = code + int(amount)
    db.set(f"po_{user_id}", int(daily_count))
    return
def addpoints(message):
    if message.text == "/start":
        start_message(message)
        return
    id = message.text
    try:
        id = int(message.text)
    except:
        bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠ ÿ±ÿ¨ÿßÿ°')
        return
    x = bot.reply_to(message, '‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿßŸÑŸÉŸÖŸäÿ© :')
    bot.register_next_step_handler(x, addpoints_final, id)
def addpoints_final(message, id):
    if message.text == "/start":
        start_message(message)
        return
    amount = message.text
    try:
        amount = int(message.text)
    except:
        bot.reply_to(message, f'Ÿäÿ¨ÿ® ÿßŸÜ ÿ™ŸÉŸàŸÜ ÿßŸÑŸÉŸÖŸäÿ© ÿßÿ±ŸÇÿßŸÖ ŸÅŸÇÿ∑')
        return
    b = db.get(f'user_{id}')
    b['coins']+=amount
    db.set(f'user_{id}', b)
    bot.reply_to(message, f'ÿ™ŸÖ ÿ®ŸÜÿ¨ÿßÿ≠ ŸÜŸÇÿßÿ∑Ÿá ÿßŸÑÿßŸÜ : {b["coins"]} ')
    return
def lespoints(message):
    if message.text == "/start":
        start_message(message)
        return
    id = message.text
    try:
        id = int(message.text)
    except:
        bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠ ÿ±ÿ¨ÿßÿ°')
        return
    x = bot.reply_to(message, '‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿßŸÑŸÉŸÖŸäÿ© :')
    bot.register_next_step_handler(x, lespoints_final, id)
def lespoints_final(message, id):
    if message.text == "/start":
        start_message(message)
        return
    amount = message.text
    try:
        amount = int(message.text)
    except:
        bot.reply_to(message, f'Ÿäÿ¨ÿ® ÿßŸÜ ÿ™ŸÉŸàŸÜ ÿßŸÑŸÉŸÖŸäÿ© ÿßÿ±ŸÇÿßŸÖ ŸÅŸÇÿ∑')
        return
    b = db.get(f'user_{id}')
    b['coins']-=amount
    db.set(f'user_{id}', b)
    bot.reply_to(message, f'ÿ™ŸÖ ÿ®ŸÜÿ¨ÿßÿ≠ ŸÜŸÇÿßÿ∑Ÿá ÿßŸÑÿßŸÜ : {b["coins"]} ')
def setfo(message):
    if message.text == "/start":
        start_message(message)
        return
    users = message.text.replace('https://t.me/', '').replace('@',  '').split(' ')
    print(users)
    db.set('force', users)
    bot.reply_to(message, 'ÿ™ŸÖÿ™ ÿ®ŸÜÿ¨ÿßÿ≠')
    return
def vipp(message, type):
    if message.text == "/start":
        start_message(message)
        return
    if type == 'add':
        try:
            id = int(message.text)
        except:
            bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
        d = db.get(f"user_{id}")
        if d is None:
            bot.reply_to(message, f'‚Ä¢ ÿßŸÑÿπÿ∂Ÿà ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™')
            return
        d['premium'] = True
        db.set(f'user_{id}', d)
        x = bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸÜ ÿπÿØÿØ ÿßŸÑÿßŸäÿßŸÖ ÿßŸÑŸÖÿ™ÿßÿ≠ÿ© ŸÑŸÑÿπÿ∂Ÿà ')
        bot.register_next_step_handler(x, addviptime, id)
        return
    if type == 'les':
        try:
            id = int(message.text)
        except:
            bot.reply_to(message, f'‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿßŸÑÿßŸäÿØŸä ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
            return
        d = db.get(f"user_{id}")
        if d is None:
            bot.reply_to(message, f'‚Ä¢ ÿßŸÑÿπÿ∂Ÿà ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™')
            return
        d['premium'] = False
        db.set(f'user_{id}', d)
        bot.reply_to(message, f"ÿ™ŸÖ ÿßŸÜŸáÿßÿ° ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑŸÄ ·¥†…™·¥ò ŸÑŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ {id}")
def addviptime(message,id):
    try:
        timenv = int(message.text)
    except:
        bot.reply_to(message, f"ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑")
        return
    d = db.get(f"user_{id}")
    d['premium'] = True
    db.set(f'user_{id}', d)
    users = {}
    noww = time.time()
    users['vip'] = noww
    db.set(f'vip_{id}', users)
    db.set(f"vipp_{id}_time", int(timenv))
    us = bot.get_chat(id)
    if us.username is None:
        user = "ŸÑÿß ŸäŸàÿ¨ÿØ"
    else:
        user = "@" + us.username
    name = us.first_name
    today = datetime.date.today()
    end_date = today + datetime.timedelta(days=int(timenv))
    now = datetime.datetime.now()
    HM = now.strftime("%p")
    if str(HM) == str("PM"):
        how = "ŸÖÿ≥ÿßÿ°Ÿã"
    else:
        how = "ÿµÿ®ÿßÿ≠ÿßŸã"
    hour = now.hour
    minutes = now.minute
    seconds = now.second
    d = int(timenv)
    h = int(timenv) * 24
    m = int(timenv) * 24 * 60
    s = int(timenv) * 24 * 60 * 60
    reb2 = f"""*‚Ä¢ ÿ™ŸáÿßŸÜŸäŸÜÿß ÿå ÿ™ŸÖ ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ŸÑÿ≠ÿ≥ÿßÿ®ŸÉ ŸÅŸä ÿßŸÑÿ®Ÿàÿ™ ‚úÖ*\n\n_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† ‚è±Ô∏è:_\n\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}\n- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}\n\n*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ :*\n\n- ŸäŸàŸÖ : {end_date}\n- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}\n- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
    reb = f"""*‚Ä¢ ÿ™ŸÖÿ™ ÿπŸÖŸÑŸäÿ© ÿ™ŸÅÿπŸäŸÑ ·¥†…™·¥ò ÿ¨ÿØŸäÿØŸá üî•*
`{id}`
*‚Ä¢ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ŸàÿßŸÑŸÖÿØÿ© ‚è±:*

_‚Ä¢ ŸàŸÇÿ™ ÿßŸÑÿ™ŸÅÿπŸäŸÑ :_

- ÿßŸÑŸäŸàŸÖ : {today}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}

_‚Ä¢ ŸÖÿØÿ© ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ¬† :_

- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿßŸäÿßŸÖ : {d}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ≥ÿßÿπÿßÿ™ : {h}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿØŸÇÿßÿ¶ŸÇ : {m}
- ÿßŸÑŸÖÿØÿ© ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä : {s}

*‚Ä¢ ŸàŸÇÿ™ ÿßŸÜÿ™Ÿáÿßÿ° ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ :*

_‚Ä¢ ÿ≥ŸäŸÜÿ™ŸáŸä ÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿßŸÑÿπÿ∂Ÿà ŸÅŸä :_

- ŸäŸàŸÖ : {end_date}
- ÿßŸÑÿ≥ÿßÿπÿ© : {hour} {how}
- ÿßŸÑÿØŸÇŸäŸÇÿ© : {minutes}"""
    bot.send_message(chat_id=int(sudo), text=reb, parse_mode="Markdown")
    bot.send_message(chat_id=int(id), text=reb2, parse_mode="Markdown")
def account(call):
    maintenance_mode = db.get("maintenance_mode") if db.exists("maintenance_mode") else False
    if maintenance_mode == True:
        bot.answer_callback_query(call.id, text="ÿßŸÑÿ®Ÿàÿ™ ŸÇŸäÿØ ÿßŸÑÿµŸäÿßŸÜÿ© ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ± ÿ≠ÿßŸÑŸäÿßŸã ‚öôÔ∏è",show_alert=True)
        return False
    cid, data, mid = call.from_user.id, call.data, call.message.id
    e = 5
    how = ""
    if e == 5:
        x = giiiift(cid)
        if x is not None:
            duration = datetime.timedelta(seconds=x)
            noww = datetime.datetime.now()
            target_datetime = noww + duration
            remaining_time = target_datetime - noww
            hours = remaining_time.seconds // 3600
            minutes = (remaining_time.seconds % 3600) // 60
            seconds = remaining_time.seconds % 60
            if hours > 0:
                how = f"{hours} ÿ≥ÿßÿπÿ©"
            elif minutes > 0:
                how = f"{minutes} ÿØŸÇŸäŸÇÿ©"
            else:
                how = f"{seconds} ÿ´ÿßŸÜŸäÿ©"
        else:
            how = "ŸäŸÖŸÉŸÜŸÉ ÿßŸÑŸÖÿ∑ÿßŸÑÿ®ÿ© ÿ®Ÿáÿß üéÅ"
        acc = get(cid)
        user_id = call.from_user.id
        coins, users = acc['coins'], len(get(cid)['users'])
        info = db.get(f"user_{call.from_user.id}")
        daily_count = int(db.get(f"user_{user_id}_daily_count")) if db.exists(f"user_{user_id}_daily_count") else 0
        daily_gift = int(db.get("daily_gift")) if db.exists("daily_gift") else 30
        all_gift = daily_count * daily_gift
        buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
        trans = int(db.get(f"user_{user_id}_trans")) if db.exists(f"user_{user_id}_trans") else 0
        prem = 'Premium' if info['premium'] == True else 'Free'
        codes = int(db.get(f"cd_{user_id}")) if db.exists(f"cd_{user_id}") else 0
        po = int(db.get(f"po_{user_id}")) if db.exists(f"po_{user_id}") else 0
        textt = f'''
‚Ä¢ üóÉÔ∏è] ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ≠ÿ≥ÿßÿ®ŸÉ 

‚Ä¢ ‚ùáÔ∏è] ÿπÿØÿØ ŸÜŸÇÿßÿ∑ ÿ≠ÿ≥ÿßÿ®ŸÉ : {coins}
‚Ä¢ ‚ùáÔ∏è] ÿßŸÑŸÜŸÇÿßÿ∑ ÿßŸÑÿ™Ÿä ÿßÿ≥ÿ™ÿÆÿØŸÖÿ™Ÿáÿß : {po}

‚Ä¢ üåÄ] ÿπÿØÿØ ÿπŸÖŸÑŸäÿßÿ™ ÿßŸÑÿßÿ≠ÿßŸÑŸá ÿßŸÑÿ™Ÿä ŸÇŸÖÿ™ ÿ®Ÿáÿß : {users}
‚Ä¢ üë§] ŸÜŸàÿπ ÿßÿ¥ÿ™ÿ±ÿßŸÉŸÉ ÿØÿßÿÆŸÑ ÿßŸÑÿ®Ÿàÿ™ : <code>{prem}</code>
‚Ä¢ üìÆ] ÿπÿØÿØ ÿßŸÑÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ™Ÿä ÿ∑ŸÑÿ®ÿ™Ÿáÿß : {buys}
‚Ä¢ ‚ôªÔ∏è] ÿπÿØÿØ ÿßŸÑÿ™ÿ≠ŸàŸäŸÑÿßÿ™ ÿßŸÑÿ™Ÿä ŸÇŸÖÿ™ ÿ®Ÿáÿß : {trans}

‚Ä¢ ‚ùáÔ∏è] ÿπÿØÿØ ÿßŸÑŸÜŸÇÿßÿ∑ ÿßŸÑŸÑŸä ÿ¨ŸÖÿπÿ™Ÿáÿß ŸÖŸÜ ÿßŸÑŸáÿØÿßŸäÿß ÿßŸÑŸäŸàŸÖŸäÿ© : {all_gift}
‚Ä¢ üí≥] ÿπÿØÿØ ÿßŸÉŸàÿßÿØ ÿßŸÑŸáÿØÿßŸäÿß ÿßŸÑÿ™Ÿä ÿßÿ≥ÿ™ÿÆÿØŸÖÿ™Ÿáÿß : {codes}
‚Ä¢ üéÅ] ÿπÿØÿØ ÿßŸÑŸáÿØÿßŸäÿß ÿßŸÑŸäŸàŸÖŸäÿ© ÿßŸÑÿ™Ÿä ÿ¨ŸÖÿπÿ™Ÿáÿß : {daily_count}
‚Ä¢ üéÅ] ŸÖÿ™ÿ®ŸÇŸä ÿπŸÑŸä ÿßŸÑŸáÿØŸäÿ© : {how}'''
        keys = mk(row_width=2)
        btn1 = btn('ÿßŸÑŸáÿØŸäÿ© ÿßŸÑŸäŸàŸÖŸäÿ© üéÅ', callback_data='dailygift')
        btn3 = btn('ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿØÿπŸàÿ© üåÄ',callback_data='share_link')
        keys.add(btn3, btn1)
        keys.add(btn('ÿ±ÿ¨Ÿàÿπ ‚Ü™Ô∏è', callback_data='back'))
        bot.edit_message_text(text=textt,chat_id=cid,message_id=mid,reply_markup=keys)
        return
def use_link(message,us):
    join_user = message.from_user.id
    count_coins = db.get("user_trans")
    rand = db.get("user_tran")
    user_from = db.get("user_iddd")
    if str(rand) == str(us):
        joo = db.get(f"user_{join_user}")
        joo['coins'] = int(joo['coins']) + int(count_coins)
        db.set(f"user_{message.from_user.id}", joo)
        db.delete('user_tran')
        bot.reply_to(message, f"‚Ä¢ ÿ™ŸÖ ÿßÿ∂ÿßŸÅÿ© *{count_coins}* ŸÜŸÇÿßÿ∑ ÿßŸÑŸâ ÿ≠ÿ≥ÿßÿ®ŸÉ ‚úÖ\n‚Ä¢ ÿ®Ÿàÿßÿ≥ÿ∑Ÿá ÿ±ÿßÿ®ÿ∑ ÿßŸÑÿ™ÿ≠ŸàŸäŸÑ ŸÖŸÜ : [{user_from}](tg://user?id={user_from})\n\n‚Ä¢ ÿßÿµÿ®ÿ≠ÿ™ ŸÜŸÇÿßÿ∑ŸÉ : {joo['coins']} ",parse_mode="Markdown",reply_markup=bk)
        bot.send_message(chat_id=int(user_from), text=f"‚Ä¢ ÿ™ŸÖ ÿ™ÿ≠ŸàŸäŸÑ ‚úÖ : {count_coins} ŸÜŸÇÿßÿ∑ \n\n- ÿßŸÑŸâ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ : [{join_user}](tg://user?id={join_user})\n\n- ÿπÿØÿØ ŸÜŸÇÿßÿ∑Ÿá ÿßŸÑÿßŸÜ : {joo['coins']}",parse_mode="Markdown",reply_markup=bk)
        bot.send_message(chat_id=int(sudo), text=f"*‚Ä¢ ÿπÿ≤Ÿäÿ≤Ÿä ÿßŸÑÿßÿØŸÖŸÜ* : \n\n*‚Ä¢ ÿ™ŸÖÿ™ ÿπŸÖŸÑŸäÿ© ÿ™ÿ≠ŸàŸäŸÑ ŸÜŸÇÿßÿ∑ ÿ¨ÿØŸäÿØŸá ‚ôªÔ∏è*\n‚Ä¢ ÿßŸÑŸÖÿ®ŸÑÿ∫ : {count_coins}\n‚Ä¢ ÿßŸÑŸä : [{message.from_user.first_name}](tg://user?id={join_user})\n‚Ä¢ ÿßŸäÿØŸäŸá : [{join_user}](tg://user?id={join_user})\n ŸÜŸÇÿßÿ∑Ÿá ÿßŸÑÿßŸÜ : `{joo['coins']}`\n\n‚Ä¢ ŸÖŸÜ : [{user_from}](tg://user?id={user_from})",parse_mode="Markdown")
        trans = int(db.get(f"user_{user_from}_trans")) if db.exists(f"user_{user_from}_trans") else 0
        count_trans = trans + 1
        db.set(f"user_{user_from}_trans", int(count_trans))
        db.delete('user_iddd')
        db.set(f"user_trans", 0)
        user_id = message.from_user.id
        user_from = db.get("user_iddd")
        code = int(db.get(f"po_{user_from}")) if db.exists(f"po_{user_from}") else 0
        daily_count = code + int(count_coins)
        db.set(f"po_{user_from}", int(daily_count))
        typ = float(db.get(f"typ_{from_user}")) if db.exists(f"typ_{from_user}") else 0.0
        ftt = typ + 0.1
        db.set(f"typ_{from_user}", float(ftt))
        return
    else:
        bot.reply_to(message, f"*‚Ä¢ üìé] ÿßŸÑÿ±ÿßÿ®ÿ∑ ÿ∫Ÿäÿ± ÿµÿ≠Ÿäÿ≠ ÿßŸà ÿßŸÜÿ™Ÿáÿ™ ÿµŸÑÿßÿ≠Ÿäÿ© ÿßŸÑÿ±ÿßÿ®ÿ∑ ‚ùå*",parse_mode="Markdown",reply_markup=bk)

def get_url_click_force(message):
    xx = checks(message.text)
    if not xx:
        bot.reply_to(message, "‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠.")
        return
    load_ = db.get("accounts")
    session = random.choice(load_)
    o = asyncio.run(get_msgs(session['s'], message.text))
    print(o)
    if not o:
        bot.reply_to(message, "‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠.")
        return
    res = isinstance(o, list)
    if not res:
        bot.reply_to(message, "‚Ä¢ ÿßÿ±ÿ≥ŸÑ ÿ±ÿßÿ®ÿ∑ ÿßŸÑŸÖŸÜÿ¥Ÿàÿ± ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠.")
        return
    keys = mk()
    for text in o:
        btn1 = btn(text=text, callback_data=f"V-{text}-{message.text}")
        keys.add(btn1)
    keys.add(btn('ÿ±ÿ¨Ÿàÿπ ', callback_data='back'))
    bot.reply_to(message, "ÿßÿÆÿ™ÿ± ÿßŸÑÿ≤ÿ± ÿßŸÑÿ∞Ÿä ÿ™ÿ±ŸäÿØ ÿ±ÿ¥ŸÇŸá", reply_markup=keys)
    
def get_amount_click_force(message, text, url):
    try:
        amount = int(message.text)
    except:
        bot.reply_to(message, '‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿ±ŸÇŸÖ ŸÅŸÇÿ∑ ÿå ÿßÿπÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±Ÿá ÿßÿÆÿ±Ÿä')
        return
    if amount < 1:
        bot.reply_to(message,'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÉÿ®ÿ± ŸÖŸÜ <strong>0</strong> ..',reply_markup=bk)
        return
    if amount > 2000:
        bot.reply_to(message,'ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿπÿØÿØ ÿßŸÇŸÑ ŸÖŸÜ <strong>2000</strong> ..',reply_markup=bk)
        return
    pr = vote_price * amount
    acc = db.get(f'user_{message.from_user.id}')
    if int(pr) > acc['coins']:
        bot.reply_to(message, f'‚Ä¢ ŸÜŸÇÿßÿ∑ŸÉ ÿ∫Ÿäÿ± ŸÉÿßŸÅŸäÿ© ÿå ÿ™ÿ≠ÿ™ÿßÿ¨ ÿßŸÑŸä  <strong>{pr-amount}</strong> ŸÜŸÇÿ∑ÿ©')
        return
    x = bot.reply_to(message,f'‚Ä¢ ÿßŸÑŸÉŸÖŸäÿ© : <strong>{amount}</strong>\n\n‚Ä¢ ÿßŸÑÿßŸÜ ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ•ŸÜÿ™ÿ∂ÿßÿ± ÿ®ŸäŸÜ ÿßŸÑÿ±ÿ¥ŸÇ (ÿ®ÿßŸÑÿ´ŸàÿßŸÜŸä) \n\n‚Ä¢ ÿßÿ±ÿ≥ŸÑ 0 ÿßÿ∞ÿß ŸÉŸÜÿ™ ÿ™ÿ±ŸäÿØŸá ŸÅŸàÿ±Ÿä\n‚Ä¢ Ÿäÿ¨ÿ® ÿßŸÜ ŸÑÿßŸäÿ≤ŸäÿØ ÿπŸÜ 200')
    bot.register_next_step_handler(x, get_time_click_force, amount, text, url)
    return

def get_time_click_force(message, amount, text, url):
    try:
        time = int(message.text)
    except:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ÿßŸÑŸàŸÇÿ™ ÿ®ÿ¥ŸÉŸÑ ÿµÿ≠Ÿäÿ≠')
        return
    if time <0:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    if time >200:
        x = bot.reply_to(message,text=f'‚Ä¢ ÿ±ÿ¨ÿßÿ° ÿßÿ±ÿ≥ŸÑ ŸàŸÇÿ™ ÿßŸÑÿ±ÿ¥ŸÇ ÿ®ŸäŸÜ 0 Ÿà 200')
        return
    pr = vote_price * amount
    load_ = db.get('accounts')
    acc = db.get(f'user_{message.from_user.id}')
    typerr = 'ÿ™ÿµŸàŸäÿ™'
    db.set(f"serv_{message.from_user.id}", True)
    tim = int(db.get(f"tim_{message.from_user.id}")) if db.exists(f"tim_{message.from_user.id}") else 0
    bot.send_message(chat_id=int(sudo), text=f'‚Ä¢ ŸÇÿßŸÖ ÿ¥ÿÆÿµ ÿ®ÿ∑ŸÑÿ® ŸÖŸÜ ÿßŸÑÿ®Ÿàÿ™\n‚Ä¢ ÿßŸÑŸÜŸàÿπ : {typerr}\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount} \n‚Ä¢ ÿßŸÑÿ±ÿßÿ®ÿ∑ : {url} \n‚Ä¢ ÿßŸäÿØŸäŸá : {message.from_user.id} \n‚Ä¢ ŸäŸàÿ≤ÿ±Ÿá : @{message.from_user.username}\n‚Ä¢ ÿßŸÑŸàŸÇÿ™ ÿ®ŸäŸÜ ÿßŸÑÿ™ÿµŸàŸäÿ™ : {time} ')
    true, false = 0, 0
    tmmmm = 0
    nume = int(amount)
    prog = bot.send_message(chat_id=int(message.from_user.id), text=f'‚Ä¢ ÿ™ŸÖ ÿ®ÿØÿ° ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ\n\n‚Ä¢ ÿßŸÑÿπÿØÿØ : {amount}\n‚Ä¢ Ÿäÿ™ŸÖ ÿßŸÑÿßÿ±ÿ≥ÿßŸÑ ÿßŸÑŸä : {url}')
    for y in load_:
        if true >= amount:
            break
        try:
            x = asyncio.run(click_force(y['s'], text, url, time))
            if x == 'o':
                continue
            if x == True:
                true += 1
                nume -= 1
            else:
                false += 1
        except Exception as e:
            print(e)
            continue
    if true >= 1:
        acc = db.get(f'user_{message.from_user.id}')
        for ix in range(true):
            acc['coins'] -= vote_price
        db.set(f'user_{message.from_user.id}', acc)
    addord()
    user_id = message.from_user.id
    buys = int(db.get(f"user_{user_id}_buys")) if db.exists(f"user_{user_id}_buys") else 0
    buys+=1
    db.set(f"user_{user_id}_buys", int(buys))
    bot.reply_to(message,text=f'‚Ä¢ ÿ™ŸÖ ÿßŸÉÿ™ŸÖÿßŸÑ ÿ∑ŸÑÿ®ŸÉ ÿ®ŸÜÿ¨ÿßÿ≠ ‚úÖ:\n‚Ä¢ ÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {true}\n‚Ä¢ ŸÑŸÖ Ÿäÿ™ŸÖ ÿßÿ±ÿ≥ÿßŸÑ : {false} \n‚Ä¢ ÿ™ŸÖ ÿÆÿµŸÖ : {amount*vote_price}',reply_markup=bk)
    db.set(f"serv_{message.from_user.id}", False)
    return
    
    
try:
    bot.infinity_polling()
    bot2.infinity_polling()
except:
    pass